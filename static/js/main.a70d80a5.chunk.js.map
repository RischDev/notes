{"version":3,"sources":["components/notes/route/styles/Menu.Module.css","components/notes/routeForm/styles/RouteInfo.Module.css","components/notes/route/notes/styles/FolderEdit.Module.css","components/notes/routeForm/Section/styles/SectionFolderEdit.Module.css","resources sync /^/.*/ItemNames/.json$","components/notes/routeForm/Section/styles/Section.Module.css","components/notes/styles/RoutesListItem.Module.css","components/common/styles/Icon.Module.css","components/notes/route/notes/styles/State.Module.css","components/notes/routeForm/Section/styles/SectionState.Module.css","components/notes/route/notes/styles/SmallItem.Module.css","components/notes/route/tracker/styles/Tracker.Module.css","components/notes/styles/RoutesList.Module.css","components/notes/route/notes/styles/NoteSection.Module.css","components/notes/route/notes/styles/SmallModifiers.Module.css","components/notes/route/tracker/styles/Modifiers.Module.css","components/notes/route/tracker/styles/Item.Module.css","components/notes/styles/NotesHome.Module.css","components/notes/route/notes/styles/Text.Module.css","components/notes/route/notes/styles/ItemsList.Module.css","components/notes/route/notes/styles/Notes.Module.css","components/notes/routeForm/Section/styles/ItemDropdown.Module.css","components/notes/routeForm/Section/styles/ModifierDropdown.Module.css","components/common/styles/Button.Module.css","components/notes/route/styles/Route.Module.css","components/notes/route/notes/styles/Image.Module.css","components/notes/route/styles/LargeImage.Module.css","components/notes/routeForm/styles/RouteForm.Module.css","components/notes/routeForm/Section/styles/SectionText.Module.css","components/notes/routeForm/Section/styles/SectionImage.Module.css","resources sync /^/.*/DefaultFoundItems/.json$","resources sync /^/.*/DefaultFoundModifiers/.json$","components/notes/route/notes/styles/themes/MMBN/MMBN-SmallItem.Module.css","components/notes/route/notes/styles/themes/MMSF/MMSF-SmallItem.Module.css","components/notes/route/notes/styles/themes/MMBN/MMBN-SmallModifiers.Module.css","components/notes/route/tracker/styles/themes/MMBN/MMBN-Modifiers.Module.css","components/notes/route/tracker/styles/themes/MMBN/MMBN-Item.Module.css","components/notes/route/tracker/styles/themes/MMSF/MMSF-Item.Module.css","components/notes/routeForm/Section/styles/SectionItem.Module.css","components/notes/routeForm/Section/styles/PreviewImage.Module.css","components/notes/routeForm/styles/SectionList.Module.css","reportWebVitals.js","components/common/Icon.js","components/common/functions/useSuspense.js","components/notes/RoutesListItem.js","components/common/Button.js","components/notes/RoutesList.js","components/common/functions/useMatchMedia.js","components/common/NotesContext.js","components/notes/route/Menu.js","components/notes/route/notes/Text.js","components/notes/route/notes/SmallModifiers.js","components/notes/route/notes/SmallItem.js","components/notes/route/notes/ItemsList.js","components/notes/route/notes/Image.js","components/notes/route/notes/State.js","components/common/functions/performFolderEditAction.js","components/common/functions/performFolderEditSort.js","components/common/functions/getPathsToSlot.js","components/common/functions/getFolderEditInputs.js","components/notes/route/notes/FolderEdit.js","components/notes/route/notes/NoteSection.js","components/notes/route/notes/Notes.js","components/notes/route/tracker/Modifiers.js","components/notes/route/tracker/Item.js","components/notes/route/tracker/Tracker.js","components/notes/route/LargeImage.js","components/common/RouteContext.js","components/notes/route/Route.js","components/common/GameContext.js","components/notes/routeForm/Section/ItemDropdown.js","components/notes/routeForm/Section/ModifierDropdown.js","components/notes/routeForm/Section/SectionText.js","components/notes/routeForm/Section/SectionItem.js","components/notes/routeForm/Section/PreviewImage.js","components/notes/routeForm/Section/SectionImage.js","components/notes/routeForm/Section/SectionState.js","components/common/functions/getNewFolder.js","components/notes/routeForm/Section/SectionFolderEdit.js","components/notes/routeForm/Section/Section.js","components/notes/routeForm/SectionList.js","components/notes/routeForm/RouteInfo.js","components/notes/routeForm/RouteForm.js","components/notes/NotesHome.js","components/notes/NotesTool.js","components/App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Icon","hoverClass","this","props","hover","styles","hiddenClass","hidden","floatClass","float","right","grayscaleClass","grayscale","src","className","icon","size","onClick","alt","altText","React","Component","useSuspenseResource","promiseCallback","deps","useMemo","promise","result","status","suspender","r","read","createSuspenseResource","RoutesListItemImpl","notes","notesResource","path","wrapper","to","gameId","link","title","category","author","version","RoutesListItem","a","fetch","process","response","json","fallback","Button","btn","type","text","routes","require","RoutesList","match","params","gameRoutes","history","push","state","gameName","name","createRoute","bind","gameArt","header","route","useMatchMedia","query","useState","window","matchMedia","matches","setMatches","useEffect","mediaQueryList","callback","addListener","removeListener","NotesContext","createContext","Menu","useContext","game","showNotes","showTracker","mode","foundModifiers","folderEditView","setContext","changeMode","useCallback","resetTracker","newFoundItems","JSON","parse","stringify","newFoundModifiers","foundItems","localStorage","setItem","updateNotesDisplay","updateTrackerDisplay","swapNotesAndTracker","modeText","previewButton","preview","swapPreview","notesText","menu","buffer","row","label","value","select","onChange","target","showNotesText","showTrackerText","col","testId","dropdown","Text","item","includes","modifier","found","children","Modifier","foundClass","sectionId","updateFound","SmallModifiers","theme","themeMMBN","updateTracker","modifiers","length","SmallItem","themeMMSF","Items","typeClass","i","types","low","high","itemArt","ItemsList","itemsList","completedItems","items","some","j","item2","itemContainer","itemList","Image","image","imageContainer","State","stateContainer","key","stateField","shown","keyLabel","performFolderEditAction","folder","action","gameInfo","newFolder","item1","slot","modifier1","slot1","slot2","modifier2","regged","tagged","parseInt","tempItem","sortType","reverse","sort","nameJP","damageSort","elementOrder","element","counts","capacity","performFolderEditSort","getPathsToSlot","cursor","cursorPosition","goal","pathsToSlot","numInputs","Math","sign","itemsShown","abs","min","console","log","max","getNumInputs","inputs","count","actionInputs","split","input","getFolderEditInputs","folderEdit","actionIndex","sortCursor","Array","paths","bestInputs","Number","MAX_VALUE","bestPath","tempInputs","pathsToFirstItem","bestPath1","bestPath2","pathsToSecondItem","path2","sortTypes","splice","indexOf","inverseInputs","Action","FolderEdit","actionsList","tempFolder","prevFolder","folderEditContainer","toString","padStart","shouldUpdate","oldProps","newProps","areShallowEqual","NoteSection","memo","section","ref","noteRef","textContainer","fullscreenImage","previousSection","nextSection","Notes","sectionTop","scrollPosition","setState","sections","numSections","setNumSections","notesRef","createRef","sectionRefs","refsArray","renderNewSections","entries","observer","isIntersecting","IntersectionObserver","root","rootMargin","threshold","current","scrollIntoView","behavior","disconnect","observe","handleKeyPress","keyPress","preventDefault","fullSizeClass","fullSize","onScroll","scrollTop","newSectionTop","floor","getBoundingClientRect","height","onKeyDown","tabIndex","slice","Modifiers","Item","Tracker","tracker","list","LargeImage","fullscreenPreview","tagName","RouteContext","RouteImpl","routeContext","isMobile","initialTrackerDisplay","initialMode","initialFoundItems","getItem","initialFoundModifiers","getInitialState","updates","getContextValue","Provider","rightColumn","Route","routePath","GameContext","ItemDropdown","onUpdateItem","updateItem","ModifierDropdown","onModifierUpdate","updateModifier","SectionText","setCursor","useRef","setSelectionRange","updateItemRef","newText","updateText","updateModifierRef","textarea","placeholder","selectionStart","moveTextUp","moveTextDown","deleteText","SectionItem","newItem","moveItemUp","moveItemDown","deleteItem","PreviewImage","img","updateImage","SectionImage","deleteIcon","deleteImage","file","reader","FileReader","readAsDataURL","onload","onerror","error","getBase64","files","SectionState","htmlFor","textInput","defaultValue","newState","updateState","onStateValueChange","checkbox","checked","onStateShownChange","deleteState","addState","getNewFolder","ItemOption","itemDropdown","onUpdate","spacer","updateAction","actionTypes","updateItem1","deleteAction","updateItem2","ActionsList","SectionFolderEdit","newFolderEdit","updateFolderEdit","itemParts","deleteFolderEdit","addFolderEdit","Section","newSection","setSection","updateTextRef","addText","chosenText","aboveText","moveTextUpRef","belowText","moveTextDownRef","deleteTextRef","addItem","chosenItem","aboveItem","moveItemUpRef","belowItem","moveItemDownRef","deleteItemRef","getLastState","getLastFolderEdit","insertSection","addSection","sectionHeader","moveSectionUp","moveSectionDown","deleteSection","itemsContainer","SectionList","displayedSections","setDisplayedSections","setSectionRef","newSections","addSectionRef","chosenSection","aboveSection","moveSectionUpRef","belowSection","moveSectionDownRef","deleteSectionRef","initialState","getLastStateRef","initialFolderEdit","getLastFolderEditRef","sectionList","dataLength","next","hasMore","loader","scrollableTarget","equal","RouteInfo","games","generateDownload","document","createElement","href","Buffer","from","download","click","importText","lines","replace","line","textId","importJSON","handleUpload","readAsText","updateGame","newGame","routeInfo","onBlur","fileInput","loadLastRouteEdit","RouteFormImpl","initialPath","initialGame","initialRoute","gameContext","prevState","form","newRoute","setNewRoute","alert","RouteForm","NotesHome","NotesTool","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a70d80a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"xXHLUT6W8RJi5emrYTdXtA==\",\"col\":\"CnRoll7TlszRXat43PWXAg==\",\"dropdown\":\"JrfcZHEvr8UPnzXuJMHF-w==\",\"btn\":\"H4piT5m5xxAeJgd6q22P8Q==\",\"label\":\"_7jKgETxlxoLvDuTdvBkMzQ==\",\"select\":\"KG0H+Fq-MHEl11KN58EpdA==\",\"row\":\"_969+60TTtQ+CbNdl0l2bpw==\",\"buffer\":\"XxPDP31lcrwTRiqaUZJP9A==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"routeInfo\":\"F2mb1ryN5dL6eMNbLKt4Uw==\",\"header\":\"OSsHajB4SDr8TjqsplaIWQ==\",\"label\":\"xcW5POQhuEBlcFt6PKVSVQ==\",\"textInput\":\"w7pkMgYuQLl+sWgDaVBgqw==\",\"select\":\"xKOVlmNnYHE9ixSdJrX4BA==\",\"fileInput\":\"Z-FoL14O644+2LkpM9C1+g==\",\"wrapper\":\"wo+buBWrOZk1PMR18OMJIw==\",\"spacer\":\"RM8C5ZOv6S+rkWqq-XdD-g==\",\"btn\":\"XBY927kjJMdn0IhyvOlsnA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"folderEditContainer\":\"LSKpzbXnrrbZCykMWtdOQw==\",\"wrapper\":\"_1wFwvcusmxAsvYz2imN2qA==\",\"action\":\"S7LItWUm7RYsqARnANwpog==\",\"label\":\"fpt02CqbUlqRuQwZxvATdQ==\",\"folderLabel\":\"LaQszEbLva3ru9GAYQybRQ==\",\"regged\":\"y1-bq5+lun3VaILExSYQPA==\",\"tagged\":\"XGP6zEszAA72Lp9sSpyZWg==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_8hQzG5tyWMAIcPPZpZS3Sg==\",\"checkbox\":\"IByYpCIlkO1FtDVeyDpVqw==\",\"select\":\"-ewhwH7ea2AMIGe0m+JSDg==\",\"itemDropdown\":\"PTwnFTQB0vkcTKyJhu22ew==\",\"spacer\":\"ZuIZb7irA2Nq0vApdF0www==\"};","var map = {\n\t\"./MMBN1/ItemNames.json\": 150,\n\t\"./MMBN2/ItemNames.json\": 151,\n\t\"./MMBN3/ItemNames.json\": 152,\n\t\"./MMBN4/ItemNames.json\": 153,\n\t\"./MMBN5/ItemNames.json\": 154,\n\t\"./MMBN6/ItemNames.json\": 155,\n\t\"./MMSF1/ItemNames.json\": 156,\n\t\"./MMSF2/ItemNames.json\": 157,\n\t\"./MMSF3/ItemNames.json\": 158,\n\t\"./OSS/ItemNames.json\": 159\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionHeader\":\"Fn2+ipiPE4fK1vlv98yyVw==\",\"wrapper\":\"YDnMnzRQT13RQ0tw3MJFvg==\",\"section\":\"PsIzDIbCTG4wrUTM6er1xg==\",\"header\":\"tmlngklOZIir4i+lC6IW4A==\",\"label\":\"A9r+GjnqNKWHmScZwxRXNA==\",\"textContainer\":\"Ybo3pMftltkyH7S+VSXuHg==\",\"itemsContainer\":\"vEEVgSo6a0KWOf99T9aR2Q==\",\"imageContainer\":\"SDoEA1A3zyDA51P6mgVkdg==\",\"stateContainer\":\"vFrdg23acVv1XF6MnymUTA==\",\"folderEditContainer\":\"+DlBDu8VMDlh0Pt6Xh+8AQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NEpq3jOU-cfHWdS2rh8+ag==\",\"link\":\"_2pdIMk0Ir3pXmx1Xr+fg1Q==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"_8Y9KwDED3pL1sj0GpWYvjg==\",\"small\":\"nNyUBQj2J9jPfUO5JiOGeQ==\",\"large\":\"_1Z-jj10VJWxPwBlAjAH7BA==\",\"right\":\"GbThlTPUkvuaDtUf6IxGvA==\",\"hover\":\"J64ouaAWQMauqP7LsL1fwA==\",\"hidden\":\"A89rVKlFqVDJwndCGK+8VA==\",\"grayscale\":\"ysKiPku3Q-kIx06ZWt5Yng==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stateContainer\":\"Te-IS++X-vMrDVGbhE0MyA==\",\"wrapper\":\"gE0QzolHy5XVIRxed9pGbw==\",\"stateField\":\"_6qvaBjDJXwHBvgA0BKQ2Pg==\",\"label\":\"DR3GIinvbBZpOQNzUsxBcg==\",\"keyLabel\":\"p-J7E1+jPLTZvyu2LNCOkA==\",\"hidden\":\"_8PLwckjtYr4f9wB86bFxpA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"y5B2wc+skuHhhzAjukvruA==\",\"label\":\"kUnP3Ar0a1m+HbV+DplkEQ==\",\"textInput\":\"AVRkZ5gpk+jBv8JvzpbMpQ==\",\"checkbox\":\"M3mU1IdC5iytD5jD1UqDqw==\",\"stateField\":\"c-73e5C9+ol9z0dIxCFcYg==\",\"inputs\":\"H3W2vtxDGkly6EGYGDnDCg==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_7rtKJf8nKYxuwaOyE0Vaag==\",\"item\":\"w5hzSR00kbFhM7sGH1Bjlg==\",\"title\":\"N5KJVDyx+YbeRXJAZZiBEw==\",\"itemArt\":\"caD+kBrLmVJ1g9Dq-b2D0A==\",\"found\":\"_1EpZ2NE+IpuAPbBkopLddQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tracker\":\"YAl33CoVALZcQjfw4s0pIA==\",\"section\":\"Jl+N7ZghMEVXGVE6jjQaFw==\",\"fullSize\":\"nYQVwAOMako6LxA8wYwj-w==\",\"header\":\"xd7zJA8T9G5XPluwjY+RcA==\",\"list\":\"IOPBuqwXaW3XnArW51IxnA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"vhNR8VmYBTMqfhbRKh8Wjw==\",\"header\":\"gMPqKffIBVULdBK7fHC4uw==\",\"gameArt\":\"hsKjXwsJVmOY9sVfN15huA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"_8ZlAGYvlclwi5mH0gPdsYg==\",\"textContainer\":\"O4MVbUJ03qoYxtiQnBxIpw==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"je3fiDxkH-wARm48J2g3nw==\",\"found\":\"UnIBJajqFY0gKPrX28GK8A==\",\"modifier\":\"FE1MkvafZKC5iMxRGtllxA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"_1gzKLAp0OdCpb1c7oxGISg==\",\"found\":\"_9HGbN4+3ght6VdlvEA8CBw==\",\"modifier\":\"N7fqAT6nZTB8Db2fwwoXxA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"po8ytc6ZPKeFsPaq1B6DPg==\",\"title\":\"BfFYBEI-pD5vMEjoL9nqjA==\",\"itemArt\":\"xTmqrmM5kyO7WQatmtuPXg==\",\"found\":\"AnjhVKivgq5UNUJofLxIbg==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Lm57YgWaWh85Vmy-lhtxUQ==\",\"link\":\"V2uGt6aLj6bidNf8cs5XPw==\",\"img\":\"+tQpgnzty7e1n7MQb7JeNA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"PXF+fVECGiOxKtE1FilFfA==\",\"found\":\"V8zrPJ7YBmtPDtkK9lMiRQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"gkRtcUcX8QHWAt6cQdjR-A==\",\"label\":\"iZQuvJdnmL06OdMKWplBig==\",\"itemList\":\"tO3hUDLBbc1k3B64JAvV7Q==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"D7t7QHVyMrFrL9nnvIcSTQ==\",\"fullSize\":\"Z2QuORZCu29IVOoBva0gSQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"yinFPwZe6Roe565P19C88Q==\",\"buffer\":\"KFX5eQG4tJAt64AIBBqaCw==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"nYw8fGtHVp94BjKFPlZrXg==\",\"buffer\":\"_7JzK3Xdoz+3RKDCc3ja7NQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"cgdLDN9QZos3+swRGSNDuA==\",\"small\":\"ZS1Q6AvMYpcmsF-pfmjPkQ==\",\"medium\":\"M7+6K4VyQx7-9DYoH+G8mA==\",\"large\":\"CsJhrkdszb0AmJFugX0jiA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UTZxbvaTMm+lWmnsdCRffg==\",\"rightColumn\":\"RSFxkblLQ1MYiiX1dqWMAQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"zdu+uouwgVTTKWgkKdw8Yg==\",\"image\":\"q3o3g1+lH3R7tYTrWIWA1A==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreenPreview\":\"Rmss47snPFg2uzJ7of2Tzg==\",\"image\":\"nkeiTFBqr9xIqEREKalF5w==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"m8kJZp2I0TrXIiheUxsEQw==\",\"form\":\"qaPmaQNxVM4TQZJIPUjhYw==\",\"textInput\":\"-cW6y7NjHV8EmrwnOV7ACA==\",\"textarea\":\"v6S6qBWjlCe5IXPhWL-P5Q==\",\"select\":\"UIH57BYddBqpCyaSSjdJEw==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"cxKxYrUQ1H2mP5sHg7A+sA==\",\"textarea\":\"vGeQ16DUwY7WcXHyw5IFPA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"-SV1A7dsbnXtaIvbNkzKag==\",\"input\":\"dYwE4RPc0knRLcCI6kV5WQ==\"};","var map = {\n\t\"./MMBN1/DefaultFoundItems.json\": 131,\n\t\"./MMBN2/DefaultFoundItems.json\": 132,\n\t\"./MMBN3/DefaultFoundItems.json\": 133,\n\t\"./MMBN4/DefaultFoundItems.json\": 134,\n\t\"./MMBN5/DefaultFoundItems.json\": 135,\n\t\"./MMBN6/DefaultFoundItems.json\": 136,\n\t\"./MMSF1/DefaultFoundItems.json\": 137,\n\t\"./MMSF2/DefaultFoundItems.json\": 138,\n\t\"./MMSF3/DefaultFoundItems.json\": 139,\n\t\"./OSS/DefaultFoundItems.json\": 140\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 77;","var map = {\n\t\"./MMBN1/DefaultFoundModifiers.json\": 141,\n\t\"./MMBN2/DefaultFoundModifiers.json\": 142,\n\t\"./MMBN3/DefaultFoundModifiers.json\": 143,\n\t\"./MMBN4/DefaultFoundModifiers.json\": 144,\n\t\"./MMBN5/DefaultFoundModifiers.json\": 145,\n\t\"./MMBN6/DefaultFoundModifiers.json\": 146,\n\t\"./OSS/DefaultFoundModifiers.json\": 147\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"lACZJy5f8xdSrLnuXI+OQA==\",\"title\":\"Gu7wy+yntvpYYWeSwuGh+Q==\",\"itemArt\":\"DqemJKnhFEsfhAETKFImxA==\",\"Battlechips\":\"XWk5Mm09vNAfeQQ-2pcgKg==\",\"Standard\":\"dIQqW1nA9dKf9vjobQ3Zig==\",\"Mega\":\"_27dN1wr6N-E8HGtYzu3i7g==\",\"Giga\":\"Ykq8OpH1iVEGZr274xMARA==\",\"PAs\":\"WAakUYlihRJYkOAEy6o0PQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"OkzWEE1m09jk2IPAJqnVEA==\",\"title\":\"VAwPrPgTunVG2QPkpckLaw==\",\"itemArt\":\"_0LjY-2JcgNwWCRTx9Z1iZg==\",\"Standard\":\"krXoP9KIdpx2NM8l-usxig==\",\"Mega\":\"GIcFbXmm-wOR2DicVeovZQ==\",\"Giga\":\"Sj71iWsMzdTAiBVJw2bH-w==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"_6YBe-HQ0riMJfyQ596Yq4g==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"NL9AZxuguN5EP+6hVq3ykw==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"zFUISMCEELuJHhYavzIDEw==\",\"itemArt\":\"AmqleUu8ZQJ4VPa-Uos64Q==\",\"Battlechips\":\"gdqoAhvl70hYsiQBSmhvxA==\",\"Standard\":\"_8UpDBv8ZfaSCUAcmQIdaiA==\",\"Mega\":\"p-3m0S+cgONKd3jMG9mrkA==\",\"Giga\":\"lpMquCuG9xqOGOStm2-Rvg==\",\"PAs\":\"GK+CHYSweP24aiaUW9mvOw==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"YE--Us1jjJdvW+yCUmkXBQ==\",\"Standard\":\"N2t1kZZj+UkUKbEOmhCPOA==\",\"Mega\":\"JgZvHJ7tKn7PktI293+wKA==\",\"Giga\":\"Kwgv9Hn6e4OkO3gFW7qaiA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DlTzPK-aYUXhoNkaKs0BwA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"wz7K0-J08adrSgw2tW4XJQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionList\":\"HKmqupXFGhpXSqoewiBozw==\"};","/** @format */\n\nconst reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/Icon.Module.css';\n\nclass Icon extends React.Component {\n    render() {\n        let hoverClass = this.props.hover ? styles.hover : '';\n        let hiddenClass = this.props.hidden ? styles.hidden : '';\n        let floatClass = this.props.float === 'right' ? styles.right : '';\n        let grayscaleClass = this.props.grayscale ? styles.grayscale : '';\n\n        return (\n            <img\n                src={this.props.src}\n                id={this.props.id}\n                className={`${styles.icon} ${\n                    styles[this.props.size]\n                } ${hoverClass} ${hiddenClass} ${floatClass} ${grayscaleClass}`}\n                onClick={this.props.onClick}\n                alt={this.props.altText}\n            />\n        );\n    }\n}\n\nexport default Icon;\n","/** @format */\n\nimport { useMemo } from 'react';\n\n// Converts a promise into something that works with React Suspense.\nfunction createSuspenseResource(promise) {\n    let status = 'pending';\n    let result;\n    let suspender = promise.then(\n        (r) => {\n            status = 'success';\n            result = r;\n        },\n        (e) => {\n            status = 'error';\n            result = e;\n        },\n    );\n    return {\n        read() {\n            if (status === 'pending') {\n                throw suspender;\n            } else if (status === 'error') {\n                throw result;\n            } else if (status === 'success') {\n                return result;\n            }\n        },\n    };\n}\n\nexport default function useSuspenseResource(promiseCallback, deps) {\n    return useMemo(\n        () => createSuspenseResource(promiseCallback()),\n        // Dynamic deps array because it's passed in from the caller.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        deps,\n    );\n}\n","/** @format */\n\nimport React, { Suspense } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './styles/RoutesListItem.Module.css';\nimport Icon from '../common/Icon';\nimport useSuspenseResource from '../common/functions/useSuspense';\n\nfunction RoutesListItem(props) {\n    const path = props.path;\n    const notesResource = useSuspenseResource(async () => {\n        const response = await fetch(\n            `${process.env.PUBLIC_URL}/notes/${path}.json`,\n        );\n\n        return await response.json();\n    }, [path]);\n\n    return (\n        <Suspense fallback=\"Loading...\">\n            <RoutesListItemImpl\n                {...props}\n                notesResource={notesResource}\n                gameId={props.gameId}\n                path={props.path}\n            />\n        </Suspense>\n    );\n}\n\nfunction RoutesListItemImpl(props) {\n    const notes = props.notesResource.read();\n\n    return (\n        <div id={'route-' + props.path} className={styles.wrapper}>\n            <Link\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\n                className={`${styles.link} col-5 col-m-6`}>\n                <div id={'route-title-' + props.path}>{notes.title}</div>\n            </Link>\n            <Link\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\n                className={`${styles.link} col-2 hidden-mobile`}>\n                <div>{notes.category}</div>\n            </Link>\n            <Link\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\n                className={`${styles.link} col-2 col-m-4`}>\n                <div>{notes.author}</div>\n            </Link>\n            <Link\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\n                className={`${styles.link} col-2 hidden-mobile`}>\n                <div>{notes.version}</div>\n            </Link>\n            <Link\n                to={'/notes/editRoute/' + props.path}\n                className={`${styles.link} col-1 col-m-2`}>\n                <Icon\n                    id={'route-edit-' + props.path}\n                    src=\"/icons/edit.png\"\n                    size=\"small\"\n                    altText=\"Edit\"\n                    hover={true}\n                    hidden={false}\n                />\n            </Link>\n        </div>\n    );\n}\n\nexport default RoutesListItem;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/Button.Module.css';\n\nclass Button extends React.Component {\n    render() {\n        return (\n            <button\n                id={this.props.id}\n                data-id={\n                    process.env.NODE_ENV === 'development'\n                        ? this.props.testId\n                        : null\n                }\n                className={`${styles.btn} ${styles[this.props.size]} ${\n                    this.props.className\n                }`}\n                type=\"button\"\n                onClick={this.props.onClick}>\n                {this.props.text}\n            </button>\n        );\n    }\n}\n\nexport default Button;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/RoutesList.Module.css';\nimport RoutesListItem from './RoutesListItem';\nimport Button from '../common/Button';\n\nlet routes = require('../../notes/routes.json');\n\nclass RoutesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let gameId = props.match.params.gameId;\n        let gameRoutes = routes[gameId];\n\n        if (gameRoutes == null) {\n            this.props.history.push('/notes');\n        }\n\n        this.state = {\n            gameId: props.match.params.gameId,\n            gameName: gameRoutes.name,\n            routes: gameRoutes.routes,\n        };\n\n        this.createRoute = this.createRoute.bind(this);\n    }\n\n    createRoute() {\n        this.props.history.push('/notes/createRoute/' + this.state.gameId);\n    }\n\n    render() {\n        return (\n            <div className=\"page\">\n                <div className={styles.wrapper}>\n                    <div className={'col-3 col-m-12 card'}>\n                        <h3>{this.state.gameName}</h3>\n                        <img\n                            className={styles.gameArt}\n                            src={'/gameArt/' + this.state.gameId + '.png'}\n                            alt={this.state.gameId + '.png'}\n                        />\n                    </div>\n                    <div className={'col-8 col-m-12 card'}>\n                        <h1>Routes</h1>\n                        <div className={styles.wrapper + ' ' + styles.header}>\n                            <div className=\"col-5 col-m-6\">Route Name</div>\n                            <div className=\"col-2 hidden-mobile\">Category</div>\n                            <div className=\"col-2 col-m-4\">Author</div>\n                            <div className=\"col-2 hidden-mobile\">Version</div>\n                            <div className=\"col-1 col-m-2\">Edit</div>\n                        </div>\n                        {this.state.routes.map((route) => (\n                            <RoutesListItem\n                                gameId={this.state.gameId}\n                                key={route.path}\n                                path={route.path}\n                            />\n                        ))}\n                        <Button\n                            id=\"create-route-button\"\n                            text=\"Create New Route\"\n                            size=\"medium\"\n                            onClick={this.createRoute}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RoutesList;\n","/** @format */\n\nimport { useState, useEffect } from 'react';\n\n/**\n * Example:\n *\n * const isSmallScreen = useMatchMedia('(max-width: 600px)');\n */\nexport default function useMatchMedia(query) {\n    const [matches, setMatches] = useState(\n        () => window.matchMedia(query).matches,\n    );\n\n    useEffect(() => {\n        const mediaQueryList = window.matchMedia(query);\n        const callback = (e) => setMatches(e.matches);\n\n        mediaQueryList.addListener(callback);\n        return function cleanup() {\n            mediaQueryList.removeListener(callback);\n        };\n    }, [query, setMatches]);\n\n    return matches;\n}\n","/** @format */\n\nimport { createContext } from 'react';\n\nconst NotesContext = createContext({});\n\nexport default NotesContext;\n","/** @format */\n\nimport { useContext, useCallback } from 'react';\nimport styles from './styles/Menu.Module.css';\nimport Button from '../../common/Button';\nimport useMatchMedia from '../../common/functions/useMatchMedia';\nimport NotesContext from '../../common/NotesContext';\n\nfunction Menu(props) {\n    const {\n        notes: { game },\n        showNotes,\n        showTracker,\n        mode,\n        foundModifiers,\n        folderEditView,\n        setContext,\n    } = useContext(NotesContext);\n\n    const changeMode = useCallback(() => {\n        setContext({ mode: mode === 'list' ? 'presenter' : 'list' });\n    }, [mode, setContext]);\n\n    const resetTracker = useCallback(() => {\n        let newFoundItems = JSON.parse(\n            JSON.stringify(\n                require('../../../resources/' +\n                    game +\n                    '/DefaultFoundItems.json'),\n            ),\n        );\n        let newFoundModifiers = foundModifiers;\n        if (newFoundModifiers != null) {\n            newFoundModifiers = JSON.parse(\n                JSON.stringify(\n                    require('../../../resources/' +\n                        game +\n                        '/DefaultFoundModifiers.json'),\n                ),\n            );\n        }\n\n        setContext({\n            foundItems: newFoundItems,\n            foundModifiers: newFoundModifiers,\n        });\n\n        localStorage.setItem(\n            'foundItems-' + game,\n            JSON.stringify(newFoundItems),\n        );\n        localStorage.setItem(\n            'foundModifiers-' + game,\n            JSON.stringify(newFoundModifiers),\n        );\n    }, [game, foundModifiers, setContext]);\n\n    const updateNotesDisplay = useCallback(() => {\n        setContext({ showNotes: !showNotes });\n    }, [showNotes, setContext]);\n\n    const updateTrackerDisplay = useCallback(() => {\n        setContext({ showTracker: !showTracker });\n    }, [showTracker, setContext]);\n\n    const swapNotesAndTracker = useCallback(() => {\n        setContext({ showNotes: !showNotes, showTracker: !showTracker });\n    }, [showNotes, showTracker, setContext]);\n\n    let modeText = mode === 'presenter' ? 'List Mode' : 'Presenter Mode';\n\n    let previewButton = '';\n    if (props.preview) {\n        previewButton = (\n            <Button\n                text=\"Edit Route\"\n                size=\"medium\"\n                className={`${styles.btn}`}\n                onClick={props.swapPreview}\n            />\n        );\n    }\n\n    // If on mobile, use a different button layout where users can only swap notes and tracker.\n    if (useMatchMedia('(max-width: 600px)')) {\n        let notesText = showNotes ? 'Show Tracker' : 'Show Notes';\n        return (\n            <div className={`card ${styles.menu}`}>\n                <Button\n                    text=\"Reset Tracker\"\n                    className={`${styles.btn}`}\n                    onClick={resetTracker}\n                />\n                <Button\n                    text={notesText}\n                    className={`${styles.btn}`}\n                    onClick={swapNotesAndTracker}\n                />\n                <Button\n                    text={modeText}\n                    className={`${styles.btn}`}\n                    onClick={changeMode}\n                />\n                {previewButton}\n                <div className={styles.buffer} />\n                <div className={`${styles.row}`}>\n                    <div className={`${styles.label}`}>Folder Edit View</div>\n                    <select\n                        name=\"folderEditDisplay\"\n                        value={folderEditView}\n                        className={`${styles.select}`}\n                        onChange={(e) =>\n                            setContext({ folderEditView: e.target.value })\n                        }>\n                        <option value=\"Actions\">Actions</option>\n                        <option value=\"Differences\">Differences</option>\n                        <option value=\"Inputs\">Inputs</option>\n                    </select>\n                </div>\n                <div className={styles.buffer} />\n            </div>\n        );\n    } else {\n        let showNotesText = showNotes ? 'Hide Notes' : 'Show Notes';\n        let showTrackerText = showTracker ? 'Hide Tracker' : 'Show Tracker';\n\n        return (\n            <div className={`card ${styles.menu}`}>\n                <div className={`${styles.col}`}>\n                    <Button\n                        testId=\"notes-display-button\"\n                        text={showNotesText}\n                        size=\"medium\"\n                        className={`${styles.btn}`}\n                        onClick={updateNotesDisplay}\n                    />\n                    <Button\n                        testId=\"tracker-display-button\"\n                        text={showTrackerText}\n                        size=\"medium\"\n                        className={`${styles.btn}`}\n                        onClick={updateTrackerDisplay}\n                    />\n                    <Button\n                        testId=\"reset-tracker-button\"\n                        text=\"Reset Tracker\"\n                        size=\"medium\"\n                        className={`${styles.btn}`}\n                        onClick={resetTracker}\n                    />\n                    <Button\n                        testId=\"mode-button\"\n                        text={modeText}\n                        size=\"medium\"\n                        className={`${styles.btn}`}\n                        onClick={changeMode}\n                    />\n                </div>\n                <div className={`${styles.dropdown}`}>\n                    <div className={`${styles.label}`}>Folder Edit View</div>\n                    <div>\n                        <select\n                            name=\"folderEditDisplay\"\n                            data-id={\n                                process.env.NODE_ENV === 'development'\n                                    ? 'folder-edit-display-dropdown'\n                                    : null\n                            }\n                            value={folderEditView}\n                            className={`${styles.select}`}\n                            onChange={(e) =>\n                                setContext({ folderEditView: e.target.value })\n                            }>\n                            <option value=\"Actions\">Actions</option>\n                            <option value=\"Differences\">Differences</option>\n                            <option value=\"Inputs\">Inputs</option>\n                        </select>\n                    </div>\n                </div>\n                <div className={`${styles.col}`}>{previewButton}</div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;\n","/** @format */\n\nimport { useContext } from 'react';\nimport NotesContext from '../../../common/NotesContext';\nimport ReactMarkdown from 'react-markdown';\nimport styles from './styles/Text.Module.css';\n\nfunction Text(props) {\n    const { foundItems, foundModifiers } = useContext(NotesContext);\n\n    if (props.text.item != null && foundItems.includes(props.text.item)) {\n        if (\n            props.text.modifier == null ||\n            foundModifiers[props.text.item].includes(props.text.modifier)\n        ) {\n            return (\n                <div\n                    data-id={\n                        process.env.NODE_ENV === 'development'\n                            ? 'section-' +\n                              props.sectionId +\n                              '-text-' +\n                              props.text.id\n                            : null\n                    }\n                    className={`${styles.text} ${styles.found}`}>\n                    <ReactMarkdown children={props.text.text} />\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div\n            data-id={\n                process.env.NODE_ENV === 'development'\n                    ? 'section-' + props.sectionId + '-text-' + props.text.id\n                    : null\n            }\n            className={`${styles.text}`}>\n            <ReactMarkdown children={props.text.text} />\n        </div>\n    );\n}\n\nexport default Text;\n","/** @format */\n\nimport { useContext } from 'react';\nimport styles from './styles/SmallModifiers.Module.css';\nimport themeMMBN from './styles/themes/MMBN/MMBN-SmallModifiers.Module.css';\nimport NotesContext from '../../../common/NotesContext';\n\nfunction Modifier(props) {\n    const {\n        notes: { game },\n        foundModifiers,\n    } = useContext(NotesContext);\n\n    const foundClass = foundModifiers[props.id].includes(props.modifier)\n        ? styles.found\n        : '';\n    return (\n        <div\n            id={\n                'section-' +\n                props.sectionId +\n                '-modifier-' +\n                props.id +\n                '-' +\n                props.modifier\n            }\n            className={`${styles.modifier} ${styles[game]} ${foundClass}`}\n            onClick={() => props.updateFound(props.modifier)}>\n            {props.modifier}\n        </div>\n    );\n}\n\nfunction SmallModifiers(props) {\n    const {\n        notes: { game },\n    } = useContext(NotesContext);\n\n    let theme = {};\n    if (game.includes('MMBN')) {\n        theme = themeMMBN;\n    }\n\n    const updateFound = (modifier) => {\n        props.updateTracker(props.id, modifier);\n    };\n\n    if (props.modifiers != null && props.modifiers.length > 0) {\n        return (\n            <div className={`${styles.modifiers} ${theme.modifiers}`}>\n                {props.modifiers.map((modifier) => (\n                    <Modifier\n                        key={'small-modifier-' + modifier}\n                        id={props.id}\n                        sectionId={props.sectionId}\n                        modifier={modifier}\n                        updateFound={updateFound}\n                    />\n                ))}\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default SmallModifiers;\n","/** @format */\n\nimport { useContext } from 'react';\nimport styles from './styles/SmallItem.Module.css';\nimport themeMMBN from './styles/themes/MMBN/MMBN-SmallItem.Module.css';\nimport themeMMSF from './styles/themes/MMSF/MMSF-SmallItem.Module.css';\nimport SmallModifiers from './SmallModifiers';\nimport NotesContext from '../../../common/NotesContext';\n\nfunction SmallItem(props) {\n    const {\n        notes: { game },\n    } = useContext(NotesContext);\n\n    let theme = {};\n    if (game.includes('MMBN')) {\n        theme = themeMMBN;\n    } else if (game.includes('MMSF')) {\n        theme = themeMMSF;\n    }\n\n    let Items = require('../../../../resources/' + game + '/ItemNames.json');\n\n    const updateFound = () => {\n        props.updateTracker(props.id, null);\n    };\n\n    const foundClass = props.found ? styles.found : '';\n    let typeClass = '';\n    for (let i = 0; i < Items.types.length; i++) {\n        let type = Items.types[i];\n        if (props.id >= type.low && props.id <= type.high) {\n            typeClass = type.id;\n            break;\n        }\n    }\n    return (\n        <div className={`${styles.wrapper}`}>\n            <div\n                id={'section-' + props.sectionId + '-item-' + props.id}\n                className={`${styles.item} ${theme.item} ${theme[typeClass]} ${foundClass}`}\n                onClick={updateFound}>\n                <div className={`${styles.title} ${theme.title}`}>\n                    {Items.Items[props.id].name}\n                </div>\n                <img\n                    className={`${styles.itemArt} ${theme.itemArt}`}\n                    src={'/items/' + game + '/' + props.id + '.png'}\n                    alt={Items.Items[props.id] + ' art'}\n                />\n            </div>\n            <SmallModifiers\n                id={props.id}\n                sectionId={props.sectionId}\n                modifiers={props.modifiers}\n                updateTracker={props.updateTracker}\n            />\n        </div>\n    );\n}\n\nexport default SmallItem;\n","/** @format */\n\nimport { useContext } from 'react';\nimport SmallItem from './SmallItem';\nimport NotesContext from '../../../common/NotesContext';\nimport styles from './styles/ItemsList.Module.css';\n\nfunction ItemsList(props) {\n    const {\n        notes: { game },\n        foundItems,\n        foundModifiers,\n    } = useContext(NotesContext);\n\n    let Items = require('../../../../resources/' + game + '/ItemNames.json');\n\n    let itemsList;\n\n    if (Items.modifiers) {\n        let completedItems = [];\n\n        for (let i = 0; i < props.items.length; i++) {\n            let item = props.items[i];\n\n            if (!completedItems.some((o) => o.value === item.value)) {\n                let modifiers = [];\n\n                for (let j = 0; j < props.items.length; j++) {\n                    let item2 = props.items[j];\n\n                    if (\n                        item2.value === item.value &&\n                        item2.modifier &&\n                        item2.modifier !== '' &&\n                        item2.modifier != null\n                    ) {\n                        modifiers.push(item2.modifier);\n                    }\n                }\n\n                completedItems.push({\n                    value: item.value,\n                    modifiers: modifiers,\n                });\n            }\n        }\n\n        itemsList = completedItems.map((item) => (\n            <SmallItem\n                key={'small-item-' + item.value}\n                id={item.value}\n                sectionId={props.sectionId}\n                updateTracker={props.updateTracker}\n                modifiers={item.modifiers}\n                found={foundItems.includes(item.value)}\n                foundModifiers={foundModifiers}\n            />\n        ));\n    } else {\n        itemsList = props.items.map((item) => (\n            <SmallItem\n                key={'small-item-' + item.value}\n                id={item.value}\n                sectionId={props.sectionId}\n                updateTracker={props.updateTracker}\n                found={foundItems.includes(item.value)}\n                foundModifiers={foundModifiers}\n            />\n        ));\n    }\n\n    if (props.items.length > 0) {\n        return (\n            <div className={styles.itemContainer}>\n                <div className={styles.label}>Potential {Items.name + 's'}</div>\n                <div className={styles.itemList}>{itemsList}</div>\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default ItemsList;\n","/** @format */\n\nimport styles from './styles/Image.Module.css';\n\nfunction Image(props) {\n    if (props.image != null) {\n        return (\n            <div className={`${styles.imageContainer}`}>\n                <img\n                    className={styles.image}\n                    src={props.image}\n                    alt=\"\"\n                    onClick={() => props.onClick(props.image)}\n                />\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default Image;\n","/** @format */\n\nimport styles from './styles/State.Module.css';\n\nfunction State(props) {\n    if (props.state != null) {\n        return (\n            <div className={`${styles.stateContainer}`}>\n                <div className={`${styles.label}`}>State</div>\n                <div className={styles.wrapper}>\n                    {props.state.keys.map((key) => (\n                        <div\n                            className={`${styles.stateField} ${\n                                !props.state[key].shown ? styles.hidden : ''\n                            }`}\n                            key={key}>\n                            <div className={`${styles.keyLabel}`}>{key}</div>\n                            <div className=\"col-2\">\n                                {props.state[key].value}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default State;\n","/** @format */\n\nimport performFolderEditSort from './performFolderEditSort';\n\nexport default function performFolderEditAction(folder, action, gameInfo) {\n    const newFolder = JSON.parse(JSON.stringify(folder));\n\n    if (action.item1 !== -1) {\n        if (action.action === 'Remove') {\n            newFolder[action.item1].item = -1;\n            newFolder[action.item1].modifier = null;\n        } else if (action.action === 'Add') {\n            for (const item of folder) {\n                if (item.item === -1) {\n                    newFolder[item.slot].item = action.item1;\n                    newFolder[item.slot].modifier = action.modifier1;\n                    break;\n                }\n            }\n        } else if (action.action === 'Swap') {\n            if (action.item2 !== -1) {\n                const slot1 = newFolder[action.item1];\n                const slot2 = newFolder[action.item2];\n\n                // Swap the slots.\n                slot1.slot = action.item2;\n                slot2.slot = action.item1;\n\n                //Swap positions in array\n                newFolder[action.item1] = slot2;\n                newFolder[action.item2] = slot1;\n            }\n        } else if (action.action === 'Replace') {\n            if (action.item2 !== -1) {\n                newFolder[action.item1].item = action.item2;\n                newFolder[action.item1].modifier = action.modifier2;\n            }\n        } else if (action.action === 'Reg' || action.action === 'Default') {\n            // Unreg everything else\n            for (let i = 0; i < newFolder.length; i++) {\n                newFolder[i].regged = false;\n            }\n            newFolder[action.item1].regged = true;\n        } else if (action.action === 'Tag') {\n            // Tag only does something if 2 items are selected.\n            if (action.item1 !== -1 && action.item2 !== -1) {\n                // Untag everything else\n                for (let i = 0; i < newFolder.length; i++) {\n                    newFolder[i].tagged = false;\n                }\n                // Mark items as tagged first. Then, move items around to put them next to each other.\n                newFolder[action.item1].tagged = true;\n                newFolder[action.item2].tagged = true;\n\n                // Whichever item is picked first goes on top. However, if item1 is above item2 in the folder, item1 will not\n                // move. But if item 2 is above item1, item1 moves up one slot because of item2 moving below.\n                if (parseInt(action.item1) < parseInt(action.item2)) {\n                    for (\n                        let i = parseInt(action.item2);\n                        i > parseInt(action.item1) + 1;\n                        i--\n                    ) {\n                        let tempItem = newFolder[i];\n                        newFolder[i] = newFolder[i - 1];\n                        newFolder[i].slot = newFolder[i].slot + 1;\n                        newFolder[i - 1] = tempItem;\n                        newFolder[i - 1].slot = newFolder[i - 1].slot - 1;\n                    }\n                } else {\n                    for (\n                        let i = parseInt(action.item2);\n                        i < parseInt(action.item1);\n                        i++\n                    ) {\n                        let tempItem = newFolder[i];\n                        newFolder[i] = newFolder[i + 1];\n                        newFolder[i].slot = newFolder[i].slot - 1;\n                        newFolder[i + 1] = tempItem;\n                        newFolder[i + 1].slot = newFolder[i + 1].slot + 1;\n                    }\n                }\n            }\n        } else if (action.action === 'Sort') {\n            performFolderEditSort(\n                newFolder,\n                action.item1,\n                action.item2,\n                gameInfo,\n            );\n        }\n        // TODO: Implement Favorites\n    }\n\n    return newFolder;\n}\n","/** @format */\n\nexport default function performFolderEditSort(\n    folder,\n    sortType,\n    reverse,\n    gameInfo,\n) {\n    if (sortType === 'ID') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return slot1.item < slot2.item ? 1 : -1;\n                }\n            } else {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return slot1.item > slot2.item ? 1 : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Alphabet') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return gameInfo.Items[slot1.item].name <\n                        gameInfo.Items[slot2.item].name\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return gameInfo.Items[slot1.item].name >\n                        gameInfo.Items[slot2.item].name\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Alphabet (JP)') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return gameInfo.Items[slot1.item].nameJP <\n                        gameInfo.Items[slot2.item].nameJP\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return gameInfo.Items[slot1.item].nameJP >\n                        gameInfo.Items[slot2.item].nameJP\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Code') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (slot1.modifier === slot2.modifier) {\n                    return slot1.item > slot2.item ? 1 : -1;\n                } else {\n                    return slot1.modifier < slot2.modifier ? 1 : -1;\n                }\n            } else {\n                if (slot1.modifier === slot2.modifier) {\n                    return slot1.item > slot2.item ? 1 : -1;\n                } else {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Attack') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (\n                    gameInfo.Items[slot1.item].damageSort ===\n                    gameInfo.Items[slot2.item].damageSort\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.Items[slot1.item].damageSort >\n                        gameInfo.Items[slot2.item].damageSort\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (\n                    gameInfo.Items[slot1.item].damageSort ===\n                    gameInfo.Items[slot2.item].damageSort\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.Items[slot1.item].damageSort <\n                        gameInfo.Items[slot2.item].damageSort\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Element') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (\n                    gameInfo.elementOrder[\n                        gameInfo.Items[slot1.item].element\n                    ] ===\n                    gameInfo.elementOrder[gameInfo.Items[slot2.item].element]\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.elementOrder[\n                        gameInfo.Items[slot1.item].element\n                    ] <\n                        gameInfo.elementOrder[\n                            gameInfo.Items[slot2.item].element\n                        ]\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (\n                    gameInfo.elementOrder[\n                        gameInfo.Items[slot1.item].element\n                    ] ===\n                    gameInfo.elementOrder[gameInfo.Items[slot2.item].element]\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.elementOrder[\n                        gameInfo.Items[slot1.item].element\n                    ] >\n                        gameInfo.elementOrder[\n                            gameInfo.Items[slot2.item].element\n                        ]\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Quantity') {\n        // Count number of each item in the folder\n        const counts = {};\n        for (const slot of folder) {\n            if (counts[slot.item]) {\n                counts[slot.item][slot.modifier] = counts[slot.item][\n                    slot.modifier\n                ]\n                    ? counts[slot.item][slot.modifier] + 1\n                    : 1;\n            } else {\n                counts[slot.item] = {};\n                counts[slot.item][slot.modifier] = 1;\n            }\n        }\n\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (\n                    counts[slot1.item][slot1.modifier] ===\n                    counts[slot2.item][slot2.modifier]\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return counts[slot1.item][slot1.modifier] >\n                        counts[slot2.item][slot2.modifier]\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (\n                    counts[slot1.item][slot1.modifier] ===\n                    counts[slot2.item][slot2.modifier]\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return counts[slot1.item][slot1.modifier] <\n                        counts[slot2.item][slot2.modifier]\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Capacity' || sortType === 'MB') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (\n                    gameInfo.Items[slot1.item].capacity ===\n                    gameInfo.Items[slot2.item].capacity\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.Items[slot1.item].capacity <\n                        gameInfo.Items[slot2.item].capacity\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (\n                    gameInfo.Items[slot1.item].capacity ===\n                    gameInfo.Items[slot2.item].capacity\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.Items[slot1.item].capacity >\n                        gameInfo.Items[slot2.item].capacity\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    }\n\n    // Actually update the slots based on the new order\n    let i = 0;\n    for (const slot of folder) {\n        slot.slot = i;\n        i = i + 1;\n    }\n}\n","/** @format */\n\nexport default function getPathsToSlot(game, cursor, cursorPosition, goal) {\n    const gameInfo = require('../../../resources/' + game + '/ItemNames.json');\n    const pathsToSlot = [\n        {\n            path: '',\n            cursor: cursor,\n            cursorPosition: cursorPosition,\n        },\n    ];\n\n    for (const path of pathsToSlot) {\n        let numInputs = 0;\n        while (parseInt(path.cursor) !== parseInt(goal) && numInputs <= 100) {\n            // If the difference is negative, we're moving the cursor down. If its positive, we're moving the cursor up.\n            if (Math.sign(path.cursor - goal) === -1) {\n                // Check if pressing R will get you closer to the slot\n                if (\n                    path.cursor -\n                        path.cursorPosition +\n                        2 * gameInfo.itemsShown -\n                        1 <=\n                        29 &&\n                    Math.abs(path.cursor + gameInfo.itemsShown - goal) + 1 <=\n                        Math.abs(path.cursor - goal)\n                ) {\n                    // If pressing R will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\n                    if (\n                        Math.abs(path.cursor + gameInfo.itemsShown - goal) +\n                            1 ===\n                        Math.abs(path.cursor - goal)\n                    ) {\n                        pathsToSlot.push({\n                            path: path.path + 'R ',\n                            cursor: path.cursor + gameInfo.itemsShown,\n                            cursorPosition: path.cursorPosition,\n                        });\n                        path.path = path.path + 'V ';\n                        path.cursor = path.cursor + 1;\n                        path.cursorPosition = Math.min(\n                            path.cursorPosition + 1,\n                            gameInfo.itemsShown - 1,\n                        );\n                    } else {\n                        path.path = path.path + 'R ';\n                        path.cursor = path.cursor + gameInfo.itemsShown;\n                    }\n                } else {\n                    // Check if pressing R will get you closer to the slot in the situation that you're close to the bottom of the folder\n                    if (\n                        path.cursor -\n                            path.cursorPosition +\n                            2 * gameInfo.itemsShown -\n                            1 >\n                            29 &&\n                        Math.abs(\n                            30 -\n                                gameInfo.itemsShown +\n                                path.cursorPosition -\n                                goal,\n                        ) +\n                            1 <=\n                            Math.abs(path.cursor - goal) &&\n                        path.cursor !==\n                            30 - gameInfo.itemsShown + path.cursorPosition\n                    ) {\n                        // If pressing R will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\n                        if (\n                            Math.abs(\n                                30 -\n                                    gameInfo.itemsShown +\n                                    path.cursorPosition -\n                                    goal,\n                            ) +\n                                1 ===\n                            Math.abs(path.cursor - goal)\n                        ) {\n                            pathsToSlot.push({\n                                path: path.path + 'R ',\n                                cursor:\n                                    30 -\n                                    gameInfo.itemsShown +\n                                    path.cursorPosition,\n                                cursorPosition: path.cursorPosition,\n                            });\n                            path.path = path.path + 'V ';\n                            path.cursor = path.cursor + 1;\n                            path.cursorPosition = Math.min(\n                                path.cursorPosition + 1,\n                                gameInfo.itemsShown - 1,\n                            );\n                        } else {\n                            path.path = path.path + 'R ';\n                            path.cursor =\n                                30 - gameInfo.itemsShown + path.cursorPosition;\n                        }\n                    } else {\n                        // If we get here, pressing R will not be helpful, so just press down.\n                        console.log('Attempting to move down once');\n                        path.path = path.path + 'V ';\n                        path.cursor = path.cursor + 1;\n                        path.cursorPosition = Math.min(\n                            path.cursorPosition + 1,\n                            gameInfo.itemsShown - 1,\n                        );\n                    }\n                }\n            } else if (Math.sign(path.cursor - goal) === 1) {\n                // Check if pressing L will get you closer to the slot\n                if (\n                    path.cursor - path.cursorPosition - gameInfo.itemsShown >=\n                        0 &&\n                    Math.abs(path.cursor - gameInfo.itemsShown - goal) + 1 <=\n                        Math.abs(path.cursor - goal)\n                ) {\n                    // If pressing L will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\n                    if (\n                        Math.abs(path.cursor - gameInfo.itemsShown - goal) +\n                            1 ===\n                        Math.abs(path.cursor - goal)\n                    ) {\n                        pathsToSlot.push({\n                            path: path.path + 'L ',\n                            cursor: path.cursor - gameInfo.itemsShown,\n                            cursorPosition: path.cursorPosition,\n                        });\n                        path.path = path.path + '^ ';\n                        path.cursor = path.cursor - 1;\n                        path.cursorPosition = Math.max(\n                            path.cursorPosition - 1,\n                            0,\n                        );\n                    } else {\n                        path.path = path.path + 'L ';\n                        path.cursor = path.cursor - gameInfo.itemsShown;\n                    }\n                } else {\n                    // Check if pressing L will get you closer to the slot in the situation that you're close to the bottom of the folder\n                    if (\n                        path.cursor -\n                            path.cursorPosition -\n                            gameInfo.itemsShown <\n                            0 &&\n                        Math.abs(path.cursorPosition - goal) + 1 <=\n                            Math.abs(path.cursor - goal) &&\n                        path.cursor !== cursorPosition\n                    ) {\n                        // If pressing R will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\n                        if (\n                            Math.abs(path.cursorPosition - goal) + 1 <=\n                            Math.abs(path.cursor - goal)\n                        ) {\n                            pathsToSlot.push({\n                                path: path.path + 'L ',\n                                cursor: 0 + path.cursorPosition,\n                                cursorPosition: path.cursorPosition,\n                            });\n                            path.path = path.path + '^ ';\n                            path.cursor = path.cursor - 1;\n                            path.cursorPosition = Math.max(\n                                path.cursorPosition - 1,\n                                0,\n                            );\n                        } else {\n                            path.path = path.path + 'L ';\n                            path.cursor = 0 + path.cursorPosition;\n                        }\n                    } else {\n                        // If we get here, pressing R will not be helpful, so just press down.\n                        path.path = path.path + '^ ';\n                        path.cursor = path.cursor - 1;\n                        path.cursorPosition = Math.max(\n                            path.cursorPosition - 1,\n                            0,\n                        );\n                    }\n                }\n            }\n            numInputs = numInputs + 1;\n        }\n        if (numInputs >= 100) {\n            break;\n        }\n    }\n\n    return pathsToSlot;\n}\n","/** @format */\n\nimport getPathsToSlot from './getPathsToSlot';\n\nfunction getNumInputs(inputs) {\n    let count = 0;\n    for (const action of inputs) {\n        if (action != null) {\n            const actionInputs = action.split(' ');\n            for (const input of actionInputs) {\n                if (\n                    input === 'V' ||\n                    input === '^' ||\n                    input === '<' ||\n                    input === '>' ||\n                    input === 'A' ||\n                    input === 'Start' ||\n                    input === 'Select'\n                ) {\n                    count = count + 1;\n                }\n            }\n        }\n    }\n\n    return count;\n}\n\nexport default function getFolderEditInputs(\n    folderEdit,\n    game,\n    actionIndex = 0,\n    cursor = 0,\n    cursorPosition = 0,\n    sortCursor = 0,\n    state = 'folder',\n) {\n    // If actionIndex equals the length of the folder edit, there are no more actions to test. Return an empty list.\n    if (actionIndex === folderEdit.length) {\n        return [];\n    }\n    const gameInfo = require('../../../resources/' + game + '/ItemNames.json');\n    const action = folderEdit[actionIndex];\n\n    let inputs = new Array(folderEdit.length);\n    let actionInputs = '';\n    if (action.item1 !== -1) {\n        if (action.action === 'Remove') {\n            if (state === 'pack') {\n                actionInputs = actionInputs + '< ';\n                state = 'folder';\n            }\n\n            const paths = getPathsToSlot(\n                game,\n                cursor,\n                cursorPosition,\n                action.item1,\n            );\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\n            if (paths.length > 1) {\n                let bestInputs = Number.MAX_VALUE;\n                let bestPath = {};\n                for (const path of paths) {\n                    const tempInputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        path.cursor,\n                        path.cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                    if (bestInputs > getNumInputs(tempInputs)) {\n                        bestInputs = getNumInputs(tempInputs);\n                        bestPath = path;\n                        inputs = tempInputs;\n                    }\n                }\n                actionInputs = actionInputs + bestPath.path + 'A A ';\n            } else {\n                actionInputs = actionInputs + paths[0].path + 'A A ';\n                inputs = getFolderEditInputs(\n                    folderEdit,\n                    game,\n                    actionIndex + 1,\n                    paths[0].cursor,\n                    paths[0].cursorPosition,\n                    sortCursor,\n                    state,\n                );\n            }\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Add') {\n            if (state === 'folder') {\n                actionInputs = actionInputs + '> ';\n                state = 'pack';\n            }\n\n            actionInputs =\n                actionInputs +\n                '(Press A A on ' +\n                gameInfo.Items[action.item1].name +\n                ' ' +\n                action.modifier1 +\n                ')';\n            inputs = getFolderEditInputs(\n                folderEdit,\n                game,\n                actionIndex + 1,\n                cursor,\n                cursorPosition,\n                sortCursor,\n                state,\n            );\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Swap') {\n            if (state === 'pack') {\n                actionInputs = actionInputs + '< ';\n                state = 'folder';\n            }\n\n            const pathsToFirstItem = getPathsToSlot(\n                game,\n                cursor,\n                cursorPosition,\n                action.item1,\n            );\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\n            if (pathsToFirstItem.length > 1) {\n                let bestInputs = Number.MAX_VALUE;\n                let bestPath1 = {};\n                let bestPath2 = {};\n                console.log(pathsToFirstItem);\n                for (const path of pathsToFirstItem) {\n                    const pathsToSecondItem = getPathsToSlot(\n                        game,\n                        path.cursor,\n                        path.cursorPosition,\n                        action.item2,\n                    );\n                    if (pathsToSecondItem.length > 1) {\n                        for (const path2 of pathsToSecondItem) {\n                            const tempInputs = getFolderEditInputs(\n                                folderEdit,\n                                game,\n                                actionIndex + 1,\n                                path2.cursor,\n                                path2.cursorPosition,\n                                sortCursor,\n                                state,\n                            );\n                            tempInputs[actionIndex] =\n                                actionInputs +\n                                path.path +\n                                'A ' +\n                                path2.path +\n                                'A ';\n\n                            console.log(getNumInputs(tempInputs));\n                            if (bestInputs > getNumInputs(tempInputs)) {\n                                bestInputs = getNumInputs(tempInputs);\n                                bestPath1 = path;\n                                bestPath2 = path2;\n                                inputs = tempInputs;\n                            }\n                        }\n                    } else {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            pathsToSecondItem[0].cursor,\n                            pathsToSecondItem[0].cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n\n                        console.log(bestInputs);\n                        console.log(bestInputs > getNumInputs(tempInputs));\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath1 = path;\n                            bestPath2 = pathsToSecondItem[0];\n                            inputs = tempInputs;\n                        }\n                    }\n                }\n                actionInputs =\n                    actionInputs +\n                    bestPath1.path +\n                    'A ' +\n                    bestPath2.path +\n                    'A ';\n            } else {\n                actionInputs = actionInputs + pathsToFirstItem[0].path + 'A ';\n\n                const pathsToSecondItem = getPathsToSlot(\n                    game,\n                    pathsToFirstItem[0].cursor,\n                    pathsToFirstItem[0].cursorPosition,\n                    action.item2,\n                );\n                if (pathsToSecondItem.length > 1) {\n                    let bestInputs = Number.MAX_VALUE;\n                    let bestPath = {};\n                    for (const path of pathsToSecondItem) {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            path.cursor,\n                            path.cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath = path;\n                            inputs = tempInputs;\n                        }\n                    }\n                    actionInputs = actionInputs + bestPath.path + 'A ';\n                } else {\n                    actionInputs =\n                        actionInputs + pathsToSecondItem[0].path + 'A ';\n\n                    inputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        pathsToSecondItem[0].cursor,\n                        pathsToSecondItem[0].cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                }\n            }\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Replace') {\n            // If in folder, find the chip to be replaced, swap to pack, and select the new chip\n            // If in pack, find the new chip, swap to folder, and select the chip to be replaced.\n            if (state === 'folder') {\n                state = 'pack';\n                const paths = getPathsToSlot(\n                    game,\n                    cursor,\n                    cursorPosition,\n                    action.item1,\n                );\n                // If multiple paths returned, we need to test which one works better with the rest of the edit.\n                if (paths.length > 1) {\n                    let bestInputs = Number.MAX_VALUE;\n                    let bestPath = {};\n                    for (const path of paths) {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            path.cursor,\n                            path.cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath = path;\n                            inputs = tempInputs;\n                        }\n                    }\n                    actionInputs = actionInputs + bestPath.path + 'A ';\n                } else {\n                    actionInputs = actionInputs + paths[0].path + 'A ';\n                    inputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        paths[0].cursor,\n                        paths[0].cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                }\n\n                actionInputs =\n                    actionInputs +\n                    '> (Press A on ' +\n                    gameInfo.Items[action.item2].name +\n                    ' ' +\n                    action.modifier2 +\n                    ') ';\n            } else if (state === 'pack') {\n                state = 'folder';\n                actionInputs =\n                    actionInputs +\n                    '(Press A on ' +\n                    gameInfo.Items[action.item2].name +\n                    ' ' +\n                    action.modifier2 +\n                    ') < ';\n\n                const paths = getPathsToSlot(\n                    game,\n                    cursor,\n                    cursorPosition,\n                    action.item1,\n                );\n                // If multiple paths returned, we need to test which one works better with the rest of the edit.\n                if (paths.length > 1) {\n                    let bestInputs = Number.MAX_VALUE;\n                    let bestPath = {};\n                    for (const path of paths) {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            path.cursor,\n                            path.cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath = path;\n                            inputs = tempInputs;\n                        }\n                    }\n                    actionInputs = actionInputs + bestPath.path + 'A ';\n                } else {\n                    actionInputs = actionInputs + paths[0].path + 'A ';\n                    inputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        paths[0].cursor,\n                        paths[0].cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                }\n            }\n\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Reg' || action.action === 'Default') {\n            if (state === 'pack') {\n                actionInputs = actionInputs + '< ';\n                state = 'folder';\n            }\n\n            const paths = getPathsToSlot(\n                game,\n                cursor,\n                cursorPosition,\n                action.item1,\n            );\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\n            if (paths.length > 1) {\n                let bestInputs = Number.MAX_VALUE;\n                let bestPath = {};\n                for (const path of paths) {\n                    const tempInputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        path.cursor,\n                        path.cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                    if (bestInputs > getNumInputs(tempInputs)) {\n                        bestInputs = getNumInputs(tempInputs);\n                        bestPath = path;\n                        inputs = tempInputs;\n                    }\n                }\n                // BN6 requires extra inputs after Select. SF3 is instead Y.\n                if (game === 'MMBN6') {\n                    actionInputs = actionInputs + bestPath.path + 'Select ';\n                } else if (game === 'MMSF3') {\n                    actionInputs = actionInputs + bestPath.path + 'Y ';\n                } else {\n                    actionInputs = actionInputs + bestPath.path + 'Select ';\n                }\n            } else {\n                // BN6 requires extra inputs after Select. SF3 is instead Y.\n                if (game === 'MMBN6') {\n                    actionInputs =\n                        actionInputs +\n                        paths[0].path +\n                        'Select A (advance text) A';\n                } else if (game === 'MMSF3') {\n                    actionInputs = actionInputs + paths[0].path + 'Y ';\n                } else {\n                    actionInputs = actionInputs + paths[0].path + 'Select ';\n                }\n                inputs = getFolderEditInputs(\n                    folderEdit,\n                    game,\n                    actionIndex + 1,\n                    paths[0].cursor,\n                    paths[0].cursorPosition,\n                    sortCursor,\n                    state,\n                );\n            }\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Sort') {\n            if (state === 'pack') {\n                actionInputs = actionInputs + '< ';\n                state = 'folder';\n            }\n\n            actionInputs = actionInputs + 'Start ';\n\n            const sortTypes = [...gameInfo.sortTypes];\n            // We need to remove one of the Alphabet sorts from the list, since the game can only sort by one Alphabet.\n            if (action.item1 === 'Alphabet (JP)') {\n                sortTypes.splice(sortTypes.indexOf('Alphabet'), 1);\n            } else {\n                sortTypes.splice(sortTypes.indexOf('Alphabet (JP)'), 1);\n            }\n\n            // If the distance between the cursor and the desired sort is less than half the number of possible\n            // sorts, go directly to it. Otherwise, wrap around.\n            const numInputs = sortCursor - sortTypes.indexOf(action.item1);\n            if (Math.abs(numInputs) <= sortTypes.length / 2) {\n                // If positive difference, go up. Otherwise, go down.\n                if (Math.sign(numInputs) > 0) {\n                    for (let i = 0; i < Math.abs(numInputs); i++) {\n                        actionInputs = actionInputs + '^ ';\n                    }\n                } else if (Math.sign(numInputs) < 0) {\n                    for (let i = 0; i < Math.abs(numInputs); i++) {\n                        actionInputs = actionInputs + 'V ';\n                    }\n                }\n            } else {\n                const inverseInputs = sortTypes.length - Math.abs(numInputs);\n                // If positive difference, go down. Otherwise, go up. (Opposite of other situation).\n                if (Math.sign(numInputs) > 0) {\n                    for (let i = 0; i < Math.abs(inverseInputs); i++) {\n                        actionInputs = actionInputs + 'V ';\n                    }\n                } else if (Math.sign(numInputs) < 0) {\n                    for (let i = 0; i < Math.abs(inverseInputs); i++) {\n                        actionInputs = actionInputs + '^ ';\n                    }\n                }\n            }\n            actionInputs = actionInputs + 'A ';\n            // For reverse sorts, press A a 2nd time.\n            if (action.item2) {\n                actionInputs = actionInputs + 'A ';\n            }\n            actionInputs = actionInputs + 'B ';\n            inputs = getFolderEditInputs(\n                folderEdit,\n                game,\n                actionIndex + 1,\n                cursor,\n                cursorPosition,\n                sortTypes.indexOf(action.item1),\n                state,\n            );\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Tag') {\n            if (state === 'pack') {\n                actionInputs = actionInputs + '< ';\n                state = 'folder';\n            }\n            actionInputs = actionInputs + 'Select V A (advance text) ';\n\n            const pathsToFirstItem = getPathsToSlot(\n                game,\n                cursor,\n                cursorPosition,\n                action.item1,\n            );\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\n            if (pathsToFirstItem.length > 1) {\n                let bestInputs = Number.MAX_VALUE;\n                let bestPath1 = {};\n                let bestPath2 = {};\n                console.log(pathsToFirstItem);\n                for (const path of pathsToFirstItem) {\n                    const pathsToSecondItem = getPathsToSlot(\n                        game,\n                        path.cursor,\n                        path.cursorPosition,\n                        action.item2,\n                    );\n                    if (pathsToSecondItem.length > 1) {\n                        for (const path2 of pathsToSecondItem) {\n                            const tempInputs = getFolderEditInputs(\n                                folderEdit,\n                                game,\n                                actionIndex + 1,\n                                path2.cursor,\n                                path2.cursorPosition,\n                                sortCursor,\n                                state,\n                            );\n                            tempInputs[actionIndex] =\n                                actionInputs +\n                                path.path +\n                                'A ' +\n                                path2.path +\n                                'A ';\n\n                            console.log(getNumInputs(tempInputs));\n                            if (bestInputs > getNumInputs(tempInputs)) {\n                                bestInputs = getNumInputs(tempInputs);\n                                bestPath1 = path;\n                                bestPath2 = path2;\n                                inputs = tempInputs;\n                            }\n                        }\n                    } else {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            pathsToSecondItem[0].cursor,\n                            pathsToSecondItem[0].cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n\n                        console.log(bestInputs);\n                        console.log(bestInputs > getNumInputs(tempInputs));\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath1 = path;\n                            bestPath2 = pathsToSecondItem[0];\n                            inputs = tempInputs;\n                        }\n                    }\n                }\n                actionInputs =\n                    actionInputs +\n                    bestPath1.path +\n                    'A (advance text) ' +\n                    bestPath2.path +\n                    'A ';\n            } else {\n                actionInputs =\n                    actionInputs +\n                    pathsToFirstItem[0].path +\n                    'A (advance text) ';\n\n                const pathsToSecondItem = getPathsToSlot(\n                    game,\n                    pathsToFirstItem[0].cursor,\n                    pathsToFirstItem[0].cursorPosition,\n                    action.item2,\n                );\n                if (pathsToSecondItem.length > 1) {\n                    let bestInputs = Number.MAX_VALUE;\n                    let bestPath = {};\n                    for (const path of pathsToSecondItem) {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            path.cursor,\n                            path.cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath = path;\n                            inputs = tempInputs;\n                        }\n                    }\n                    actionInputs = actionInputs + bestPath.path + 'A ';\n                } else {\n                    actionInputs =\n                        actionInputs + pathsToSecondItem[0].path + 'A ';\n\n                    inputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        pathsToSecondItem[0].cursor,\n                        pathsToSecondItem[0].cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                }\n            }\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Favorite') {\n            // Currently ignoring Favorite, as the inputs are different between SF1 and 2, and is not currently\n            // super important to optimizing folder edits.\n            // TODO: Implement Favorites\n        }\n        return inputs;\n    } else {\n        // Return an empty list of inputs if item1 is invalid.\n        return [];\n    }\n}\n","/** @format */\n\nimport { useContext } from 'react';\nimport styles from './styles/FolderEdit.Module.css';\nimport NotesContext from '../../../common/NotesContext';\nimport performFolderEditAction from '../../../common/functions/performFolderEditAction';\nimport getFolderEditInputs from '../../../common/functions/getFolderEditInputs';\n\nfunction Action(props) {\n    const {\n        notes: { game },\n    } = useContext(NotesContext);\n\n    const gameInfo = require('../../../../resources/' +\n        game +\n        '/ItemNames.json');\n\n    // Determine the text for the action based on the action type.\n    let text = '';\n    if (props.action.action === 'Add') {\n        text =\n            'Add ' +\n            gameInfo.Items[props.action.item1].name +\n            (gameInfo.modifiers ? ' ' + props.action.modifier1 : '');\n    } else if (props.action.action === 'Remove') {\n        console.log(props.folder);\n        text =\n            'Remove slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ')';\n    } else if (props.action.action === 'Swap') {\n        text =\n            'Swap slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ') with slot ' +\n            (parseInt(props.action.item2) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item2].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item2].modifier\n                : '') +\n            ')';\n    } else if (props.action.action === 'Replace') {\n        text =\n            'Replace slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ') with ' +\n            gameInfo.Items[props.action.item2].name +\n            (gameInfo.modifiers ? ' ' + props.action.modifier2 : '');\n    } else if (props.action.action === 'Reg') {\n        text =\n            'Reg slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ')';\n    } else if (props.action.action === 'Default') {\n        text =\n            'Default slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ')';\n    } else if (props.action.action === 'Sort') {\n        text =\n            'Sort by ' +\n            (props.action.item2 ? 'Reverse ' : '') +\n            props.action.item1;\n    } else if (props.action.action === 'Tag') {\n        text =\n            'Tag slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ') with slot ' +\n            (parseInt(props.action.item2) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item2].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item2].modifier\n                : '') +\n            ')';\n    }\n\n    return <div className={`${styles.action}`}>{text}</div>;\n}\n\nfunction FolderEdit(props) {\n    const {\n        notes: { game },\n        folderEditView,\n    } = useContext(NotesContext);\n\n    const gameInfo = require('../../../../resources/' +\n        game +\n        '/ItemNames.json');\n\n    if (props.folderEdit != null) {\n        if (folderEditView === 'Actions') {\n            // Create a list of Actions. Use the initial folder in order to list the appropriate information per action\n            const actionsList = [];\n            let tempFolder = JSON.parse(\n                JSON.stringify(props.folderEdit.prevFolder),\n            );\n\n            for (const action of props.folderEdit.value) {\n                actionsList.push(\n                    <Action\n                        key={action.id}\n                        action={action}\n                        folder={tempFolder}\n                    />,\n                );\n\n                tempFolder = performFolderEditAction(\n                    tempFolder,\n                    action,\n                    gameInfo,\n                );\n            }\n\n            return (\n                <div\n                    data-id={\n                        process.env.NODE_ENV === 'development'\n                            ? 'section-' +\n                              props.sectionId +\n                              '-folder-edit-actions'\n                            : null\n                    }\n                    className={`${styles.folderEditContainer}`}>\n                    <div className={`${styles.label}`}>Folder Edit</div>\n                    {actionsList}\n                </div>\n            );\n        } else if (folderEditView === 'Differences') {\n            console.log(props.folderEdit.folder);\n            return (\n                <div\n                    data-id={\n                        process.env.NODE_ENV === 'development'\n                            ? 'section-' +\n                              props.sectionId +\n                              '-folder-edit-differences'\n                            : null\n                    }\n                    className={`${styles.folderEditContainer}`}>\n                    <div className={`${styles.label}`}>Folder Edit</div>\n                    <div className={`${styles.wrapper}`}>\n                        <div className=\"col-5\">\n                            <div className={`${styles.label}`}>Previous</div>\n                            {props.folderEdit.prevFolder.map((slot) => (\n                                <div\n                                    className={`${\n                                        slot.regged ? styles.regged : ''\n                                    } ${slot.tagged ? styles.tagged : ''}`}>\n                                    {(parseInt(slot.slot) + 1)\n                                        .toString()\n                                        .padStart(2, '0')}\n                                    . {gameInfo.Items[slot.item].name}{' '}\n                                    {gameInfo.modifiers ? slot.modifier : ''}\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"col-2\">-></div>\n                        <div className=\"col-5\">\n                            <div className={`${styles.label}`}>Next</div>\n                            {props.folderEdit.folder.map((slot) => (\n                                <div\n                                    className={`${\n                                        slot.regged ? styles.regged : ''\n                                    } ${slot.tagged ? styles.tagged : ''}`}>\n                                    {(parseInt(slot.slot) + 1)\n                                        .toString()\n                                        .padStart(2, '0')}\n                                    . {gameInfo.Items[slot.item].name}{' '}\n                                    {gameInfo.modifiers ? slot.modifier : ''}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else if (folderEditView === 'Inputs') {\n            return (\n                <div\n                    data-id={\n                        process.env.NODE_ENV === 'development'\n                            ? 'section-' +\n                              props.sectionId +\n                              '-folder-edit-inputs'\n                            : null\n                    }\n                    className={`${styles.folderEditContainer}`}>\n                    <div className={`${styles.label}`}>Folder Edit</div>\n                    {getFolderEditInputs(props.folderEdit.value, game).map(\n                        (action) => (\n                            <div className=\"col-12\">{action}</div>\n                        ),\n                    )}\n                </div>\n            );\n        }\n    }\n\n    return null;\n}\n\nexport default FolderEdit;\n","/** @format */\n\nimport { useContext, memo } from 'react';\nimport styles from './styles/NoteSection.Module.css';\nimport Text from './Text';\nimport ItemsList from './ItemsList';\nimport Image from './Image';\nimport State from './State';\nimport FolderEdit from './FolderEdit';\nimport Icon from '../../../common/Icon';\nimport NotesContext from '../../../common/NotesContext';\nimport areShallowEqual from 'are-shallow-equal';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (areShallowEqual(oldProps, newProps)) {\n        return true;\n    }\n\n    return false;\n}\n\nconst NoteSection = memo((props) => {\n    const {\n        notes: { game },\n        mode,\n        foundItems,\n        foundModifiers,\n    } = useContext(NotesContext);\n\n    if (mode === 'list') {\n        return (\n            <div\n                id={'section-' + props.section.id}\n                className={`${styles.section} card`}\n                ref={props.noteRef}>\n                <div className={`${styles.textContainer} col-m-12`}>\n                    {props.section.text.map((text) => (\n                        <Text\n                            key={'text-' + text.id}\n                            sectionId={props.section.id}\n                            text={text}\n                            foundItems={foundItems}\n                            foundModifiers={foundModifiers}\n                        />\n                    ))}\n                </div>\n                <Image\n                    image={props.section.image}\n                    onClick={props.fullscreenImage}\n                />\n                <ItemsList\n                    items={props.section.items}\n                    sectionId={props.section.id}\n                    updateTracker={props.updateTracker}\n                    game={game}\n                    foundItems={foundItems}\n                    foundModifiers={foundModifiers}\n                />\n                <State state={props.section.state} game={game} />\n                <FolderEdit\n                    folderEdit={props.section.folderEdit}\n                    sectionId={props.section.id}\n                />\n            </div>\n        );\n    } else if (mode === 'presenter') {\n        return (\n            <div\n                id={'section-' + props.section.id}\n                className={`${styles.section} card`}\n                ref={props.noteRef}>\n                <div className=\"col-12 col-m-12\">\n                    <Icon\n                        src=\"/icons/previous.png\"\n                        size=\"large\"\n                        altText=\"Previous\"\n                        hover={true}\n                        hidden={false}\n                        onClick={props.previousSection}\n                    />\n                    <Icon\n                        src=\"/icons/next.png\"\n                        size=\"large\"\n                        altText=\"Next\"\n                        hover={true}\n                        hidden={false}\n                        float={'right'}\n                        onClick={props.nextSection}\n                    />\n                </div>\n                <div className={`${styles.textContainer} col-m-12`}>\n                    {props.section.text.map((text) => (\n                        <Text\n                            key={'text-' + text.id}\n                            text={text}\n                            foundItems={foundItems}\n                            foundModifiers={foundModifiers}\n                        />\n                    ))}\n                </div>\n                <Image\n                    image={props.section.image}\n                    onClick={props.fullscreenImage}\n                />\n                <ItemsList\n                    items={props.section.items}\n                    sectionId={props.section.id}\n                    updateTracker={props.updateTracker}\n                    game={game}\n                    foundItems={foundItems}\n                    foundModifiers={foundModifiers}\n                />\n                <State state={props.section.state} game={game} />\n                <FolderEdit\n                    folderEdit={props.section.folderEdit}\n                    sectionId={props.section.id}\n                />\n            </div>\n        );\n    }\n\n    return null;\n}, shouldUpdate);\n\nexport default NoteSection;\n","/** @format */\n\nimport {\n    useState,\n    useEffect,\n    useCallback,\n    useContext,\n    useMemo,\n    createRef,\n} from 'react';\nimport NoteSection from './NoteSection';\nimport NotesContext from '../../../common/NotesContext';\nimport styles from './styles/Notes.Module.css';\n\nfunction Notes(props) {\n    const { notes, showNotes, showTracker, mode } = useContext(NotesContext);\n\n    const [state, setState] = useState({\n        section: 0,\n        sectionTop: 5,\n        scrollPosition: 0,\n    });\n\n    const [numSections, setNumSections] = useState(\n        Math.min(10, notes.sections.length),\n    );\n\n    const notesRef = createRef();\n\n    const sectionRefs = useMemo(() => {\n        const refsArray = new Array(notes.sections.length);\n        notes.sections.map((section) => (refsArray[section.id] = createRef()));\n        return refsArray;\n    }, [notes]);\n\n    const renderNewSections = useCallback(\n        (entries, observer) => {\n            const [entry] = entries;\n\n            if (entry.isIntersecting && numSections !== notes.sections.length) {\n                setNumSections(\n                    Math.min(numSections + 10, notes.sections.length),\n                );\n            }\n        },\n        [numSections, notes, setNumSections],\n    );\n\n    const observer = useMemo(() => {\n        const options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 0.2,\n        };\n\n        return new IntersectionObserver(renderNewSections, options);\n    }, [renderNewSections]);\n\n    useEffect(() => {\n        if (mode === 'list' && showNotes) {\n            // TODO: Find a solution to scroll to the expected section when switching from presenter to list mode.\n            if (sectionRefs[state.section].current != null) {\n                sectionRefs[state.section].current.scrollIntoView({\n                    behavior: 'instant',\n                });\n            } else {\n                setState({ ...state, section: 0 });\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [mode, showNotes]);\n\n    useEffect(() => {\n        observer.disconnect();\n        if (\n            numSections < notes.sections.length &&\n            mode === 'list' &&\n            showNotes\n        ) {\n            observer.observe(sectionRefs[numSections - 1].current);\n        }\n    }, [mode, showNotes, sectionRefs, numSections, observer, notes]);\n\n    const onScroll = (e) => {\n        let scrollPosition = e.target.scrollTop;\n        let newSectionTop = state.sectionTop;\n\n        let i = 0;\n        if (\n            scrollPosition > state.scrollPosition &&\n            state.section !== notes.sections.length\n        ) {\n            while (\n                scrollPosition >=\n                Math.floor(\n                    newSectionTop +\n                        sectionRefs[\n                            state.section + i\n                        ].current.getBoundingClientRect().height +\n                        10,\n                )\n            ) {\n                newSectionTop =\n                    newSectionTop +\n                    Math.floor(\n                        sectionRefs[\n                            state.section + i\n                        ].current.getBoundingClientRect().height + 10,\n                    );\n                i++;\n\n                if (state.section + i === notes.sections.length) {\n                    break;\n                }\n            }\n        } else if (\n            scrollPosition < state.scrollPosition &&\n            state.section !== 0\n        ) {\n            while (scrollPosition < newSectionTop) {\n                i--;\n                newSectionTop =\n                    newSectionTop -\n                    sectionRefs[\n                        state.section + i\n                    ].current.getBoundingClientRect().height -\n                    10;\n\n                if (state.section + i === 0) {\n                    break;\n                }\n            }\n        }\n\n        setState({\n            ...state,\n            section: state.section + i,\n            sectionTop: newSectionTop,\n            scrollPosition: scrollPosition,\n        });\n    };\n\n    const handleKeyPress = (e) => {\n        let keyPress = e.key;\n        if (\n            keyPress === 'ArrowLeft' ||\n            keyPress === 'ArrowRight' ||\n            keyPress === ' '\n        ) {\n            e.preventDefault();\n        }\n\n        if (keyPress === 'ArrowLeft' && state.section !== 0) {\n            if (mode === 'list') {\n                sectionRefs[state.section - 1].current.scrollIntoView({\n                    behavior: 'smooth',\n                });\n            } else if (mode === 'presenter') {\n                setState({\n                    ...state,\n                    section: state.section - 1,\n                });\n            }\n        } else if (\n            (keyPress === ' ' || keyPress === 'ArrowRight') &&\n            state.section !== notes.sections.length - 1\n        ) {\n            if (mode === 'list') {\n                sectionRefs[state.section + 1].current.scrollIntoView({\n                    behavior: 'smooth',\n                });\n            } else if (mode === 'presenter') {\n                setState({\n                    ...state,\n                    section: state.section + 1,\n                });\n            }\n        }\n    };\n\n    const previousSection = (e) => {\n        e.preventDefault();\n\n        if (state.section !== 0) {\n            setState({\n                ...state,\n                section: state.section - 1,\n            });\n        }\n    };\n\n    const nextSection = (e) => {\n        e.preventDefault();\n\n        if (state.section !== notes.sections.length - 1) {\n            setState({\n                ...state,\n                section: state.section + 1,\n            });\n        }\n    };\n\n    const fullSizeClass = !showTracker ? styles.fullSize : '';\n\n    if (showNotes) {\n        if (mode === 'list') {\n            return (\n                <div\n                    data-id={\n                        process.env.NODE_ENV === 'development'\n                            ? 'notes-container'\n                            : null\n                    }\n                    onScroll={onScroll}\n                    onKeyDown={handleKeyPress}\n                    className={`${styles.notes} ${fullSizeClass}`}\n                    ref={notesRef}\n                    tabIndex=\"0\">\n                    {notes.sections.slice(0, numSections).map((section) => (\n                        <NoteSection\n                            key={'section-' + section.id}\n                            noteRef={sectionRefs[section.id]}\n                            section={section}\n                            updateTracker={props.updateTracker}\n                            fullscreenImage={props.fullscreenImage}\n                        />\n                    ))}\n                </div>\n            );\n        } else if (mode === 'presenter') {\n            const section = notes.sections[state.section];\n\n            return (\n                <div\n                    data-id={\n                        process.env.NODE_ENV === 'development'\n                            ? 'notes-container'\n                            : null\n                    }\n                    onKeyDown={handleKeyPress}\n                    className={`${styles.notes} ${fullSizeClass}`}\n                    ref={notesRef}\n                    tabIndex=\"0\">\n                    <NoteSection\n                        key={'section-' + section.id}\n                        noteRef={sectionRefs[section.id]}\n                        section={section}\n                        updateTracker={props.updateTracker}\n                        previousSection={previousSection}\n                        nextSection={nextSection}\n                        fullscreenImage={props.fullscreenImage}\n                    />\n                </div>\n            );\n        }\n    }\n\n    return null;\n}\n\nexport default Notes;\n","/** @format */\n\nimport { useContext } from 'react';\nimport NotesContext from '../../../common/NotesContext';\nimport styles from './styles/Modifiers.Module.css';\nimport themeMMBN from './styles/themes/MMBN/MMBN-Modifiers.Module.css';\n\nfunction Modifier(props) {\n    const foundClass = props.foundModifiers[props.id].includes(props.modifier)\n        ? styles.found\n        : '';\n    return (\n        <div\n            id={'tracker-modifier-' + props.id + '-' + props.modifier}\n            className={`${styles.modifier} ${styles[props.game]} ${foundClass}`}\n            onClick={() => props.updateFound(props.modifier)}>\n            {props.modifier}{' '}\n        </div>\n    );\n}\n\nfunction Modifiers(props) {\n    const {\n        notes: { game },\n        foundModifiers,\n    } = useContext(NotesContext);\n\n    let theme = {};\n    if (game.includes('MMBN') || game.includes('OSS')) {\n        theme = themeMMBN;\n    }\n\n    const updateFound = (modifier) => {\n        props.updateTracker(props.id, modifier);\n    };\n\n    if (props.modifiers != null && props.modifiers.length > 0) {\n        return (\n            <div className={`${styles.modifiers} ${theme.modifiers}`}>\n                {props.modifiers.map((modifier) => (\n                    <Modifier\n                        key={'modifier-' + modifier}\n                        id={props.id}\n                        modifier={modifier}\n                        foundModifiers={foundModifiers}\n                        game={game}\n                        updateFound={updateFound}\n                    />\n                ))}\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default Modifiers;\n","/** @format */\n\nimport { useContext } from 'react';\nimport Modifiers from './Modifiers';\nimport NotesContext from '../../../common/NotesContext';\nimport styles from './styles/Item.Module.css';\nimport themeMMBN from './styles/themes/MMBN/MMBN-Item.Module.css';\nimport themeMMSF from './styles/themes/MMSF/MMSF-Item.Module.css';\n\nfunction Item(props) {\n    const {\n        notes: { game },\n    } = useContext(NotesContext);\n\n    let theme = {};\n    if (game.includes('MMBN') || game.includes('OSS')) {\n        theme = themeMMBN;\n    } else if (game.includes('MMSF')) {\n        theme = themeMMSF;\n    }\n\n    const updateFound = () => {\n        props.updateTracker(props.id, null);\n    };\n\n    if (props.id >= props.type.low && props.id <= props.type.high) {\n        const foundClass = props.found ? styles.found : '';\n\n        return (\n            <div>\n                <div\n                    id={'tracker-item-' + props.id}\n                    className={`${styles.item} ${theme[props.type.id]} ${\n                        theme.item\n                    } ${foundClass}`}\n                    onClick={updateFound}>\n                    <div className={`${styles.title} ${theme.title}`}>\n                        {(props.id - props.low + 1).toString().padStart(3, '0')}{' '}\n                        {props.name}\n                    </div>\n                    <img\n                        className={`${styles.itemArt} ${theme.itemArt}`}\n                        src={'/items/' + game + '/' + props.id + '.png'}\n                        alt={props.name + ' art'}\n                    />\n                </div>\n                <Modifiers\n                    id={props.id}\n                    modifiers={props.modifiers}\n                    updateTracker={props.updateTracker}\n                />\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default Item;\n","/** @format */\n\nimport { useContext } from 'react';\nimport styles from './styles/Tracker.Module.css';\nimport Item from './Item';\nimport NotesContext from '../../../common/NotesContext';\n\nfunction Tracker(props) {\n    const {\n        notes: { game },\n        showNotes,\n        showTracker,\n        foundItems,\n    } = useContext(NotesContext);\n\n    const fullSizeClass = !showNotes ? styles.fullSize : '';\n\n    let Items = require('../../../../resources/' + game + '/ItemNames.json');\n\n    if (showTracker) {\n        return (\n            <div\n                data-id={\n                    process.env.NODE_ENV === 'development'\n                        ? 'tracker-container'\n                        : null\n                }\n                className={`${styles.tracker}\n                ${fullSizeClass}`}>\n                {Items.types.map((type) => (\n                    <div\n                        key={'type-' + type.name}\n                        className={`card ${styles.section}`}>\n                        <div className={styles.header}>{type.name}</div>\n                        <div id=\"Items\" className={styles.list}>\n                            {Items.Items.map((item) => (\n                                <Item\n                                    key={'item-' + item.id}\n                                    id={item.id}\n                                    name={item.name}\n                                    type={type}\n                                    low={type.low}\n                                    modifiers={item.modifiers}\n                                    updateTracker={props.updateTracker}\n                                    found={foundItems.includes(item.id)}\n                                />\n                            ))}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default Tracker;\n","/** @format */\n\nimport styles from './styles/LargeImage.Module.css';\n\nfunction LargeImage(props) {\n    const onClick = (e) => {\n        if (e.target.tagName !== 'IMG') {\n            props.fullscreenImage(null);\n        }\n    };\n\n    if (props.image != null) {\n        return (\n            <div className={styles.fullscreenPreview} onClick={onClick}>\n                <img className={styles.image} src={props.image} alt=\"\" />\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default LargeImage;\n","/** @format */\n\nimport { createContext } from 'react';\n\nconst RouteContext = createContext({});\n\nexport default RouteContext;\n","/** @format */\n\nimport { useState, useCallback, useContext, Suspense } from 'react';\nimport styles from './styles/Route.Module.css';\nimport Menu from './Menu';\nimport Notes from './notes/Notes';\nimport Tracker from './tracker/Tracker';\nimport LargeImage from './LargeImage';\nimport useMatchMedia from '../../common/functions/useMatchMedia';\nimport RouteContext from '../../common/RouteContext';\nimport NotesContext from '../../common/NotesContext';\nimport useSuspenseResource from '../../common/functions/useSuspense';\n\nfunction Route(props) {\n    let path = '';\n    if (props.match != null) {\n        path = props.match.params.routePath;\n    }\n\n    const notesResource = useSuspenseResource(async () => {\n        const response = await fetch(\n            `${process.env.PUBLIC_URL}/notes/${path}.json`,\n        );\n\n        return await response.json();\n    }, [path]);\n\n    return (\n        <Suspense fallback=\"Loading...\">\n            <RouteImpl {...props} notesResource={notesResource} />\n        </Suspense>\n    );\n}\n\nconst getInitialState = (notes, isMobile) => {\n    let initialTrackerDisplay = true;\n    let initialMode = 'list';\n    // If on mobile, swap to presenter mode by default and hide the tracker\n    if (isMobile) {\n        initialTrackerDisplay = false;\n        initialMode = 'presenter';\n    }\n\n    const Items = require('../../../resources/' +\n        notes.game +\n        '/ItemNames.json');\n\n    let initialFoundItems = JSON.parse(\n        localStorage.getItem('foundItems-' + notes.game),\n    );\n    let initialFoundModifiers = JSON.parse(\n        localStorage.getItem('foundModifiers-' + notes.game),\n    );\n\n    // Update foundItems and foundModifiers if nothing was in local storage\n    if (initialFoundItems == null || initialFoundItems.length === 0) {\n        initialFoundItems = JSON.parse(\n            JSON.stringify(\n                require('../../../resources/' +\n                    notes.game +\n                    '/DefaultFoundItems.json'),\n            ),\n        );\n    }\n\n    if (Items.modifiers && initialFoundModifiers == null) {\n        initialFoundModifiers = JSON.parse(\n            JSON.stringify(\n                require('../../../resources/' +\n                    notes.game +\n                    '/DefaultFoundModifiers.json'),\n            ),\n        );\n    }\n\n    return {\n        notes: notes,\n        showNotes: true,\n        showTracker: initialTrackerDisplay,\n        mode: initialMode,\n        foundItems: initialFoundItems,\n        foundModifiers: initialFoundModifiers,\n        folderEditView: 'Actions',\n    };\n};\n\nfunction RouteImpl(props) {\n    const routeContext = useContext(RouteContext);\n    let notes;\n    if (routeContext.route != null) {\n        notes = routeContext.route;\n    } else {\n        notes = props.notesResource.read();\n    }\n\n    const [state, setState] = useState(\n        getInitialState(notes, useMatchMedia('(max-width: 600px)')),\n    );\n\n    const setContext = useCallback(\n        (updates) => {\n            setState({ ...state, ...updates });\n        },\n        [state, setState],\n    );\n\n    const getContextValue = useCallback(\n        () => ({\n            ...state,\n            setContext,\n        }),\n        [state, setContext],\n    );\n\n    const updateTracker = useCallback(\n        (id, modifier) => {\n            let newFoundItems = [...state.foundItems];\n            let newFoundModifiers =\n                state.foundModifiers !== null\n                    ? [...state.foundModifiers]\n                    : null;\n            if (modifier == null) {\n                if (newFoundItems.includes(id)) {\n                    newFoundItems.splice(newFoundItems.indexOf(id), 1);\n                    if (newFoundModifiers != null) {\n                        newFoundModifiers[id] = [];\n                    }\n                } else {\n                    newFoundItems.push(id);\n                }\n            } else {\n                if (newFoundModifiers[id].includes(modifier)) {\n                    newFoundModifiers[id].splice(\n                        newFoundModifiers[id].indexOf(modifier),\n                        1,\n                    );\n                    if (newFoundModifiers[id].length === 0) {\n                        newFoundItems.splice(newFoundItems.indexOf(id), 1);\n                    }\n                } else {\n                    newFoundModifiers[id].push(modifier);\n                    if (!newFoundItems.includes(id)) {\n                        newFoundItems.push(id);\n                    }\n                }\n            }\n\n            setState({\n                ...state,\n                foundItems: newFoundItems,\n                foundModifiers: newFoundModifiers,\n            });\n\n            localStorage.setItem(\n                'foundItems-' + state.notes.game,\n                JSON.stringify(newFoundItems),\n            );\n            localStorage.setItem(\n                'foundModifiers-' + state.notes.game,\n                JSON.stringify(newFoundModifiers),\n            );\n        },\n        [state, setState],\n    );\n\n    const fullscreenImage = useCallback(\n        (image) => {\n            setState({ ...state, fullscreenImage: image });\n        },\n        [state, setState],\n    );\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <LargeImage\n                image={state.fullscreenImage}\n                fullscreenImage={fullscreenImage}\n            />\n            <NotesContext.Provider value={getContextValue()}>\n                <div className={`${styles.rightColumn}`}>\n                    <Menu\n                        preview={routeContext.preview}\n                        swapPreview={props.swapPreview}\n                    />\n                    <Tracker updateTracker={updateTracker} />\n                </div>\n                <Notes\n                    updateTracker={updateTracker}\n                    fullscreenImage={fullscreenImage}\n                />\n            </NotesContext.Provider>\n        </div>\n    );\n}\n\nexport default Route;\n","/** @format */\n\nimport { createContext } from 'react';\n\nconst GameContext = createContext('');\n\nexport default GameContext;\n","/** @format */\n\nimport { useContext, memo } from 'react';\nimport GameContext from '../../../common/GameContext';\nimport styles from './styles/ItemDropdown.Module.css';\nimport Button from '../../../common/Button';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (oldProps.item !== newProps.item) {\n        return false;\n    }\n\n    return true;\n}\n\nconst ItemDropdown = memo((props) => {\n    const gameInfo = useContext(GameContext);\n\n    const onUpdateItem = (e) => {\n        let value = e.target.value;\n\n        if (value !== '') {\n            value = parseInt(value);\n        }\n\n        props.updateItem.current(value);\n    };\n\n    const addDropdown = (e) => {\n        e.preventDefault();\n\n        props.updateItem.current(0);\n    };\n\n    if (props.item != null) {\n        if (props.type === 'text') {\n            return (\n                <select\n                    className={`${styles.select}`}\n                    value={props.item}\n                    onChange={onUpdateItem}>\n                    <option value=\"\">Remove {gameInfo.name}</option>\n                    {gameInfo.Items.map((item) => (\n                        <option value={item.id} key={'text-item-' + item.id}>\n                            {item.name}\n                        </option>\n                    ))}\n                </select>\n            );\n        } else if (props.type === 'section') {\n            return (\n                <select\n                    className={`${styles.select}`}\n                    value={props.item}\n                    onChange={onUpdateItem}>\n                    <option value=\"\">Select {gameInfo.name}</option>\n                    {gameInfo.Items.map((item) => (\n                        <option value={item.id} key={'section-item-' + item.id}>\n                            {item.name}\n                        </option>\n                    ))}\n                </select>\n            );\n        }\n    } else {\n        if (props.type === 'text') {\n            return (\n                <span className={`${styles.buffer}`}>\n                    <Button\n                        text={'Add ' + gameInfo.name}\n                        size=\"medium\"\n                        onClick={addDropdown}\n                    />\n                </span>\n            );\n        }\n    }\n\n    return null;\n}, shouldUpdate);\n\nexport default ItemDropdown;\n","/** @format */\n\nimport { useContext } from 'react';\nimport GameContext from '../../../common/GameContext';\nimport styles from './styles/ModifierDropdown.Module.css';\n\nfunction ModifierDropdown(props) {\n    const gameInfo = useContext(GameContext);\n\n    const onModifierUpdate = (e) => {\n        let value = e.target.value;\n        props.updateModifier.current(value);\n    };\n\n    if (!gameInfo.modifiers) {\n        return null;\n    }\n\n    if (props.item != null) {\n        if (gameInfo.Items[props.item] == null) {\n            return (\n                <select\n                    className={`${styles.select}`}\n                    value={props.modifier}\n                    onChange={onModifierUpdate}>\n                    <option value=\"\"> </option>\n                </select>\n            );\n        }\n\n        return (\n            <select\n                className={`${styles.select}`}\n                value={props.modifier}\n                onChange={onModifierUpdate}>\n                <option value=\"\"> </option>\n                {gameInfo.Items[props.item].modifiers.map((modifier) => (\n                    <option value={modifier} key={'text-modifier-' + modifier}>\n                        {modifier}\n                    </option>\n                ))}\n            </select>\n        );\n    }\n\n    return <span className={`${styles.buffer}`} />;\n}\n\nexport default ModifierDropdown;\n","/** @format */\n\nimport { useState, useEffect, useRef, useContext, memo } from 'react';\nimport styles from './styles/SectionText.Module.css';\nimport ItemDropdown from './ItemDropdown';\nimport ModifierDropdown from './ModifierDropdown';\nimport Icon from '../../../common/Icon';\nimport GameContext from '../../../common/GameContext';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (oldProps.text.id !== newProps.text.id) {\n        return false;\n    } else if (oldProps.text.text !== newProps.text.text) {\n        return false;\n    } else if (oldProps.text.item !== newProps.text.item) {\n        return false;\n    } else if (oldProps.text.modifier !== newProps.text.modifier) {\n        return false;\n    } else if (oldProps.max !== newProps.max) {\n        return false;\n    }\n\n    return true;\n}\n\nconst SectionText = memo((props) => {\n    const game = useContext(GameContext);\n\n    const [cursor, setCursor] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const input = ref.current;\n        if (input) {\n            input.setSelectionRange(cursor, cursor);\n        }\n    }, [ref, cursor, props.text.text]);\n\n    const onTextUpdate = (e) => {\n        // Remember cursor position\n        setCursor(e.target.selectionStart);\n\n        const newText = JSON.parse(JSON.stringify(props.text));\n        newText.text = e.target.value;\n        props.updateText.current(newText, props.text.id);\n    };\n\n    const updateItem = (item) => {\n        const newText = JSON.parse(JSON.stringify(props.text));\n        if (item !== '') {\n            newText.item = item;\n        } else {\n            newText.item = null;\n        }\n        props.updateText.current(newText, props.text.id);\n    };\n    const updateItemRef = useRef();\n    updateItemRef.current = updateItem;\n\n    const updateModifier = (modifier) => {\n        const newText = JSON.parse(JSON.stringify(props.text));\n        newText.modifier = modifier;\n        props.updateText.current(newText, props.text.id);\n    };\n    const updateModifierRef = useRef();\n    updateModifierRef.current = updateModifier;\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <textarea\n                ref={ref}\n                className={`${styles.textarea}`}\n                value={props.text.text}\n                placeholder=\"Text\"\n                onChange={onTextUpdate}\n            />\n            <ItemDropdown\n                type=\"text\"\n                item={props.text.item}\n                game={game}\n                updateItem={updateItemRef}\n            />\n            <ModifierDropdown\n                type=\"text\"\n                item={props.text.item}\n                modifier={props.text.modifier}\n                updateModifier={updateModifierRef}\n            />\n            <Icon\n                src=\"/icons/up.png\"\n                id={'moveTextUp-' + props.text.id}\n                size=\"small\"\n                hover={true}\n                hidden={props.text.id === 0}\n                altText=\"Up\"\n                onClick={() => props.moveTextUp.current(props.text.id)}\n            />\n            <Icon\n                src=\"/icons/down.png\"\n                id={'moveTextDown-' + props.text.id}\n                size=\"small\"\n                hover={true}\n                hidden={props.text.id === props.max}\n                altText=\"Down\"\n                onClick={() => props.moveTextDown.current(props.text.id)}\n            />\n            <Icon\n                src=\"/icons/delete.png\"\n                id={'deleteText-' + props.text.id}\n                size=\"small\"\n                hover={true}\n                hidden={false}\n                grayscale={true}\n                altText=\"X\"\n                onClick={() => props.deleteText.current(props.text.id)}\n            />\n        </div>\n    );\n}, shouldUpdate);\n\nexport default SectionText;\n","/** @format */\n\nimport { useRef, memo } from 'react';\nimport styles from './styles/SectionItem.Module.css';\nimport ItemDropdown from './ItemDropdown';\nimport ModifierDropdown from './ModifierDropdown';\nimport Icon from '../../../common/Icon';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (oldProps.item.id !== newProps.item.id) {\n        return false;\n    } else if (oldProps.item.value !== newProps.item.value) {\n        return false;\n    } else if (oldProps.item.modifier !== newProps.item.modifier) {\n        return false;\n    } else if (oldProps.max !== newProps.max) {\n        return false;\n    }\n\n    return true;\n}\n\nconst SectionItem = memo((props) => {\n    const updateItem = (item) => {\n        const newItem = JSON.parse(JSON.stringify(props.item));\n        newItem.value = item;\n        props.updateItem.current(newItem, props.item.id);\n    };\n    const updateItemRef = useRef();\n    updateItemRef.current = updateItem;\n\n    const updateModifier = (modifier) => {\n        const newItem = JSON.parse(JSON.stringify(props.item));\n        newItem.modifier = modifier;\n        props.updateItem.current(newItem, props.item.id);\n    };\n    const updateModifierRef = useRef();\n    updateModifierRef.current = updateModifier;\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <ItemDropdown\n                type=\"section\"\n                item={props.item.value}\n                updateItem={updateItemRef}\n            />\n            <ModifierDropdown\n                type=\"section\"\n                item={props.item.value}\n                modifier={props.item.modifier}\n                updateModifier={updateModifierRef}\n            />\n            <Icon\n                src=\"/icons/up.png\"\n                size=\"small\"\n                hover={true}\n                hidden={props.item.id === 0}\n                altText=\"Up\"\n                onClick={() => props.moveItemUp.current(props.item.id)}\n            />\n            <Icon\n                src=\"/icons/down.png\"\n                size=\"small\"\n                hover={true}\n                hidden={props.item.id === props.max}\n                altText=\"Down\"\n                onClick={() => props.moveItemDown.current(props.item.id)}\n            />\n            <Icon\n                src=\"/icons/delete.png\"\n                size=\"small\"\n                hover={true}\n                hidden={false}\n                grayscale={true}\n                altText=\"X\"\n                onClick={() => props.deleteItem.current(props.item.id)}\n            />\n        </div>\n    );\n}, shouldUpdate);\n\nexport default SectionItem;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/PreviewImage.Module.css';\n\nclass PreviewImage extends React.Component {\n    render() {\n        if (this.props.image == null || this.props.image === '') {\n            return null;\n        }\n\n        return (\n            <img className={`${styles.img}`} src={this.props.image} alt=\"\" />\n        );\n    }\n}\n\nexport default PreviewImage;\n","/** @format */\n\nimport React from 'react';\nimport PreviewImage from './PreviewImage';\nimport Icon from '../../../common/Icon';\nimport styles from './styles/SectionImage.Module.css';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (oldProps.image !== newProps.image) {\n        return false;\n    } else if (oldProps.updateImage !== newProps.updateImage) {\n        return false;\n    }\n\n    return true;\n}\n\nconst SectionImage = React.memo((props) => {\n    const getBase64 = (file, callback) => {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function () {\n            callback(reader.result);\n        };\n        reader.onerror = function (error) {\n            console.log('Error: ', error);\n        };\n    };\n\n    let deleteIcon;\n    if (props.image != null) {\n        deleteIcon = (\n            <Icon\n                src=\"/icons/delete.png\"\n                size=\"small\"\n                hover={true}\n                grayscale={true}\n                altText=\"X\"\n                onClick={props.deleteImage}\n            />\n        );\n    }\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <div className={`${styles.input}`}>\n                <input\n                    type=\"file\"\n                    onChange={(e) => {\n                        getBase64(e.target.files[0], props.updateImage);\n                    }}\n                />\n                {deleteIcon}\n            </div>\n            <PreviewImage image={props.image} />\n        </div>\n    );\n}, shouldUpdate);\n\nexport default SectionImage;\n","/** @format */\n\nimport { memo } from 'react';\nimport Button from '../../../common/Button';\nimport styles from './styles/SectionState.Module.css';\nimport areShallowEqual from 'are-shallow-equal';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (areShallowEqual(oldProps, newProps)) {\n        return true;\n    }\n\n    return false;\n}\n\nconst SectionState = memo((props) => {\n    const onStateValueChange = (key, value) => {\n        // JSON stringify, then JSON parse to make a deep copy.\n        let newState = JSON.parse(JSON.stringify(props.state));\n        newState[key].value = value;\n        props.updateState(newState);\n    };\n\n    const onStateShownChange = (key, value) => {\n        // JSON stringify, then JSON parse to make a deep copy.\n        let newState = JSON.parse(JSON.stringify(props.state));\n        newState[key].shown = value;\n        props.updateState(newState);\n    };\n\n    if (props.state != null) {\n        return (\n            <div>\n                <div className={`${styles.wrapper}`}>\n                    {props.state.keys.map((key) => (\n                        <div className={`${styles.stateField}`} key={key}>\n                            <label\n                                className={`${styles.label}`}\n                                htmlFor={\n                                    'state-' + key + '-' + props.sectionId\n                                }>\n                                {key}\n                            </label>\n                            <div className={`${styles.inputs}`}>\n                                <input\n                                    type=\"text\"\n                                    className={styles.textInput}\n                                    defaultValue={props.state[key].value}\n                                    onChange={(e) => {\n                                        onStateValueChange(key, e.target.value);\n                                    }}\n                                />\n                                <input\n                                    type=\"checkbox\"\n                                    className={styles.checkbox}\n                                    checked={props.state[key].shown}\n                                    onChange={(e) => {\n                                        onStateShownChange(\n                                            key,\n                                            e.target.checked,\n                                        );\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"col-2\">\n                    <Button\n                        text=\"Delete State\"\n                        size=\"medium\"\n                        onClick={props.deleteState}\n                    />\n                </div>\n            </div>\n        );\n    }\n    return <Button text=\"Add State\" size=\"medium\" onClick={props.addState} />;\n}, shouldUpdate);\n\nexport default SectionState;\n","/** @format */\n\nimport performFolderEditAction from './performFolderEditAction';\n\nexport default function getNewFolder(folderEdit, folder, gameInfo) {\n    let newFolder = JSON.parse(JSON.stringify(folder));\n    for (const action of folderEdit.value) {\n        newFolder = performFolderEditAction(newFolder, action, gameInfo);\n    }\n\n    return newFolder;\n}\n","/** @format */\n\nimport { useContext, memo } from 'react';\nimport Icon from '../../../common/Icon';\nimport Button from '../../../common/Button';\nimport GameContext from '../../../common/GameContext';\nimport performFolderEditAction from '../../../common/functions/performFolderEditAction';\nimport getNewFolder from '../../../common/functions/getNewFolder';\nimport styles from './styles/SectionFolderEdit.Module.css';\nimport areShallowEqual from 'are-shallow-equal';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (areShallowEqual(oldProps, newProps)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction ItemOption(props) {\n    const gameInfo = useContext(GameContext);\n\n    if (props.item !== -1) {\n        return (\n            <option value={props.slot} key={props.slot}>\n                {parseInt(props.slot) + 1}. {gameInfo.Items[props.item].name}{' '}\n                {props.modifier}\n            </option>\n        );\n    }\n\n    return null;\n}\n\nfunction ItemDropdown(props) {\n    const gameInfo = useContext(GameContext);\n\n    // For Reg/Default and Remove, return a list of items in the folder\n    // For Add, return a list of all possible items\n    // For Swap and Tag, return 2 lists of items in the folder\n    // For Replace, return a list of items in the folder, and a list of all possible items.\n    // For Sort, return a list of the sort types for the game, and a checkbox to reverse the sort.\n    if (\n        (props.action.action === 'Reg' && props.id === 1) ||\n        (props.action.action === 'Default' && props.id === 1) ||\n        (props.action.action === 'Remove' && props.id === 1) ||\n        props.action.action === 'Swap' ||\n        (props.action.action === 'Replace' && props.id === 1) ||\n        props.action.action === 'Tag'\n    ) {\n        return (\n            <select\n                value={props.action['item' + props.id]}\n                className={`${styles.select} ${styles.itemDropdown}`}\n                onChange={(e) => {\n                    props.onUpdate(props.action.id, e.target.value);\n                }}>\n                <option value={-1}> </option>\n                {props.folder.map((item) => (\n                    <ItemOption\n                        key={item.slot}\n                        slot={item.slot}\n                        item={item.item}\n                        modifier={item.modifier}\n                        game={props.game}\n                    />\n                ))}\n            </select>\n        );\n    } else if (\n        (props.action.action === 'Add' && props.id === 1) ||\n        (props.action.action === 'Replace' && props.id === 2)\n    ) {\n        // Generate a list of all items with modifiers\n        const itemList = [];\n        for (let item of gameInfo.Items) {\n            if (gameInfo.modifiers) {\n                for (let modifier of item.modifiers) {\n                    itemList.push({\n                        id: item.id,\n                        name: item.name,\n                        modifier: modifier,\n                    });\n                }\n            } else {\n                itemList.push({\n                    id: item.id,\n                    name: item.name,\n                });\n            }\n        }\n        return (\n            <select\n                value={\n                    props.action['item' + props.id] +\n                    (gameInfo.modifiers\n                        ? '-' + props.action['modifier' + props.id]\n                        : '')\n                }\n                className={`${styles.select} ${styles.itemDropdown}`}\n                onChange={(e) => {\n                    props.onUpdate(props.action.id, e.target.value);\n                }}>\n                <option value={-1}> </option>\n                {itemList.map((item) => (\n                    <option\n                        value={\n                            item.id +\n                            (gameInfo.modifiers ? '-' + item.modifier : '')\n                        }\n                        key={\n                            item.id + (gameInfo.modifiers ? item.modifier : '')\n                        }>\n                        {item.name} {item.modifier}\n                    </option>\n                ))}\n            </select>\n        );\n    } else if (props.action.action === 'Sort' && props.id === 1) {\n        return (\n            <select\n                value={props.action.item1 + (props.action.item2 ? '-r' : '')}\n                className={`${styles.select} ${styles.itemDropdown}`}\n                onChange={(e) => {\n                    props.onUpdate(props.action.id, e.target.value);\n                }}>\n                <option value={''}> </option>\n                {gameInfo.sortTypes.map((sortType) => (\n                    <option value={sortType} key={sortType}>\n                        {sortType}\n                    </option>\n                ))}\n                {gameInfo.sortTypes.map((sortType) => (\n                    <option value={sortType + '-r'} key={sortType + '-r'}>\n                        R. {sortType}\n                    </option>\n                ))}\n            </select>\n        );\n    }\n    return null;\n}\n\nfunction Action(props) {\n    const gameInfo = useContext(GameContext);\n\n    // For formatting purposes, add an extra spacer div between the 2 dropdowns for actions that require both.\n    let spacer;\n    if (\n        props.action.action === 'Replace' ||\n        props.action.action === 'Swap' ||\n        props.action.action === 'Tag'\n    ) {\n        spacer = <div className={`${styles.spacer}`} />;\n    }\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <select\n                value={props.action.action}\n                className={`${styles.select}`}\n                onChange={(e) => {\n                    props.updateAction(props.action.id, e.target.value);\n                }}>\n                <option value=\"\"> </option>\n                {gameInfo.actionTypes.map((action) => (\n                    <option key={action} value={action}>\n                        {action}\n                    </option>\n                ))}\n            </select>\n            <ItemDropdown\n                action={props.action}\n                id={1}\n                folder={props.folder}\n                onUpdate={props.updateItem1}\n            />\n            <Icon\n                src=\"/icons/delete.png\"\n                id={'deleteAction-' + props.action.id}\n                size=\"small\"\n                altText=\"X\"\n                hover={true}\n                grayscale={true}\n                onClick={() => {\n                    props.deleteAction(props.action.id);\n                }}\n            />\n            {spacer}\n            <ItemDropdown\n                action={props.action}\n                id={2}\n                folder={props.folder}\n                onUpdate={props.updateItem2}\n            />\n        </div>\n    );\n}\n\nfunction ActionsList(props) {\n    const gameInfo = useContext(GameContext);\n    // JSON stringify, then JSON parse to make a deep copy.\n    let tempFolder = JSON.parse(JSON.stringify(props.folderEdit.prevFolder));\n    const actionsList = [];\n\n    for (const action of props.folderEdit.value) {\n        actionsList.push(\n            <Action\n                key={action.id}\n                action={action}\n                folder={tempFolder}\n                updateAction={props.updateAction}\n                updateItem1={props.updateItem1}\n                updateItem2={props.updateItem2}\n                deleteAction={props.deleteAction}\n            />,\n        );\n\n        tempFolder = performFolderEditAction(tempFolder, action, gameInfo);\n    }\n\n    return <div className={styles.wrapper}>{actionsList}</div>;\n}\n\nconst SectionFolderEdit = memo((props) => {\n    const gameInfo = useContext(GameContext);\n\n    const addAction = () => {\n        // JSON stringify, then JSON parse to make a deep copy.\n        let newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\n\n        newFolderEdit.value.push({\n            id: newFolderEdit.value.length,\n            action: '',\n            item1: -1,\n            modifier1: '',\n            item2: -1,\n            modifier2: '',\n        });\n        newFolderEdit.shown = true;\n\n        props.updateFolderEdit(newFolderEdit);\n    };\n\n    const updateAction = (id, action) => {\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\n\n        newFolderEdit.value[id].action = action;\n        // Reset items when a new action is selected.\n        newFolderEdit.value[id].item1 = -1;\n        newFolderEdit.value[id].modifier1 = null;\n        // For sorts, update item2 to be false to indicate it won't be a reverse sort\n        if (action === 'Sort') {\n            newFolderEdit.value[id].item2 = false;\n        } else {\n            newFolderEdit.value[id].item2 = -1;\n            newFolderEdit.value[id].modifier2 = null;\n        }\n\n        newFolderEdit.folder = getNewFolder(\n            newFolderEdit,\n            props.folderEdit.prevFolder,\n            gameInfo,\n        );\n\n        props.updateFolderEdit(newFolderEdit);\n    };\n\n    const updateItem1 = (id, item) => {\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\n        // For the Add action, the value will be a combination of the item's ID and modifier\n        if (newFolderEdit.value[id].action === 'Add') {\n            if (gameInfo.modifiers) {\n                const itemParts = item.split('-');\n                newFolderEdit.value[id].item1 = itemParts[0];\n                newFolderEdit.value[id].modifier1 = itemParts[1];\n            } else {\n                newFolderEdit.value[id].item1 = item;\n            }\n        } else if (newFolderEdit.value[id].action === 'Sort') {\n            if (item.includes('-')) {\n                const itemParts = item.split('-');\n                newFolderEdit.value[id].item1 = itemParts[0];\n                newFolderEdit.value[id].item2 = true;\n            } else {\n                newFolderEdit.value[id].item1 = item;\n                newFolderEdit.value[id].item2 = false;\n            }\n        } else {\n            newFolderEdit.value[id].item1 = item;\n        }\n\n        newFolderEdit.folder = getNewFolder(\n            newFolderEdit,\n            props.folderEdit.prevFolder,\n            gameInfo,\n        );\n\n        props.updateFolderEdit(newFolderEdit);\n    };\n\n    const updateItem2 = (id, item) => {\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\n        // For the Replace action, the value will be a combination of the item's ID and modifier\n        if (newFolderEdit.value[id].action === 'Replace') {\n            if (gameInfo.modifiers) {\n                const itemParts = item.split('-');\n                newFolderEdit.value[id].item2 = itemParts[0];\n                newFolderEdit.value[id].modifier2 = itemParts[1];\n            } else {\n                newFolderEdit.value[id].item2 = item;\n            }\n        } else {\n            newFolderEdit.value[id].item2 = item;\n        }\n\n        newFolderEdit.folder = getNewFolder(\n            newFolderEdit,\n            props.folderEdit.prevFolder,\n            gameInfo,\n        );\n\n        props.updateFolderEdit(newFolderEdit);\n    };\n\n    const deleteAction = (id) => {\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\n        newFolderEdit.value.splice(id, 1);\n\n        newFolderEdit.folder = getNewFolder(\n            newFolderEdit,\n            props.folderEdit.prevFolder,\n            gameInfo,\n        );\n\n        props.updateFolderEdit(newFolderEdit);\n    };\n\n    if (props.folderEdit != null) {\n        return (\n            <div className={styles.wrapper}>\n                <ActionsList\n                    folderEdit={props.folderEdit}\n                    updateAction={updateAction}\n                    updateItem1={updateItem1}\n                    updateItem2={updateItem2}\n                    deleteAction={deleteAction}\n                />\n                <Button text=\"Add Action\" size=\"medium\" onClick={addAction} />\n                <Button\n                    text=\"Delete Folder Edit\"\n                    size=\"medium\"\n                    onClick={props.deleteFolderEdit}\n                />\n            </div>\n        );\n    }\n    return (\n        <Button\n            text=\"Add Folder Edit\"\n            size=\"medium\"\n            onClick={props.addFolderEdit}\n        />\n    );\n}, shouldUpdate);\n\nexport default SectionFolderEdit;\n","/** @format */\n\nimport { useCallback, useRef, useContext, memo } from 'react';\nimport styles from './styles/Section.Module.css';\nimport GameContext from '../../../common/GameContext';\nimport Button from '../../../common/Button';\nimport Icon from '../../../common/Icon';\nimport SectionText from './SectionText';\nimport SectionItem from './SectionItem';\nimport SectionImage from './SectionImage';\nimport SectionState from './SectionState';\nimport SectionFolderEdit from './SectionFolderEdit';\nimport areShallowEqual from 'are-shallow-equal';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (areShallowEqual(oldProps.section, newProps.section)) {\n        return true;\n    }\n\n    return false;\n}\n\nconst Section = memo((props) => {\n    const gameInfo = useContext(GameContext);\n\n    const updateText = useCallback(\n        (text, id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.text[id] = text;\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n    const updateTextRef = useRef();\n    updateTextRef.current = updateText;\n\n    const addText = useCallback(\n        (e) => {\n            // Stringify then parse JSON to create deep copy.\n            e.preventDefault();\n\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.text.push({\n                id: newSection.text.length,\n                text: '',\n            });\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const moveTextUp = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            let chosenText = newSection.text[id];\n            chosenText.id = id - 1;\n            let aboveText = newSection.text[id - 1];\n            aboveText.id = id;\n\n            newSection.text[id] = aboveText;\n            newSection.text[id - 1] = chosenText;\n\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n    const moveTextUpRef = useRef();\n    moveTextUpRef.current = moveTextUp;\n\n    const moveTextDown = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            let chosenText = newSection.text[id];\n            chosenText.id = id + 1;\n            let belowText = newSection.text[id + 1];\n            belowText.id = id;\n\n            newSection.text[id] = belowText;\n            newSection.text[id + 1] = chosenText;\n\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n    const moveTextDownRef = useRef();\n    moveTextDownRef.current = moveTextDown;\n\n    const deleteText = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            for (let i = id + 1; i < newSection.text.length; i++) {\n                newSection.text[i].id--;\n            }\n\n            newSection.text.splice(id, 1);\n\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n    const deleteTextRef = useRef();\n    deleteTextRef.current = deleteText;\n\n    const updateItem = useCallback(\n        (item, id) => {\n            // Stringify then parse JSON to create deep copy.\n            const newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.items[id] = item;\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n    const updateItemRef = useRef();\n    updateItemRef.current = updateItem;\n\n    const addItem = useCallback(() => {\n        // Stringify then parse JSON to create deep copy.\n        let newSection = JSON.parse(JSON.stringify(props.section));\n        newSection.items.push({\n            id: newSection.items.length,\n            value: 0,\n        });\n        props.setSection.current(newSection, props.section.id);\n    }, [props]);\n\n    const moveItemUp = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            let chosenItem = newSection.items[id];\n            chosenItem.id = id - 1;\n            let aboveItem = newSection.items[id - 1];\n            aboveItem.id = id;\n\n            newSection.items[id] = aboveItem;\n            newSection.items[id - 1] = chosenItem;\n\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n    const moveItemUpRef = useRef();\n    moveItemUpRef.current = moveItemUp;\n\n    const moveItemDown = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            let chosenItem = newSection.items[id];\n            chosenItem.id = id + 1;\n            let belowItem = newSection.items[id + 1];\n            belowItem.id = id;\n\n            newSection.items[id] = belowItem;\n            newSection.items[id + 1] = chosenItem;\n\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n    const moveItemDownRef = useRef();\n    moveItemDownRef.current = moveItemDown;\n\n    const deleteItem = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            for (let i = id + 1; i < newSection.items.length; i++) {\n                newSection.items[i].id--;\n            }\n\n            newSection.items.splice(id, 1);\n\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n    const deleteItemRef = useRef();\n    deleteItemRef.current = deleteItem;\n\n    const updateImage = useCallback(\n        (image) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.image = image;\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const deleteImage = useCallback(() => {\n        // Stringify then parse JSON to create deep copy.\n        let newSection = JSON.parse(JSON.stringify(props.section));\n        newSection.image = null;\n        props.setSection.current(newSection, props.section.id);\n    }, [props]);\n\n    const updateState = useCallback(\n        (state) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.state = state;\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const addState = useCallback(\n        (e) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.state = props.getLastState.current(props.section.id);\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const deleteState = useCallback(() => {\n        // Stringify then parse JSON to create deep copy.\n        let newSection = JSON.parse(JSON.stringify(props.section));\n        newSection.state = null;\n        props.setSection.current(newSection, props.section.id);\n    }, [props]);\n\n    const updateFolderEdit = (folderEdit) => {\n        // JSON stringify, then JSON parse to make a deep copy.\n        let newSection = JSON.parse(JSON.stringify(props.section));\n        newSection.folderEdit = folderEdit;\n        props.setSection.current(newSection, props.section.id);\n    };\n\n    const addFolderEdit = useCallback(\n        (e) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.folderEdit = props.getLastFolderEdit.current(\n                props.section.id,\n            );\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const deleteFolderEdit = useCallback(\n        (e) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.folderEdit = null;\n            props.setSection.current(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const insertSection = useCallback(\n        (e) => {\n            props.addSection.current(props.section.id + 1);\n        },\n        [props],\n    );\n\n    return (\n        <div id={'section-' + props.section.id} className={`${styles.section}`}>\n            <div className={`${styles.sectionHeader}`}>\n                <h3 className={`${styles.header}`}>\n                    Section {props.section.id + 1}\n                </h3>\n                <Icon\n                    src=\"/icons/up.png\"\n                    id={'moveSectionUp-' + props.section.id}\n                    size=\"small\"\n                    altText=\"Up\"\n                    hover={true}\n                    hidden={props.section.id === 0}\n                    onClick={() => {\n                        props.moveSectionUp.current(props.section.id);\n                    }}\n                />\n                <Icon\n                    src=\"/icons/down.png\"\n                    id={'moveSectionDown-' + props.section.id}\n                    size=\"small\"\n                    altText=\"Down\"\n                    hover={true}\n                    hidden={props.section.id === props.max}\n                    onClick={() => {\n                        props.moveSectionDown.current(props.section.id);\n                    }}\n                />\n                <Icon\n                    src=\"/icons/delete.png\"\n                    id={'deleteSection-' + props.section.id}\n                    size=\"small\"\n                    altText=\"X\"\n                    hover={true}\n                    grayscale={true}\n                    onClick={() => {\n                        props.deleteSection.current(props.section.id);\n                    }}\n                />\n            </div>\n            <div className={`${styles.wrapper}`}>\n                <div className={`${styles.textContainer}`}>\n                    <h4>Text</h4>\n                    {props.section.text.map((text) => (\n                        <SectionText\n                            key={'text-' + text.id}\n                            sectionId={props.section.id}\n                            text={text}\n                            max={props.section.text.length - 1}\n                            updateText={updateTextRef}\n                            moveTextUp={moveTextUpRef}\n                            moveTextDown={moveTextDownRef}\n                            deleteText={deleteTextRef}\n                        />\n                    ))}\n                    <Button text=\"Add Text\" size=\"medium\" onClick={addText} />\n                </div>\n                <div className={`${styles.itemsContainer}`}>\n                    <h4>{gameInfo.name}s</h4>\n                    {props.section.items.map((item) => (\n                        <SectionItem\n                            key={'item-' + item.id}\n                            item={item}\n                            max={props.section.items.length - 1}\n                            updateItem={updateItemRef}\n                            moveItemUp={moveItemUpRef}\n                            moveItemDown={moveItemDownRef}\n                            deleteItem={deleteItemRef}\n                        />\n                    ))}\n                    <Button\n                        text={'Add ' + gameInfo.name}\n                        size=\"medium\"\n                        onClick={addItem}\n                    />\n                </div>\n            </div>\n            <div className={`${styles.wrapper}`}>\n                <div className={`${styles.imageContainer}`}>\n                    <h4>Image</h4>\n                    <SectionImage\n                        image={props.section.image}\n                        updateImage={updateImage}\n                        deleteImage={deleteImage}\n                    />\n                </div>\n                <div className={`${styles.stateContainer}`}>\n                    <h4>State</h4>\n                    <SectionState\n                        state={props.section.state}\n                        updateState={updateState}\n                        deleteState={deleteState}\n                        addState={addState}\n                    />\n                </div>\n                <div className={`${styles.folderEditContainer}`}>\n                    <h4>Folder Edit</h4>\n                    <SectionFolderEdit\n                        folderEdit={props.section.folderEdit}\n                        updateFolderEdit={updateFolderEdit}\n                        deleteFolderEdit={deleteFolderEdit}\n                        addFolderEdit={addFolderEdit}\n                    />\n                </div>\n            </div>\n            <Button\n                text=\"Add Section\"\n                id={'addSection-' + (props.section.id + 1)}\n                size=\"medium\"\n                onClick={insertSection}\n            />\n        </div>\n    );\n}, shouldUpdate);\n\nexport default Section;\n","/** @format */\n\nimport { useState, useEffect, useCallback, useRef, useContext } from 'react';\nimport RouteContext from '../../common/RouteContext';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Section from './Section/Section';\n\nimport styles from './styles/SectionList.Module.css';\n\nfunction SectionList(props) {\n    const { route, numSections, setContext } = useContext(RouteContext);\n\n    const [displayedSections, setDisplayedSections] = useState(\n        route.sections.slice(0, numSections),\n    );\n    const addMoreSections = () => {\n        setDisplayedSections(\n            route.sections.slice(\n                0,\n                Math.min(numSections + 10, route.sections.length),\n            ),\n        );\n        setContext({\n            numSections: Math.min(numSections + 10, route.sections.length),\n        });\n    };\n\n    useEffect(() => {\n        setDisplayedSections(route.sections.slice(0, numSections));\n    }, [route.sections, numSections]);\n\n    const setSection = (section, id) => {\n        const newSections = [...route.sections];\n        newSections[id] = section;\n        setContext({ route: { ...route, sections: newSections } });\n    };\n    const setSectionRef = useRef();\n    setSectionRef.current = setSection;\n\n    const addSection = useCallback(\n        (id) => {\n            let newSections = [...route.sections];\n            let newSection = {\n                id: id,\n                text: [],\n                items: [],\n            };\n\n            newSections.splice(id, 0, newSection);\n\n            for (let i = id + 1; i < newSections.length; i++) {\n                newSections[i].id++;\n            }\n\n            setContext({\n                route: { ...route, sections: newSections },\n                numSections: numSections + 1,\n            });\n        },\n        [route, setContext, numSections],\n    );\n    const addSectionRef = useRef();\n    addSectionRef.current = addSection;\n\n    const moveSectionUp = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSections = JSON.parse(JSON.stringify(route.sections));\n\n            let chosenSection = newSections[id];\n            chosenSection.id = id - 1;\n            let aboveSection = newSections[id - 1];\n            aboveSection.id = id;\n\n            newSections[id] = aboveSection;\n            newSections[id - 1] = chosenSection;\n\n            setContext({ route: { ...route, sections: newSections } });\n        },\n        [route, setContext],\n    );\n    const moveSectionUpRef = useRef();\n    moveSectionUpRef.current = moveSectionUp;\n\n    const moveSectionDown = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSections = JSON.parse(JSON.stringify(route.sections));\n\n            let chosenSection = newSections[id];\n            chosenSection.id = id + 1;\n            let belowSection = newSections[id + 1];\n            belowSection.id = id;\n\n            newSections[id] = belowSection;\n            newSections[id + 1] = chosenSection;\n\n            setContext({ route: { ...route, sections: newSections } });\n        },\n        [route, setContext],\n    );\n    const moveSectionDownRef = useRef();\n    moveSectionDownRef.current = moveSectionDown;\n\n    const deleteSection = useCallback(\n        (id) => {\n            // JSON stringify, then JSON parse to make a deep copy.\n            let newSections = JSON.parse(JSON.stringify(route.sections));\n\n            for (let i = id + 1; i < newSections.length; i++) {\n                newSections[i].id--;\n            }\n\n            newSections.splice(id, 1);\n\n            setContext({ route: { ...route, sections: newSections } });\n        },\n        [route, setContext],\n    );\n    const deleteSectionRef = useRef();\n    deleteSectionRef.current = deleteSection;\n\n    const getLastState = useCallback(\n        (id) => {\n            // Check previous sections for the last state value\n            let state = null;\n            for (let i = id - 1; i >= 0; i--) {\n                if (route.sections[i].state != null) {\n                    state = JSON.parse(JSON.stringify(route.sections[i].state));\n                    break;\n                }\n            }\n\n            // If no state was found, use initialState\n            if (state == null) {\n                state = JSON.parse(JSON.stringify(route.initialState));\n            }\n\n            return state;\n        },\n        [route],\n    );\n    const getLastStateRef = useRef();\n    getLastStateRef.current = getLastState;\n\n    const getLastFolderEdit = useCallback(\n        (id) => {\n            // Check previous sections for the last folder edit value\n            let folderEdit = null;\n            for (let i = id - 1; i >= 0; i--) {\n                if (route.sections[i].folderEdit != null) {\n                    folderEdit = JSON.parse(\n                        JSON.stringify(route.sections[i].folderEdit),\n                    );\n                    break;\n                }\n            }\n\n            // If no state was found, use initialState\n            if (folderEdit == null) {\n                folderEdit = JSON.parse(\n                    JSON.stringify(route.initialFolderEdit),\n                );\n            }\n\n            // Setup the previous folder to be the same as the starting folder, and clear the folder edit.\n            folderEdit.prevFolder = folderEdit.folder;\n            folderEdit.value = [\n                {\n                    id: 0,\n                    action: '',\n                    item1: -1,\n                    modifier1: '',\n                    item2: -1,\n                    modifier2: '',\n                },\n            ];\n\n            return folderEdit;\n        },\n        [route],\n    );\n    const getLastFolderEditRef = useRef();\n    getLastFolderEditRef.current = getLastFolderEdit;\n\n    return (\n        <div id=\"scrollableDiv\" className={`${styles.sectionList}`}>\n            <InfiniteScroll\n                dataLength={displayedSections}\n                next={addMoreSections}\n                hasMore={route.sections.length > displayedSections.length}\n                loader={'Loading...'}\n                scrollableTarget={'scrollableDiv'}>\n                {displayedSections.map((section) => (\n                    <Section\n                        key={'section-' + section.id}\n                        section={section}\n                        setSection={setSectionRef}\n                        max={route.sections.length - 1}\n                        moveSectionUp={moveSectionUpRef}\n                        moveSectionDown={moveSectionDownRef}\n                        addSection={addSectionRef}\n                        deleteSection={deleteSectionRef}\n                        getLastState={getLastStateRef}\n                        getLastFolderEdit={getLastFolderEditRef}\n                    />\n                ))}\n                <div className=\"bottom-buffer\"> </div>\n            </InfiniteScroll>\n        </div>\n    );\n}\n\nexport default SectionList;\n","/** @format */\n\nimport { useCallback, useContext } from 'react';\nimport { Buffer } from 'buffer';\nimport styles from './styles/RouteInfo.Module.css';\nimport RouteContext from '../../common/RouteContext';\nimport Button from '../../common/Button';\n\nconst equal = require('deep-equal');\n\nfunction RouteInfo(props) {\n    const { route, preview, setContext } = useContext(RouteContext);\n\n    const games = require('../../../resources/gamesList.json');\n    const routes = require('../../../notes/routes.json');\n\n    const generateDownload = useCallback(\n        (e) => {\n            e.preventDefault();\n\n            console.log(route);\n\n            let a = document.createElement('a');\n            a.href =\n                'data:text/json;base64;charset=utf-8,' +\n                Buffer.from(JSON.stringify(route)).toString('base64');\n            a.download = route.path + '.json';\n            a.click();\n        },\n        [route],\n    );\n\n    const importText = (text) => {\n        text = text.replace(/(\\r\\n|\\n|\\r)/gm, '\\n');\n        const lines = text.split('\\n');\n        let newSections = [];\n\n        let sectionId = 0;\n\n        for (let i = 0; i < lines.length; i++) {\n            let line = lines[i];\n            const section = {\n                id: sectionId,\n                text: [],\n                items: [],\n            };\n\n            let textId = 0;\n            while (line !== '') {\n                const text = {\n                    id: textId,\n                    text: line,\n                };\n\n                section.text.push(text);\n                i++;\n                textId++;\n\n                if (i < lines.length) {\n                    line = lines[i];\n                } else {\n                    line = '';\n                }\n            }\n\n            newSections.push(section);\n            sectionId++;\n        }\n\n        setContext({\n            route: { ...route, sections: newSections },\n            numSections: Math.min(10, newSections.length),\n        });\n    };\n\n    const importJSON = (file) => {\n        const route = JSON.parse(file);\n        const gameInfo = require('../../../resources/' +\n            route.game +\n            '/ItemNames.json');\n\n        // If initial state is different, the state variables need to be updated\n        if (!equal(route.initialState, gameInfo.initialState)) {\n            route.initialState = gameInfo.initialState;\n\n            for (const section of route.sections) {\n                if (section.state) {\n                    for (let key of gameInfo.initialState.keys) {\n                        if (!section.state.keys.includes(key)) {\n                            section.state[key] = gameInfo.initialState[key];\n                        }\n                    }\n\n                    section.state.keys = gameInfo.initialState.keys;\n                }\n            }\n        }\n\n        setContext({\n            route: route,\n            numSections: Math.min(10, route.sections.length),\n            gameInfo: gameInfo,\n        });\n    };\n\n    const handleUpload = (file, callback) => {\n        let reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function () {\n            callback(reader.result);\n        };\n        reader.onerror = function (error) {\n            console.log('Error: ', error);\n        };\n    };\n\n    const updateGame = useCallback(\n        (newGame) => {\n            let gameInfo = require('../../../resources/ItemNames.json');\n            if (newGame !== '' && newGame != null) {\n                gameInfo = require('../../../resources/' +\n                    newGame +\n                    '/ItemNames.json');\n            }\n\n            setContext({\n                route: {\n                    ...route,\n                    game: newGame,\n                    initialState: gameInfo.initialState,\n                    initialFolderEdit: gameInfo.initialFolderEdit,\n                },\n                gameInfo: gameInfo,\n            });\n        },\n        [route, setContext],\n    );\n\n    return (\n        <div className={`${styles.routeInfo}`}>\n            <h2 className={`${styles.header}`}>Update your Route</h2>\n\n            <label htmlFor=\"title\" className={`${styles.label}`}>\n                Route Name\n            </label>\n            <input\n                type=\"text\"\n                name=\"title\"\n                className={`${styles.textInput}`}\n                defaultValue={route.title}\n                onBlur={(e) =>\n                    setContext({ route: { ...route, title: e.target.value } })\n                }\n            />\n\n            <label htmlFor=\"path\" className={`${styles.label}`}>\n                Path\n            </label>\n            <input\n                type=\"text\"\n                name=\"path\"\n                className={`${styles.textInput}`}\n                defaultValue={route.path}\n                onBlur={(e) =>\n                    setContext({ route: { ...route, path: e.target.value } })\n                }\n            />\n\n            <label htmlFor=\"game\" className={`${styles.label}`}>\n                Game\n            </label>\n            <select\n                name=\"game\"\n                className={`${styles.select}`}\n                value={route.game}\n                onChange={(e) => updateGame(e.target.value)}>\n                <option value=\"\"> </option>\n                {games.map((game) => (\n                    <option key={game} value={game}>\n                        {routes[game].name}\n                    </option>\n                ))}\n            </select>\n\n            <label htmlFor=\"textImport\" className={`${styles.label}`}>\n                Import Text\n            </label>\n            <input\n                type=\"file\"\n                name={'textImport'}\n                className={`${styles.fileInput}`}\n                onChange={(e) => handleUpload(e.target.files[0], importText)}\n            />\n            <label htmlFor=\"jsonImport\" className={`${styles.label}`}>\n                Import JSON\n            </label>\n            <input\n                type=\"file\"\n                name={'jsonImport'}\n                className={`${styles.fileInput}`}\n                onChange={(e) => handleUpload(e.target.files[0], importJSON)}\n            />\n\n            <div className={`${styles.wrapper}`}>\n                <Button\n                    text=\"Load Last Edit\"\n                    size=\"medium\"\n                    className={`${styles.btn}`}\n                    onClick={props.loadLastRouteEdit}\n                />\n                <Button\n                    text=\"Save JSON File\"\n                    size=\"medium\"\n                    className={`${styles.btn}`}\n                    onClick={generateDownload}\n                />\n                <Button\n                    text=\"Preview\"\n                    size=\"medium\"\n                    className={`${styles.btn}`}\n                    onClick={() => setContext({ preview: !preview })}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default RouteInfo;\n","/** @format */\n\nimport { useState, useCallback, useMemo, Suspense } from 'react';\nimport styles from './styles/RouteForm.Module.css';\nimport Route from '../route/Route';\nimport SectionList from './SectionList';\nimport RouteInfo from './RouteInfo';\nimport useSuspenseResource from '../../common/functions/useSuspense';\nimport RouteContext from '../../common/RouteContext';\nimport GameContext from '../../common/GameContext';\n\nconst equal = require('deep-equal');\n\nfunction RouteForm(props) {\n    const path = props.match.params.path;\n\n    const notesResource = useSuspenseResource(async () => {\n        const response = await fetch(\n            `${process.env.PUBLIC_URL}/notes/${path}.json`,\n        );\n\n        return await response.json();\n    }, [path]);\n\n    return (\n        <Suspense fallback=\"Loading...\">\n            <RouteFormImpl {...props} notesResource={notesResource} />\n        </Suspense>\n    );\n}\n\nconst getInitialState = (path, game, route) => {\n    // If no game is specified, try setting the game based on the initial route object.\n    if (game == null) {\n        game = route.game;\n    }\n\n    let gameInfo = require('../../../resources/ItemNames.json');\n    if (game !== '' && game != null) {\n        gameInfo = require('../../../resources/' + game + '/ItemNames.json');\n    }\n\n    // If initial state is different, the state variables need to be updated in the route.\n    if (\n        route.game != null &&\n        !equal(route.initialState, gameInfo.initialState)\n    ) {\n        route.initialState = gameInfo.initialState;\n\n        // Update state variables in each section to add new keys.\n        for (const section of route.sections) {\n            if (section.state) {\n                for (let key of gameInfo.initialState.keys) {\n                    if (!section.state.keys.includes(key)) {\n                        section.state[key] = gameInfo.initialState[key];\n                    }\n                }\n\n                section.state.keys = gameInfo.initialState.keys;\n            }\n        }\n    }\n\n    return {\n        route: {\n            title: path != null ? route.title : '',\n            path: path,\n            game: path != null ? route.game : game,\n            version: path != null ? route.version : '1.0',\n            initialState: game != null ? gameInfo.initialState : {},\n            initialFolderEdit: game != null ? gameInfo.initialFolderEdit : {},\n            sections:\n                path != null\n                    ? route.sections\n                    : [\n                          {\n                              id: 0,\n                              text: [],\n                              items: [],\n                          },\n                      ],\n        },\n        gameInfo: gameInfo,\n        preview: false,\n        numSections: path != null ? Math.min(10, route.sections.length) : 1,\n    };\n};\n\nfunction RouteFormImpl(props) {\n    let initialPath = props.match.params.path;\n    let initialGame = props.match.params.gameId;\n    let initialRoute = {};\n    if (initialPath != null) {\n        initialRoute = props.notesResource.read();\n    }\n\n    const [state, setState] = useState(\n        getInitialState(initialPath, initialGame, initialRoute),\n    );\n    const gameContext = useMemo(() => {\n        return state.gameInfo;\n    }, [state.gameInfo]);\n\n    const setContext = useCallback(\n        (updates) => {\n            setState({ ...state, ...updates });\n        },\n        [state, setState],\n    );\n\n    const getContextValue = useCallback(\n        () => ({\n            ...state,\n            setContext,\n        }),\n        [state, setContext],\n    );\n\n    const setNewRoute = (newRoute) => {\n        newRoute.preview = false;\n        newRoute.numSections = Math.min(10, newRoute.sections.length);\n\n        // If initial state is different, the state variables need to be updated\n        if (!equal(newRoute.initialState, state.gameInfo.initialState)) {\n            newRoute.initialState = state.gameInfo.initialState;\n\n            // Update state variables in each section to add new keys.\n            for (const section of newRoute.sections) {\n                if (section.state) {\n                    for (let key of state.gameInfo.initialState.keys) {\n                        if (!section.state.keys.includes(key)) {\n                            section.state[key] =\n                                state.gameInfo.initialState[key];\n                        }\n                    }\n\n                    section.state.keys = state.gameInfo.initialState.keys;\n                }\n            }\n        }\n\n        setState({ ...state, route: newRoute });\n    };\n\n    const loadLastRouteEdit = (e) => {\n        e.preventDefault();\n\n        let newRoute = JSON.parse(localStorage.getItem('lastRouteEdit'));\n\n        if (newRoute != null) {\n            setNewRoute(newRoute);\n        } else {\n            alert(\n                'Error: No route found in local storage. Either there is nothing to load, or your route may have been too large. When your route gets large, try downloading the JSON file periodically to save your progress.',\n            );\n        }\n    };\n\n    const swapPreview = () => {\n        setState((prevState) => ({\n            ...state,\n            preview: !prevState.preview,\n        }));\n    };\n\n    if (state.preview) {\n        return (\n            <div>\n                <RouteContext.Provider value={getContextValue()}>\n                    <Route swapPreview={swapPreview} />\n                </RouteContext.Provider>\n            </div>\n        );\n    } else {\n        return (\n            <form className={`${styles.wrapper} ${styles.form}`}>\n                <RouteContext.Provider value={getContextValue()}>\n                    <GameContext.Provider value={gameContext}>\n                        <RouteInfo\n                            loadLastRouteEdit={loadLastRouteEdit}\n                            swapPreview={swapPreview}\n                        />\n\n                        <SectionList sections={state.route.sections} />\n                    </GameContext.Provider>\n                </RouteContext.Provider>\n            </form>\n        );\n    }\n}\n\nexport default RouteForm;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/NotesHome.Module.css';\nimport { Link } from 'react-router-dom';\nimport Button from '../common/Button';\n\nlet games = require('../../resources/gamesList.json');\nlet routes = require('../../notes/routes.json');\n\nclass NotesHome extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createRoute = this.createRoute.bind(this);\n    }\n\n    createRoute() {\n        this.props.history.push('/notes/createRoute');\n    }\n\n    render() {\n        return (\n            <div className=\"page\">\n                <div className={'card ' + styles.wrapper}>\n                    <h1>Games</h1>\n                    <div className={`${styles.wrapper}`}>\n                        {games.map((gameId) => (\n                            <div\n                                className=\"col-2 col-t-3 col-m-6\"\n                                key={'routesList' + gameId}>\n                                <Link\n                                    to={'/notes/game/' + gameId}\n                                    className={`${styles.link}`}>\n                                    <img\n                                        id={'gameArt-' + gameId}\n                                        className={`${styles.img}`}\n                                        src={'/gameArt/' + gameId + '.png'}\n                                        alt={gameId + '.png'}\n                                    />\n                                    <h4\n                                        id={'gameTitle-' + gameId}\n                                        className=\"gameLink\">\n                                        {routes[gameId].name}\n                                    </h4>\n                                </Link>\n                            </div>\n                        ))}\n                    </div>\n                    <Button\n                        id=\"create-route-button\"\n                        text=\"Create New Route\"\n                        size=\"medium\"\n                        onClick={this.createRoute}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NotesHome;\n","/** @format */\n\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Switch } from 'react-router-dom';\nimport { Route as BrowserRoute } from 'react-router-dom';\n\nimport RoutesList from './RoutesList';\nimport Route from './route/Route';\nimport RouteForm from './routeForm/RouteForm';\nimport NotesHome from './NotesHome';\n\nclass NotesTool extends React.Component {\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <BrowserRoute\n                        path={'/notes/game/:gameId/route/:routePath'}\n                        component={Route}\n                    />\n                    <BrowserRoute\n                        path={'/notes/game/:gameId'}\n                        component={RoutesList}\n                    />\n                    <BrowserRoute\n                        path={'/notes/editRoute/:path'}\n                        component={RouteForm}\n                    />\n                    <BrowserRoute\n                        path={'/notes/createRoute/:gameId'}\n                        component={RouteForm}\n                    />\n                    <BrowserRoute\n                        path={'/notes/createRoute'}\n                        component={RouteForm}\n                    />\n                    <BrowserRoute path={'/notes'} component={NotesHome} />\n                </Switch>\n            </HashRouter>\n        );\n    }\n}\n\nexport default NotesTool;\n","/** @format */\n\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Switch } from 'react-router-dom';\nimport { Route as BrowserRoute } from 'react-router-dom';\nimport NotesTool from './notes/NotesTool';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <BrowserRoute path=\"/notes\" component={NotesTool} />\n                </Switch>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/main.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}