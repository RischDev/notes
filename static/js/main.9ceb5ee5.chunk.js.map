{"version":3,"sources":["components/notes/routeForm/styles/RouteInfo.Module.css","components/notes/route/notes/styles/FolderEdit.Module.css","components/notes/route/styles/Menu.Module.css","components/notes/routeForm/Section/styles/SectionFolderEdit.Module.css","resources sync /^/.*/ItemNames/.json$","components/notes/routeForm/Section/styles/Section.Module.css","components/notes/styles/RoutesListItem.Module.css","components/common/styles/Icon.Module.css","components/notes/route/notes/styles/NoteSection.Module.css","components/notes/route/notes/styles/State.Module.css","components/notes/routeForm/Section/styles/SectionState.Module.css","components/notes/route/notes/styles/SmallItem.Module.css","components/notes/route/tracker/styles/Tracker.Module.css","components/notes/styles/RoutesList.Module.css","components/notes/route/notes/styles/SmallModifiers.Module.css","components/notes/route/tracker/styles/Modifiers.Module.css","components/notes/route/tracker/styles/Item.Module.css","components/notes/styles/NotesHome.Module.css","components/notes/route/notes/styles/Text.Module.css","components/notes/route/notes/styles/Notes.Module.css","components/notes/routeForm/Section/styles/ItemDropdown.Module.css","components/notes/routeForm/Section/styles/ModifierDropdown.Module.css","components/common/styles/Button.Module.css","components/notes/route/styles/Route.Module.css","components/notes/route/notes/styles/ItemsList.Module.css","components/notes/route/notes/styles/Image.Module.css","components/notes/route/styles/LargeImage.Module.css","components/notes/routeForm/styles/RouteForm.Module.css","components/notes/routeForm/Section/styles/SectionText.Module.css","components/notes/routeForm/Section/styles/SectionImage.Module.css","resources sync /^/.*/DefaultFoundItems/.json$","resources sync /^/.*/DefaultFoundModifiers/.json$","components/notes/route/notes/styles/themes/MMBN/MMBN-SmallItem.Module.css","components/notes/route/notes/styles/themes/MMSF/MMSF-SmallItem.Module.css","components/notes/route/notes/styles/themes/MMBN/MMBN-SmallModifiers.Module.css","components/notes/route/tracker/styles/themes/MMBN/MMBN-Modifiers.Module.css","components/notes/route/tracker/styles/themes/MMBN/MMBN-Item.Module.css","components/notes/route/tracker/styles/themes/MMSF/MMSF-Item.Module.css","components/notes/routeForm/Section/styles/SectionItem.Module.css","components/notes/routeForm/Section/styles/PreviewImage.Module.css","components/notes/routeForm/styles/SectionList.Module.css","reportWebVitals.js","components/common/Icon.js","components/common/functions/useSuspense.js","components/notes/RoutesListItem.js","components/common/Button.js","components/notes/RoutesList.js","components/common/functions/useMatchMedia.js","components/common/NotesContext.js","components/notes/route/Menu.js","components/notes/route/notes/Text.js","components/notes/route/notes/SmallModifiers.js","components/notes/route/notes/SmallItem.js","components/notes/route/notes/ItemsList.js","components/notes/route/notes/Image.js","components/notes/route/notes/State.js","components/common/functions/performFolderEditAction.js","components/common/functions/performFolderEditSort.js","components/common/functions/getPathsToSlot.js","components/common/functions/getFolderEditInputs.js","components/notes/route/notes/FolderEdit.js","components/notes/route/notes/NoteSection.js","components/notes/route/notes/Notes.js","components/notes/route/tracker/Modifiers.js","components/notes/route/tracker/Item.js","components/notes/route/tracker/Tracker.js","components/notes/route/LargeImage.js","components/common/RouteContext.js","components/notes/route/Route.js","components/common/GameContext.js","components/notes/routeForm/Section/ItemDropdown.js","components/notes/routeForm/Section/ModifierDropdown.js","components/notes/routeForm/Section/SectionText.js","components/notes/routeForm/Section/SectionItem.js","components/notes/routeForm/Section/PreviewImage.js","components/notes/routeForm/Section/SectionImage.js","components/notes/routeForm/Section/SectionState.js","components/common/functions/getNewFolder.js","components/notes/routeForm/Section/SectionFolderEdit.js","components/notes/routeForm/Section/Section.js","components/notes/routeForm/SectionList.js","components/notes/routeForm/RouteInfo.js","components/notes/routeForm/RouteForm.js","components/notes/NotesHome.js","components/notes/NotesTool.js","components/App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Icon","hoverClass","this","props","hover","styles","hiddenClass","hidden","floatClass","float","right","grayscaleClass","grayscale","src","className","icon","size","onClick","alt","altText","React","Component","useSuspenseResource","promiseCallback","deps","useMemo","promise","result","status","suspender","r","read","createSuspenseResource","RoutesListItemImpl","notes","notesResource","wrapper","to","gameId","path","link","title","category","author","version","RoutesListItem","a","fetch","process","response","json","fallback","Button","btn","type","text","routes","require","RoutesList","match","params","gameRoutes","history","push","state","gameName","name","createRoute","bind","gameArt","header","route","useMatchMedia","query","useState","window","matchMedia","matches","setMatches","useEffect","mediaQueryList","callback","addListener","removeListener","NotesContext","createContext","Menu","useContext","game","showNotes","showTracker","mode","foundModifiers","folderEditView","setContext","changeMode","useCallback","resetTracker","newFoundItems","JSON","parse","stringify","newFoundModifiers","foundItems","localStorage","setItem","updateNotesDisplay","updateTrackerDisplay","swapNotesAndTracker","modeText","previewButton","preview","swapPreview","notesText","menu","showNotesText","showTrackerText","col","label","value","select","onChange","target","Text","item","includes","modifier","found","children","Modifier","foundClass","updateFound","SmallModifiers","theme","themeMMBN","updateTracker","modifiers","length","SmallItem","themeMMSF","Items","typeClass","i","types","low","high","itemArt","ItemsList","itemsList","completedItems","items","some","j","item2","itemList","Image","image","imageContainer","State","stateContainer","key","stateField","shown","keyLabel","performFolderEditAction","folder","action","gameInfo","newFolder","item1","slot","modifier1","slot1","slot2","modifier2","regged","tagged","parseInt","tempItem","sortType","reverse","sort","nameJP","damageSort","elementOrder","element","counts","capacity","performFolderEditSort","getPathsToSlot","cursor","cursorPosition","goal","pathsToSlot","numInputs","Math","sign","itemsShown","abs","min","console","log","max","getNumInputs","inputs","count","actionInputs","split","input","getFolderEditInputs","folderEdit","actionIndex","sortCursor","Array","paths","bestInputs","Number","MAX_VALUE","bestPath","tempInputs","pathsToFirstItem","bestPath1","bestPath2","pathsToSecondItem","path2","sortTypes","splice","indexOf","inverseInputs","Action","FolderEdit","actionsList","tempFolder","prevFolder","folderEditContainer","toString","padStart","shouldUpdate","oldProps","newProps","areShallowEqual","NoteSection","memo","section","ref","noteRef","textContainer","itemContainer","fullscreenImage","previousSection","nextSection","Notes","sectionTop","scrollPosition","setState","sections","numSections","setNumSections","notesRef","createRef","sectionRefs","refsArray","renderNewSections","entries","observer","isIntersecting","IntersectionObserver","root","rootMargin","threshold","current","scrollIntoView","behavior","disconnect","observe","handleKeyPress","keyPress","preventDefault","fullSizeClass","fullSize","onScroll","scrollTop","newSectionTop","floor","getBoundingClientRect","height","onKeyDown","tabIndex","slice","Modifiers","Item","Tracker","tracker","list","LargeImage","fullscreenPreview","tagName","RouteContext","RouteImpl","routeContext","isMobile","initialTrackerDisplay","initialMode","initialFoundItems","getItem","initialFoundModifiers","getInitialState","updates","getContextValue","Provider","rightColumn","Route","routePath","GameContext","updateItem","ItemDropdown","onUpdateItem","buffer","ModifierDropdown","onModifierUpdate","updateModifier","updateText","SectionText","textarea","defaultValue","placeholder","onBlur","newText","moveTextUp","moveTextDown","deleteText","SectionItem","newItem","moveItemUp","moveItemDown","deleteItem","PreviewImage","img","updateImage","SectionImage","deleteIcon","deleteImage","file","reader","FileReader","readAsDataURL","onload","onerror","error","getBase64","files","SectionState","htmlFor","sectionId","textInput","newState","updateState","onStateValueChange","checkbox","checked","onStateShownChange","deleteState","addState","getNewFolder","ItemOption","itemDropdown","onUpdate","spacer","updateAction","actionTypes","updateItem1","deleteAction","updateItem2","ActionsList","SectionFolderEdit","newFolderEdit","updateFolderEdit","itemParts","deleteFolderEdit","addFolderEdit","Section","newSection","setSection","addText","chosenText","aboveText","belowText","addItem","chosenItem","aboveItem","belowItem","getLastState","getLastFolderEdit","sectionHeader","moveSectionUp","moveSectionDown","deleteSection","itemsContainer","addSection","SectionList","displayedSections","setDisplayedSections","newSections","chosenSection","aboveSection","belowSection","initialState","initialFolderEdit","sectionList","dataLength","next","hasMore","loader","scrollableTarget","RouteInfo","games","generateDownload","document","createElement","href","Buffer","from","download","click","importText","lines","replace","line","textId","importJSON","handleUpload","readAsText","updateGame","newGame","routeInfo","fileInput","loadLastRouteEdit","equal","RouteFormImpl","initialPath","initialGame","initialRoute","gameContext","prevState","form","newRoute","setNewRoute","alert","RouteForm","NotesHome","NotesTool","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9ceb5ee5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"routeInfo\":\"F2mb1ryN5dL6eMNbLKt4Uw==\",\"header\":\"OSsHajB4SDr8TjqsplaIWQ==\",\"label\":\"xcW5POQhuEBlcFt6PKVSVQ==\",\"textInput\":\"w7pkMgYuQLl+sWgDaVBgqw==\",\"select\":\"xKOVlmNnYHE9ixSdJrX4BA==\",\"fileInput\":\"Z-FoL14O644+2LkpM9C1+g==\",\"wrapper\":\"wo+buBWrOZk1PMR18OMJIw==\",\"spacer\":\"RM8C5ZOv6S+rkWqq-XdD-g==\",\"btn\":\"XBY927kjJMdn0IhyvOlsnA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"folderEditContainer\":\"LSKpzbXnrrbZCykMWtdOQw==\",\"wrapper\":\"_1wFwvcusmxAsvYz2imN2qA==\",\"action\":\"S7LItWUm7RYsqARnANwpog==\",\"label\":\"fpt02CqbUlqRuQwZxvATdQ==\",\"folderLabel\":\"LaQszEbLva3ru9GAYQybRQ==\",\"regged\":\"y1-bq5+lun3VaILExSYQPA==\",\"tagged\":\"XGP6zEszAA72Lp9sSpyZWg==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"xXHLUT6W8RJi5emrYTdXtA==\",\"col\":\"CnRoll7TlszRXat43PWXAg==\",\"btn\":\"H4piT5m5xxAeJgd6q22P8Q==\",\"label\":\"_7jKgETxlxoLvDuTdvBkMzQ==\",\"select\":\"KG0H+Fq-MHEl11KN58EpdA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_8hQzG5tyWMAIcPPZpZS3Sg==\",\"checkbox\":\"IByYpCIlkO1FtDVeyDpVqw==\",\"select\":\"-ewhwH7ea2AMIGe0m+JSDg==\",\"itemDropdown\":\"PTwnFTQB0vkcTKyJhu22ew==\",\"spacer\":\"ZuIZb7irA2Nq0vApdF0www==\"};","var map = {\n\t\"./MMBN1/ItemNames.json\": 149,\n\t\"./MMBN2/ItemNames.json\": 150,\n\t\"./MMBN3/ItemNames.json\": 151,\n\t\"./MMBN4/ItemNames.json\": 152,\n\t\"./MMBN5/ItemNames.json\": 153,\n\t\"./MMBN6/ItemNames.json\": 154,\n\t\"./MMSF1/ItemNames.json\": 155,\n\t\"./MMSF2/ItemNames.json\": 156,\n\t\"./MMSF3/ItemNames.json\": 157,\n\t\"./OSS/ItemNames.json\": 158\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionHeader\":\"Fn2+ipiPE4fK1vlv98yyVw==\",\"wrapper\":\"YDnMnzRQT13RQ0tw3MJFvg==\",\"section\":\"PsIzDIbCTG4wrUTM6er1xg==\",\"header\":\"tmlngklOZIir4i+lC6IW4A==\",\"label\":\"A9r+GjnqNKWHmScZwxRXNA==\",\"textContainer\":\"Ybo3pMftltkyH7S+VSXuHg==\",\"itemsContainer\":\"vEEVgSo6a0KWOf99T9aR2Q==\",\"imageContainer\":\"SDoEA1A3zyDA51P6mgVkdg==\",\"stateContainer\":\"vFrdg23acVv1XF6MnymUTA==\",\"folderEditContainer\":\"+DlBDu8VMDlh0Pt6Xh+8AQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NEpq3jOU-cfHWdS2rh8+ag==\",\"link\":\"_2pdIMk0Ir3pXmx1Xr+fg1Q==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"_8Y9KwDED3pL1sj0GpWYvjg==\",\"small\":\"nNyUBQj2J9jPfUO5JiOGeQ==\",\"large\":\"_1Z-jj10VJWxPwBlAjAH7BA==\",\"right\":\"GbThlTPUkvuaDtUf6IxGvA==\",\"hover\":\"J64ouaAWQMauqP7LsL1fwA==\",\"hidden\":\"A89rVKlFqVDJwndCGK+8VA==\",\"grayscale\":\"ysKiPku3Q-kIx06ZWt5Yng==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"_8ZlAGYvlclwi5mH0gPdsYg==\",\"wrapper\":\"WMEveEI04+Io6z14prER4g==\",\"textContainer\":\"O4MVbUJ03qoYxtiQnBxIpw==\",\"itemContainer\":\"Q0+gUIFwflsLfxa1Bc70qQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stateContainer\":\"Te-IS++X-vMrDVGbhE0MyA==\",\"wrapper\":\"gE0QzolHy5XVIRxed9pGbw==\",\"stateField\":\"_6qvaBjDJXwHBvgA0BKQ2Pg==\",\"label\":\"DR3GIinvbBZpOQNzUsxBcg==\",\"keyLabel\":\"p-J7E1+jPLTZvyu2LNCOkA==\",\"hidden\":\"_8PLwckjtYr4f9wB86bFxpA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"y5B2wc+skuHhhzAjukvruA==\",\"label\":\"kUnP3Ar0a1m+HbV+DplkEQ==\",\"textInput\":\"AVRkZ5gpk+jBv8JvzpbMpQ==\",\"checkbox\":\"M3mU1IdC5iytD5jD1UqDqw==\",\"stateField\":\"c-73e5C9+ol9z0dIxCFcYg==\",\"inputs\":\"H3W2vtxDGkly6EGYGDnDCg==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_7rtKJf8nKYxuwaOyE0Vaag==\",\"item\":\"w5hzSR00kbFhM7sGH1Bjlg==\",\"title\":\"N5KJVDyx+YbeRXJAZZiBEw==\",\"itemArt\":\"caD+kBrLmVJ1g9Dq-b2D0A==\",\"found\":\"_1EpZ2NE+IpuAPbBkopLddQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tracker\":\"YAl33CoVALZcQjfw4s0pIA==\",\"section\":\"Jl+N7ZghMEVXGVE6jjQaFw==\",\"fullSize\":\"nYQVwAOMako6LxA8wYwj-w==\",\"header\":\"xd7zJA8T9G5XPluwjY+RcA==\",\"list\":\"IOPBuqwXaW3XnArW51IxnA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"vhNR8VmYBTMqfhbRKh8Wjw==\",\"header\":\"gMPqKffIBVULdBK7fHC4uw==\",\"gameArt\":\"hsKjXwsJVmOY9sVfN15huA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"je3fiDxkH-wARm48J2g3nw==\",\"found\":\"UnIBJajqFY0gKPrX28GK8A==\",\"modifier\":\"FE1MkvafZKC5iMxRGtllxA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"_1gzKLAp0OdCpb1c7oxGISg==\",\"found\":\"_9HGbN4+3ght6VdlvEA8CBw==\",\"modifier\":\"N7fqAT6nZTB8Db2fwwoXxA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"po8ytc6ZPKeFsPaq1B6DPg==\",\"title\":\"BfFYBEI-pD5vMEjoL9nqjA==\",\"itemArt\":\"xTmqrmM5kyO7WQatmtuPXg==\",\"found\":\"AnjhVKivgq5UNUJofLxIbg==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Lm57YgWaWh85Vmy-lhtxUQ==\",\"link\":\"V2uGt6aLj6bidNf8cs5XPw==\",\"img\":\"+tQpgnzty7e1n7MQb7JeNA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"PXF+fVECGiOxKtE1FilFfA==\",\"found\":\"V8zrPJ7YBmtPDtkK9lMiRQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"D7t7QHVyMrFrL9nnvIcSTQ==\",\"fullSize\":\"Z2QuORZCu29IVOoBva0gSQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"yinFPwZe6Roe565P19C88Q==\",\"buffer\":\"KFX5eQG4tJAt64AIBBqaCw==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"nYw8fGtHVp94BjKFPlZrXg==\",\"buffer\":\"_7JzK3Xdoz+3RKDCc3ja7NQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"cgdLDN9QZos3+swRGSNDuA==\",\"small\":\"ZS1Q6AvMYpcmsF-pfmjPkQ==\",\"medium\":\"M7+6K4VyQx7-9DYoH+G8mA==\",\"large\":\"CsJhrkdszb0AmJFugX0jiA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UTZxbvaTMm+lWmnsdCRffg==\",\"rightColumn\":\"RSFxkblLQ1MYiiX1dqWMAQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"iZQuvJdnmL06OdMKWplBig==\",\"itemList\":\"tO3hUDLBbc1k3B64JAvV7Q==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"zdu+uouwgVTTKWgkKdw8Yg==\",\"image\":\"q3o3g1+lH3R7tYTrWIWA1A==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreenPreview\":\"Rmss47snPFg2uzJ7of2Tzg==\",\"image\":\"nkeiTFBqr9xIqEREKalF5w==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"m8kJZp2I0TrXIiheUxsEQw==\",\"form\":\"qaPmaQNxVM4TQZJIPUjhYw==\",\"textInput\":\"-cW6y7NjHV8EmrwnOV7ACA==\",\"textarea\":\"v6S6qBWjlCe5IXPhWL-P5Q==\",\"select\":\"UIH57BYddBqpCyaSSjdJEw==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"cxKxYrUQ1H2mP5sHg7A+sA==\",\"textarea\":\"vGeQ16DUwY7WcXHyw5IFPA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"-SV1A7dsbnXtaIvbNkzKag==\",\"input\":\"dYwE4RPc0knRLcCI6kV5WQ==\"};","var map = {\n\t\"./MMBN1/DefaultFoundItems.json\": 130,\n\t\"./MMBN2/DefaultFoundItems.json\": 131,\n\t\"./MMBN3/DefaultFoundItems.json\": 132,\n\t\"./MMBN4/DefaultFoundItems.json\": 133,\n\t\"./MMBN5/DefaultFoundItems.json\": 134,\n\t\"./MMBN6/DefaultFoundItems.json\": 135,\n\t\"./MMSF1/DefaultFoundItems.json\": 136,\n\t\"./MMSF2/DefaultFoundItems.json\": 137,\n\t\"./MMSF3/DefaultFoundItems.json\": 138,\n\t\"./OSS/DefaultFoundItems.json\": 139\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 77;","var map = {\n\t\"./MMBN1/DefaultFoundModifiers.json\": 140,\n\t\"./MMBN2/DefaultFoundModifiers.json\": 141,\n\t\"./MMBN3/DefaultFoundModifiers.json\": 142,\n\t\"./MMBN4/DefaultFoundModifiers.json\": 143,\n\t\"./MMBN5/DefaultFoundModifiers.json\": 144,\n\t\"./MMBN6/DefaultFoundModifiers.json\": 145,\n\t\"./OSS/DefaultFoundModifiers.json\": 146\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"lACZJy5f8xdSrLnuXI+OQA==\",\"title\":\"Gu7wy+yntvpYYWeSwuGh+Q==\",\"itemArt\":\"DqemJKnhFEsfhAETKFImxA==\",\"Battlechips\":\"XWk5Mm09vNAfeQQ-2pcgKg==\",\"Standard\":\"dIQqW1nA9dKf9vjobQ3Zig==\",\"Mega\":\"_27dN1wr6N-E8HGtYzu3i7g==\",\"Giga\":\"Ykq8OpH1iVEGZr274xMARA==\",\"PAs\":\"WAakUYlihRJYkOAEy6o0PQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"OkzWEE1m09jk2IPAJqnVEA==\",\"title\":\"VAwPrPgTunVG2QPkpckLaw==\",\"itemArt\":\"_0LjY-2JcgNwWCRTx9Z1iZg==\",\"Standard\":\"krXoP9KIdpx2NM8l-usxig==\",\"Mega\":\"GIcFbXmm-wOR2DicVeovZQ==\",\"Giga\":\"Sj71iWsMzdTAiBVJw2bH-w==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"_6YBe-HQ0riMJfyQ596Yq4g==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"NL9AZxuguN5EP+6hVq3ykw==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"zFUISMCEELuJHhYavzIDEw==\",\"itemArt\":\"AmqleUu8ZQJ4VPa-Uos64Q==\",\"Battlechips\":\"gdqoAhvl70hYsiQBSmhvxA==\",\"Standard\":\"_8UpDBv8ZfaSCUAcmQIdaiA==\",\"Mega\":\"p-3m0S+cgONKd3jMG9mrkA==\",\"Giga\":\"lpMquCuG9xqOGOStm2-Rvg==\",\"PAs\":\"GK+CHYSweP24aiaUW9mvOw==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"YE--Us1jjJdvW+yCUmkXBQ==\",\"Standard\":\"N2t1kZZj+UkUKbEOmhCPOA==\",\"Mega\":\"JgZvHJ7tKn7PktI293+wKA==\",\"Giga\":\"Kwgv9Hn6e4OkO3gFW7qaiA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DlTzPK-aYUXhoNkaKs0BwA==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"wz7K0-J08adrSgw2tW4XJQ==\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionList\":\"HKmqupXFGhpXSqoewiBozw==\"};","/** @format */\n\nconst reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/Icon.Module.css';\n\nclass Icon extends React.Component {\n    render() {\n        let hoverClass = this.props.hover ? styles.hover : '';\n        let hiddenClass = this.props.hidden ? styles.hidden : '';\n        let floatClass = this.props.float === 'right' ? styles.right : '';\n        let grayscaleClass = this.props.grayscale ? styles.grayscale : '';\n\n        return (\n            <img\n                src={this.props.src}\n                id={this.props.id}\n                className={`${styles.icon} ${\n                    styles[this.props.size]\n                } ${hoverClass} ${hiddenClass} ${floatClass} ${grayscaleClass}`}\n                onClick={this.props.onClick}\n                alt={this.props.altText}\n            />\n        );\n    }\n}\n\nexport default Icon;\n","/** @format */\n\nimport { useMemo } from 'react';\n\n// Converts a promise into something that works with React Suspense.\nfunction createSuspenseResource(promise) {\n    let status = 'pending';\n    let result;\n    let suspender = promise.then(\n        (r) => {\n            status = 'success';\n            result = r;\n        },\n        (e) => {\n            status = 'error';\n            result = e;\n        },\n    );\n    return {\n        read() {\n            if (status === 'pending') {\n                throw suspender;\n            } else if (status === 'error') {\n                throw result;\n            } else if (status === 'success') {\n                return result;\n            }\n        },\n    };\n}\n\nexport default function useSuspenseResource(promiseCallback, deps) {\n    return useMemo(\n        () => createSuspenseResource(promiseCallback()),\n        // Dynamic deps array because it's passed in from the caller.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        deps,\n    );\n}\n","/** @format */\n\nimport React, { Suspense } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './styles/RoutesListItem.Module.css';\nimport Icon from '../common/Icon';\nimport useSuspenseResource from '../common/functions/useSuspense';\n\nfunction RoutesListItem(props) {\n    const path = props.path;\n    const notesResource = useSuspenseResource(async () => {\n        const response = await fetch(\n            `${process.env.PUBLIC_URL}/notes/${path}.json`,\n        );\n\n        return await response.json();\n    }, [path]);\n\n    return (\n        <Suspense fallback=\"Loading...\">\n            <RoutesListItemImpl\n                {...props}\n                notesResource={notesResource}\n                gameId={props.gameId}\n                path={props.path}\n            />\n        </Suspense>\n    );\n}\n\nfunction RoutesListItemImpl(props) {\n    const notes = props.notesResource.read();\n\n    return (\n        <div className={styles.wrapper}>\n            <Link\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\n                className={`${styles.link} col-5 col-m-6`}>\n                <div>{notes.title}</div>\n            </Link>\n            <Link\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\n                className={`${styles.link} col-2 hidden-mobile`}>\n                <div>{notes.category}</div>\n            </Link>\n            <Link\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\n                className={`${styles.link} col-2 col-m-4`}>\n                <div>{notes.author}</div>\n            </Link>\n            <Link\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\n                className={`${styles.link} col-2 hidden-mobile`}>\n                <div>{notes.version}</div>\n            </Link>\n            <Link\n                to={'/notes/editRoute/' + props.path}\n                className={`${styles.link} col-1 col-m-2`}>\n                <Icon\n                    src=\"/icons/edit.png\"\n                    size=\"small\"\n                    altText=\"Edit\"\n                    hover={true}\n                    hidden={false}\n                />\n            </Link>\n        </div>\n    );\n}\n\nexport default RoutesListItem;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/Button.Module.css';\n\nclass Button extends React.Component {\n    render() {\n        return (\n            <button\n                id={this.props.id}\n                className={`${styles.btn} ${styles[this.props.size]} ${\n                    this.props.className\n                }`}\n                type=\"button\"\n                onClick={this.props.onClick}>\n                {this.props.text}\n            </button>\n        );\n    }\n}\n\nexport default Button;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/RoutesList.Module.css';\nimport RoutesListItem from './RoutesListItem';\nimport Button from '../common/Button';\n\nlet routes = require('../../notes/routes.json');\n\nclass RoutesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let gameId = props.match.params.gameId;\n        let gameRoutes = routes[gameId];\n\n        if (gameRoutes == null) {\n            this.props.history.push('/notes');\n        }\n\n        this.state = {\n            gameId: props.match.params.gameId,\n            gameName: gameRoutes.name,\n            routes: gameRoutes.routes,\n        };\n\n        this.createRoute = this.createRoute.bind(this);\n    }\n\n    createRoute() {\n        this.props.history.push('/notes/createRoute/' + this.state.gameId);\n    }\n\n    render() {\n        return (\n            <div className=\"page\">\n                <div className={styles.wrapper}>\n                    <div className={'col-3 col-m-12 card'}>\n                        <h3>{this.state.gameName}</h3>\n                        <img\n                            className={styles.gameArt}\n                            src={'/gameArt/' + this.state.gameId + '.png'}\n                            alt={this.state.gameId + '.png'}\n                        />\n                    </div>\n                    <div className={'col-8 col-m-12 card'}>\n                        <h1>Routes</h1>\n                        <div className={styles.wrapper + ' ' + styles.header}>\n                            <div className=\"col-5 col-m-6\">Route Name</div>\n                            <div className=\"col-2 hidden-mobile\">Category</div>\n                            <div className=\"col-2 col-m-4\">Author</div>\n                            <div className=\"col-2 hidden-mobile\">Version</div>\n                            <div className=\"col-1 col-m-2\">Edit</div>\n                        </div>\n                        {this.state.routes.map((route) => (\n                            <RoutesListItem\n                                gameId={this.state.gameId}\n                                key={route.path}\n                                path={route.path}\n                            />\n                        ))}\n                        <Button\n                            text=\"Create New Route\"\n                            size=\"medium\"\n                            onClick={this.createRoute}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RoutesList;\n","/** @format */\n\nimport { useState, useEffect } from 'react';\n\n/**\n * Example:\n *\n * const isSmallScreen = useMatchMedia('(max-width: 600px)');\n */\nexport default function useMatchMedia(query) {\n    const [matches, setMatches] = useState(\n        () => window.matchMedia(query).matches,\n    );\n\n    useEffect(() => {\n        const mediaQueryList = window.matchMedia(query);\n        const callback = (e) => setMatches(e.matches);\n\n        mediaQueryList.addListener(callback);\n        return function cleanup() {\n            mediaQueryList.removeListener(callback);\n        };\n    }, [query, setMatches]);\n\n    return matches;\n}\n","/** @format */\n\nimport { createContext } from 'react';\n\nconst NotesContext = createContext({});\n\nexport default NotesContext;\n","/** @format */\n\nimport { useContext, useCallback } from 'react';\nimport styles from './styles/Menu.Module.css';\nimport Button from '../../common/Button';\nimport useMatchMedia from '../../common/functions/useMatchMedia';\nimport NotesContext from '../../common/NotesContext';\n\nfunction Menu(props) {\n    const {\n        notes: { game },\n        showNotes,\n        showTracker,\n        mode,\n        foundModifiers,\n        folderEditView,\n        setContext,\n    } = useContext(NotesContext);\n\n    const changeMode = useCallback(() => {\n        setContext({ mode: mode === 'list' ? 'presenter' : 'list' });\n    }, [mode, setContext]);\n\n    const resetTracker = useCallback(() => {\n        let newFoundItems = JSON.parse(\n            JSON.stringify(\n                require('../../../resources/' +\n                    game +\n                    '/DefaultFoundItems.json'),\n            ),\n        );\n        let newFoundModifiers = foundModifiers;\n        if (newFoundModifiers != null) {\n            newFoundModifiers = JSON.parse(\n                JSON.stringify(\n                    require('../../../resources/' +\n                        game +\n                        '/DefaultFoundModifiers.json'),\n                ),\n            );\n        }\n\n        setContext({\n            foundItems: newFoundItems,\n            foundModifiers: newFoundModifiers,\n        });\n\n        localStorage.setItem(\n            'foundItems-' + game,\n            JSON.stringify(newFoundItems),\n        );\n        localStorage.setItem(\n            'foundModifiers-' + game,\n            JSON.stringify(newFoundModifiers),\n        );\n    }, [game, foundModifiers, setContext]);\n\n    const updateNotesDisplay = useCallback(() => {\n        setContext({ showNotes: !showNotes });\n    }, [showNotes, setContext]);\n\n    const updateTrackerDisplay = useCallback(() => {\n        setContext({ showTracker: !showTracker });\n    }, [showTracker, setContext]);\n\n    const swapNotesAndTracker = useCallback(() => {\n        setContext({ showNotes: !showNotes, showTracker: !showTracker });\n    }, [showNotes, showTracker, setContext]);\n\n    let modeText = mode === 'presenter' ? 'List Mode' : 'Presenter Mode';\n\n    let previewButton = '';\n    if (props.preview) {\n        previewButton = (\n            <Button\n                text=\"Edit Route\"\n                size=\"medium\"\n                className={`${styles.btn}`}\n                onClick={props.swapPreview}\n            />\n        );\n    }\n\n    // If on mobile, use a different button layout where users can only swap notes and tracker.\n    if (useMatchMedia('(max-width: 600px)')) {\n        let notesText = props.showNotes ? 'Show Tracker' : 'Show Notes';\n        return (\n            <div className={`card ${styles.menu}`}>\n                <Button\n                    text=\"Reset Tracker\"\n                    size=\"medium\"\n                    onClick={resetTracker}\n                />\n                <Button\n                    text={notesText}\n                    size=\"medium\"\n                    onClick={swapNotesAndTracker}\n                />\n                <Button text={modeText} size=\"large\" onClick={changeMode} />\n                {previewButton}\n            </div>\n        );\n    } else {\n        let showNotesText = showNotes ? 'Hide Notes' : 'Show Notes';\n        let showTrackerText = showTracker ? 'Hide Tracker' : 'Show Tracker';\n\n        return (\n            <div className={`card ${styles.menu}`}>\n                <div className={`${styles.col}`}>\n                    <Button\n                        text={showNotesText}\n                        size=\"medium\"\n                        className={`${styles.btn}`}\n                        onClick={updateNotesDisplay}\n                    />\n                    <Button\n                        text={showTrackerText}\n                        size=\"medium\"\n                        className={`${styles.btn}`}\n                        onClick={updateTrackerDisplay}\n                    />\n                    <Button\n                        text=\"Reset Tracker\"\n                        size=\"medium\"\n                        className={`${styles.btn}`}\n                        onClick={resetTracker}\n                    />\n                    <Button\n                        text={modeText}\n                        size=\"medium\"\n                        className={`${styles.btn}`}\n                        onClick={changeMode}\n                    />\n                </div>\n                <div className={`${styles.col}`}>{previewButton}</div>\n                <div className={`${styles.col}`}>\n                    <div className={`${styles.label}`}>Folder Edit View</div>\n                    <div>\n                        <select\n                            name=\"folderEditDisplay\"\n                            value={folderEditView}\n                            className={`${styles.select}`}\n                            onChange={(e) =>\n                                setContext({ folderEditView: e.target.value })\n                            }>\n                            <option value=\"Actions\">Actions</option>\n                            <option value=\"Differences\">Differences</option>\n                            <option value=\"Inputs\">Inputs</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;\n","/** @format */\n\nimport { useContext } from 'react';\nimport NotesContext from '../../../common/NotesContext';\nimport ReactMarkdown from 'react-markdown';\nimport styles from './styles/Text.Module.css';\n\nfunction Text(props) {\n    const { foundItems, foundModifiers } = useContext(NotesContext);\n\n    if (props.text.item != null && foundItems.includes(props.text.item)) {\n        if (\n            props.text.modifier == null ||\n            foundModifiers[props.text.item].includes(props.text.modifier)\n        ) {\n            return (\n                <div className={`${styles.text} ${styles.found}`}>\n                    <ReactMarkdown children={props.text.text} />\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div className={`${styles.text}`}>\n            <ReactMarkdown children={props.text.text} />\n        </div>\n    );\n}\n\nexport default Text;\n","/** @format */\n\nimport { useContext } from 'react';\nimport styles from './styles/SmallModifiers.Module.css';\nimport themeMMBN from './styles/themes/MMBN/MMBN-SmallModifiers.Module.css';\nimport NotesContext from '../../../common/NotesContext';\n\nfunction Modifier(props) {\n    const {\n        notes: { game },\n        foundModifiers,\n    } = useContext(NotesContext);\n\n    const foundClass = foundModifiers[props.id].includes(props.modifier)\n        ? styles.found\n        : '';\n    return (\n        <div\n            id={'modifier-' + props.id + '-' + props.modifier}\n            className={`${styles.modifier} ${styles[game]} ${foundClass}`}\n            onClick={() => props.updateFound(props.modifier)}>\n            {props.modifier}\n        </div>\n    );\n}\n\nfunction SmallModifiers(props) {\n    const {\n        notes: { game },\n    } = useContext(NotesContext);\n\n    let theme = {};\n    if (game.includes('MMBN')) {\n        theme = themeMMBN;\n    }\n\n    const updateFound = (modifier) => {\n        props.updateTracker(props.id, modifier);\n    };\n\n    if (props.modifiers != null && props.modifiers.length > 0) {\n        return (\n            <div className={`${styles.modifiers} ${theme.modifiers}`}>\n                {props.modifiers.map((modifier) => (\n                    <Modifier\n                        key={'small-modifier-' + modifier}\n                        id={props.id}\n                        modifier={modifier}\n                        updateFound={updateFound}\n                    />\n                ))}\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default SmallModifiers;\n","/** @format */\n\nimport { useContext } from 'react';\nimport styles from './styles/SmallItem.Module.css';\nimport themeMMBN from './styles/themes/MMBN/MMBN-SmallItem.Module.css';\nimport themeMMSF from './styles/themes/MMSF/MMSF-SmallItem.Module.css';\nimport SmallModifiers from './SmallModifiers';\nimport NotesContext from '../../../common/NotesContext';\n\nfunction SmallItem(props) {\n    const {\n        notes: { game },\n    } = useContext(NotesContext);\n\n    let theme = {};\n    if (game.includes('MMBN')) {\n        theme = themeMMBN;\n    } else if (game.includes('MMSF')) {\n        theme = themeMMSF;\n    }\n\n    let Items = require('../../../../resources/' + game + '/ItemNames.json');\n\n    const updateFound = () => {\n        props.updateTracker(props.id, null);\n    };\n\n    const foundClass = props.found ? styles.found : '';\n    let typeClass = '';\n    for (let i = 0; i < Items.types.length; i++) {\n        let type = Items.types[i];\n        if (props.id >= type.low && props.id <= type.high) {\n            typeClass = type.id;\n            break;\n        }\n    }\n    return (\n        <div className={`${styles.wrapper}`}>\n            <div\n                id={props.id}\n                className={`${styles.item} ${theme.item} ${theme[typeClass]} ${foundClass}`}\n                onClick={updateFound}>\n                <div className={`${styles.title} ${theme.title}`}>\n                    {Items.Items[props.id].name}\n                </div>\n                <img\n                    className={`${styles.itemArt} ${theme.itemArt}`}\n                    src={'/items/' + game + '/' + props.id + '.png'}\n                    alt={Items.Items[props.id] + ' art'}\n                />\n            </div>\n            <SmallModifiers\n                id={props.id}\n                modifiers={props.modifiers}\n                updateTracker={props.updateTracker}\n            />\n        </div>\n    );\n}\n\nexport default SmallItem;\n","/** @format */\n\nimport { useContext } from 'react';\nimport SmallItem from './SmallItem';\nimport NotesContext from '../../../common/NotesContext';\nimport styles from './styles/ItemsList.Module.css';\n\nfunction ItemsList(props) {\n    const {\n        notes: { game },\n        foundItems,\n        foundModifiers,\n    } = useContext(NotesContext);\n\n    let Items = require('../../../../resources/' + game + '/ItemNames.json');\n\n    let itemsList;\n\n    if (Items.modifiers) {\n        let completedItems = [];\n\n        for (let i = 0; i < props.items.length; i++) {\n            let item = props.items[i];\n\n            if (!completedItems.some((o) => o.value === item.value)) {\n                let modifiers = [];\n\n                for (let j = 0; j < props.items.length; j++) {\n                    let item2 = props.items[j];\n\n                    if (\n                        item2.value === item.value &&\n                        item2.modifier &&\n                        item2.modifier !== '' &&\n                        item2.modifier != null\n                    ) {\n                        modifiers.push(item2.modifier);\n                    }\n                }\n\n                completedItems.push({\n                    value: item.value,\n                    modifiers: modifiers,\n                });\n            }\n        }\n\n        itemsList = completedItems.map((item) => (\n            <SmallItem\n                key={'small-item-' + item.value}\n                id={item.value}\n                updateTracker={props.updateTracker}\n                modifiers={item.modifiers}\n                found={foundItems.includes(item.value)}\n                foundModifiers={foundModifiers}\n            />\n        ));\n    } else {\n        itemsList = props.items.map((item) => (\n            <SmallItem\n                key={'small-item-' + item.value}\n                id={item.value}\n                updateTracker={props.updateTracker}\n                found={foundItems.includes(item.value)}\n                foundModifiers={foundModifiers}\n            />\n        ));\n    }\n\n    if (props.items.length > 0) {\n        return (\n            <div>\n                <div className={styles.label}>Potential {Items.name + 's'}</div>\n                <div className={styles.itemList}>{itemsList}</div>\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default ItemsList;\n","/** @format */\n\nimport styles from './styles/Image.Module.css';\n\nfunction Image(props) {\n    if (props.image != null) {\n        return (\n            <div className={`${styles.imageContainer}`}>\n                <img\n                    className={styles.image}\n                    src={props.image}\n                    alt=\"\"\n                    onClick={() => props.onClick(props.image)}\n                />\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default Image;\n","/** @format */\n\nimport styles from './styles/State.Module.css';\n\nfunction State(props) {\n    if (props.state != null) {\n        return (\n            <div className={`${styles.stateContainer}`}>\n                <div className={`${styles.label}`}>State</div>\n                <div className={styles.wrapper}>\n                    {props.state.keys.map((key) => (\n                        <div\n                            className={`${styles.stateField} ${\n                                !props.state[key].shown ? styles.hidden : ''\n                            }`}\n                            key={key}>\n                            <div className={`${styles.keyLabel}`}>{key}</div>\n                            <div className=\"col-2\">\n                                {props.state[key].value}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default State;\n","/** @format */\n\nimport performFolderEditSort from './performFolderEditSort';\n\nexport default function performFolderEditAction(folder, action, gameInfo) {\n    const newFolder = JSON.parse(JSON.stringify(folder));\n\n    if (action.item1 !== -1) {\n        if (action.action === 'Remove') {\n            newFolder[action.item1].item = -1;\n            newFolder[action.item1].modifier = null;\n        } else if (action.action === 'Add') {\n            for (const item of folder) {\n                if (item.item === -1) {\n                    newFolder[item.slot].item = action.item1;\n                    newFolder[item.slot].modifier = action.modifier1;\n                    break;\n                }\n            }\n        } else if (action.action === 'Swap') {\n            if (action.item2 !== -1) {\n                const slot1 = newFolder[action.item1];\n                const slot2 = newFolder[action.item2];\n\n                // Swap the slots.\n                slot1.slot = action.item2;\n                slot2.slot = action.item1;\n\n                //Swap positions in array\n                newFolder[action.item1] = slot2;\n                newFolder[action.item2] = slot1;\n            }\n        } else if (action.action === 'Replace') {\n            if (action.item2 !== -1) {\n                newFolder[action.item1].item = action.item2;\n                newFolder[action.item1].modifier = action.modifier2;\n            }\n        } else if (action.action === 'Reg' || action.action === 'Default') {\n            // Unreg everything else\n            for (let i = 0; i < newFolder.length; i++) {\n                newFolder[i].regged = false;\n            }\n            newFolder[action.item1].regged = true;\n        } else if (action.action === 'Tag') {\n            // Tag only does something if 2 items are selected.\n            if (action.item1 != -1 && action.item2 != -1) {\n                // Untag everything else\n                for (let i = 0; i < newFolder.length; i++) {\n                    newFolder[i].tagged = false;\n                }\n                // Mark items as tagged first. Then, move items around to put them next to each other.\n                newFolder[action.item1].tagged = true;\n                newFolder[action.item2].tagged = true;\n\n                // Whichever item is picked first goes on top. However, if item1 is above item2 in the folder, item1 will not\n                // move. But if item 2 is above item1, item1 moves up one slot because of item2 moving below.\n                if (parseInt(action.item1) < parseInt(action.item2)) {\n                    for (\n                        let i = parseInt(action.item2);\n                        i > parseInt(action.item1) + 1;\n                        i--\n                    ) {\n                        let tempItem = newFolder[i];\n                        newFolder[i] = newFolder[i - 1];\n                        newFolder[i].slot = newFolder[i].slot + 1;\n                        newFolder[i - 1] = tempItem;\n                        newFolder[i - 1].slot = newFolder[i - 1].slot - 1;\n                    }\n                } else {\n                    for (\n                        let i = parseInt(action.item2);\n                        i < parseInt(action.item1);\n                        i++\n                    ) {\n                        let tempItem = newFolder[i];\n                        newFolder[i] = newFolder[i + 1];\n                        newFolder[i].slot = newFolder[i].slot - 1;\n                        newFolder[i + 1] = tempItem;\n                        newFolder[i + 1].slot = newFolder[i + 1].slot + 1;\n                    }\n                }\n            }\n        } else if (action.action === 'Sort') {\n            performFolderEditSort(\n                newFolder,\n                action.item1,\n                action.item2,\n                gameInfo,\n            );\n        }\n        // TODO: Implement Favorites\n    }\n\n    return newFolder;\n}\n","/** @format */\n\nexport default function performFolderEditSort(\n    folder,\n    sortType,\n    reverse,\n    gameInfo,\n) {\n    if (sortType === 'ID') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return slot1.item < slot2.item ? 1 : -1;\n                }\n            } else {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return slot1.item > slot2.item ? 1 : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Alphabet') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return gameInfo.Items[slot1.item].name <\n                        gameInfo.Items[slot2.item].name\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return gameInfo.Items[slot1.item].name >\n                        gameInfo.Items[slot2.item].name\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Alphabet (JP)') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return gameInfo.Items[slot1.item].nameJP <\n                        gameInfo.Items[slot2.item].nameJP\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (slot1.item === slot2.item) {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                } else {\n                    return gameInfo.Items[slot1.item].nameJP >\n                        gameInfo.Items[slot2.item].nameJP\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Code') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (slot1.modifier === slot2.modifier) {\n                    return slot1.item > slot2.item ? 1 : -1;\n                } else {\n                    return slot1.modifier < slot2.modifier ? 1 : -1;\n                }\n            } else {\n                if (slot1.modifier === slot2.modifier) {\n                    return slot1.item > slot2.item ? 1 : -1;\n                } else {\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Attack') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (\n                    gameInfo.Items[slot1.item].damageSort ===\n                    gameInfo.Items[slot2.item].damageSort\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.Items[slot1.item].damageSort >\n                        gameInfo.Items[slot2.item].damageSort\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (\n                    gameInfo.Items[slot1.item].damageSort ===\n                    gameInfo.Items[slot2.item].damageSort\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.Items[slot1.item].damageSort <\n                        gameInfo.Items[slot2.item].damageSort\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Element') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (\n                    gameInfo.elementOrder[\n                        gameInfo.Items[slot1.item].element\n                    ] ===\n                    gameInfo.elementOrder[gameInfo.Items[slot2.item].element]\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.elementOrder[\n                        gameInfo.Items[slot1.item].element\n                    ] <\n                        gameInfo.elementOrder[\n                            gameInfo.Items[slot2.item].element\n                        ]\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (\n                    gameInfo.elementOrder[\n                        gameInfo.Items[slot1.item].element\n                    ] ===\n                    gameInfo.elementOrder[gameInfo.Items[slot2.item].element]\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.elementOrder[\n                        gameInfo.Items[slot1.item].element\n                    ] >\n                        gameInfo.elementOrder[\n                            gameInfo.Items[slot2.item].element\n                        ]\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Quantity') {\n        // Count number of each item in the folder\n        const counts = {};\n        for (const slot of folder) {\n            if (counts[slot.item]) {\n                counts[slot.item][slot.modifier] = counts[slot.item][\n                    slot.modifier\n                ]\n                    ? counts[slot.item][slot.modifier] + 1\n                    : 1;\n            } else {\n                counts[slot.item] = {};\n                counts[slot.item][slot.modifier] = 1;\n            }\n        }\n\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (\n                    counts[slot1.item][slot1.modifier] ===\n                    counts[slot2.item][slot2.modifier]\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return counts[slot1.item][slot1.modifier] >\n                        counts[slot2.item][slot2.modifier]\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (\n                    counts[slot1.item][slot1.modifier] ===\n                    counts[slot2.item][slot2.modifier]\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return counts[slot1.item][slot1.modifier] <\n                        counts[slot2.item][slot2.modifier]\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    } else if (sortType === 'Capacity' || sortType === 'MB') {\n        folder.sort((slot1, slot2) => {\n            if (reverse) {\n                if (\n                    gameInfo.Items[slot1.item].capacity ===\n                    gameInfo.Items[slot2.item].capacity\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.Items[slot1.item].capacity <\n                        gameInfo.Items[slot2.item].capacity\n                        ? 1\n                        : -1;\n                }\n            } else {\n                if (\n                    gameInfo.Items[slot1.item].capacity ===\n                    gameInfo.Items[slot2.item].capacity\n                ) {\n                    if (slot1.item === slot2.item) {\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\n                    } else {\n                        return slot1.item > slot2.item ? 1 : -1;\n                    }\n                } else {\n                    return gameInfo.Items[slot1.item].capacity >\n                        gameInfo.Items[slot2.item].capacity\n                        ? 1\n                        : -1;\n                }\n            }\n        });\n    }\n\n    // Actually update the slots based on the new order\n    let i = 0;\n    for (const slot of folder) {\n        slot.slot = i;\n        i = i + 1;\n    }\n}\n","/** @format */\n\nexport default function getPathsToSlot(game, cursor, cursorPosition, goal) {\n    const gameInfo = require('../../../resources/' + game + '/ItemNames.json');\n    const pathsToSlot = [\n        {\n            path: '',\n            cursor: cursor,\n            cursorPosition: cursorPosition,\n        },\n    ];\n\n    for (const path of pathsToSlot) {\n        let numInputs = 0;\n        while (parseInt(path.cursor) !== parseInt(goal) && numInputs <= 100) {\n            // If the difference is negative, we're moving the cursor down. If its positive, we're moving the cursor up.\n            if (Math.sign(path.cursor - goal) === -1) {\n                // Check if pressing R will get you closer to the slot\n                if (\n                    path.cursor -\n                        path.cursorPosition +\n                        2 * gameInfo.itemsShown -\n                        1 <=\n                        29 &&\n                    Math.abs(path.cursor + gameInfo.itemsShown - goal) + 1 <=\n                        Math.abs(path.cursor - goal)\n                ) {\n                    // If pressing R will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\n                    if (\n                        Math.abs(path.cursor + gameInfo.itemsShown - goal) +\n                            1 ===\n                        Math.abs(path.cursor - goal)\n                    ) {\n                        pathsToSlot.push({\n                            path: path.path + 'R ',\n                            cursor: path.cursor + gameInfo.itemsShown,\n                            cursorPosition: path.cursorPosition,\n                        });\n                        path.path = path.path + 'V ';\n                        path.cursor = path.cursor + 1;\n                        path.cursorPosition = Math.min(\n                            path.cursorPosition + 1,\n                            gameInfo.itemsShown - 1,\n                        );\n                    } else {\n                        path.path = path.path + 'R ';\n                        path.cursor = path.cursor + gameInfo.itemsShown;\n                    }\n                } else {\n                    // Check if pressing R will get you closer to the slot in the situation that you're close to the bottom of the folder\n                    if (\n                        path.cursor -\n                            path.cursorPosition +\n                            2 * gameInfo.itemsShown -\n                            1 >\n                            29 &&\n                        Math.abs(\n                            30 -\n                                gameInfo.itemsShown +\n                                path.cursorPosition -\n                                goal,\n                        ) +\n                            1 <=\n                            Math.abs(path.cursor - goal) &&\n                        path.cursor !==\n                            30 - gameInfo.itemsShown + path.cursorPosition\n                    ) {\n                        // If pressing R will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\n                        if (\n                            Math.abs(\n                                30 -\n                                    gameInfo.itemsShown +\n                                    path.cursorPosition -\n                                    goal,\n                            ) +\n                                1 ===\n                            Math.abs(path.cursor - goal)\n                        ) {\n                            pathsToSlot.push({\n                                path: path.path + 'R ',\n                                cursor:\n                                    30 -\n                                    gameInfo.itemsShown +\n                                    path.cursorPosition,\n                                cursorPosition: path.cursorPosition,\n                            });\n                            path.path = path.path + 'V ';\n                            path.cursor = path.cursor + 1;\n                            path.cursorPosition = Math.min(\n                                path.cursorPosition + 1,\n                                gameInfo.itemsShown - 1,\n                            );\n                        } else {\n                            path.path = path.path + 'R ';\n                            path.cursor =\n                                30 - gameInfo.itemsShown + path.cursorPosition;\n                        }\n                    } else {\n                        // If we get here, pressing R will not be helpful, so just press down.\n                        console.log('Attempting to move down once');\n                        path.path = path.path + 'V ';\n                        path.cursor = path.cursor + 1;\n                        path.cursorPosition = Math.min(\n                            path.cursorPosition + 1,\n                            gameInfo.itemsShown - 1,\n                        );\n                    }\n                }\n            } else if (Math.sign(path.cursor - goal) === 1) {\n                // Check if pressing L will get you closer to the slot\n                if (\n                    path.cursor - path.cursorPosition - gameInfo.itemsShown >=\n                        0 &&\n                    Math.abs(path.cursor - gameInfo.itemsShown - goal) + 1 <=\n                        Math.abs(path.cursor - goal)\n                ) {\n                    // If pressing L will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\n                    if (\n                        Math.abs(path.cursor - gameInfo.itemsShown - goal) +\n                            1 ===\n                        Math.abs(path.cursor - goal)\n                    ) {\n                        pathsToSlot.push({\n                            path: path.path + 'L ',\n                            cursor: path.cursor - gameInfo.itemsShown,\n                            cursorPosition: path.cursorPosition,\n                        });\n                        path.path = path.path + '^ ';\n                        path.cursor = path.cursor - 1;\n                        path.cursorPosition = Math.max(\n                            path.cursorPosition - 1,\n                            0,\n                        );\n                    } else {\n                        path.path = path.path + 'L ';\n                        path.cursor = path.cursor - gameInfo.itemsShown;\n                    }\n                } else {\n                    // Check if pressing L will get you closer to the slot in the situation that you're close to the bottom of the folder\n                    if (\n                        path.cursor -\n                            path.cursorPosition -\n                            gameInfo.itemsShown <\n                            0 &&\n                        Math.abs(path.cursorPosition - goal) + 1 <=\n                            Math.abs(path.cursor - goal) &&\n                        path.cursor !== cursorPosition\n                    ) {\n                        // If pressing R will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\n                        if (\n                            Math.abs(path.cursorPosition - goal) + 1 <=\n                            Math.abs(path.cursor - goal)\n                        ) {\n                            pathsToSlot.push({\n                                path: path.path + 'L ',\n                                cursor: 0 + path.cursorPosition,\n                                cursorPosition: path.cursorPosition,\n                            });\n                            path.path = path.path + '^ ';\n                            path.cursor = path.cursor - 1;\n                            path.cursorPosition = Math.max(\n                                path.cursorPosition - 1,\n                                0,\n                            );\n                        } else {\n                            path.path = path.path + 'L ';\n                            path.cursor = 0 + path.cursorPosition;\n                        }\n                    } else {\n                        // If we get here, pressing R will not be helpful, so just press down.\n                        path.path = path.path + '^ ';\n                        path.cursor = path.cursor - 1;\n                        path.cursorPosition = Math.max(\n                            path.cursorPosition - 1,\n                            0,\n                        );\n                    }\n                }\n            }\n            numInputs = numInputs + 1;\n        }\n        if (numInputs >= 100) {\n            break;\n        }\n    }\n\n    return pathsToSlot;\n}\n","/** @format */\n\nimport getPathsToSlot from './getPathsToSlot';\n\nfunction getNumInputs(inputs) {\n    let count = 0;\n    for (const action of inputs) {\n        if (action != null) {\n            const actionInputs = action.split(' ');\n            for (const input of actionInputs) {\n                if (\n                    input === 'V' ||\n                    input === '^' ||\n                    input === '<' ||\n                    input === '>' ||\n                    input === 'A' ||\n                    input === 'Start' ||\n                    input === 'Select'\n                ) {\n                    count = count + 1;\n                }\n            }\n        }\n    }\n\n    return count;\n}\n\nexport default function getFolderEditInputs(\n    folderEdit,\n    game,\n    actionIndex = 0,\n    cursor = 0,\n    cursorPosition = 0,\n    sortCursor = 0,\n    state = 'folder',\n) {\n    // If actionIndex equals the length of the folder edit, there are no more actions to test. Return an empty list.\n    if (actionIndex === folderEdit.length) {\n        return [];\n    }\n    const gameInfo = require('../../../resources/' + game + '/ItemNames.json');\n    const action = folderEdit[actionIndex];\n\n    let inputs = new Array(folderEdit.length);\n    let actionInputs = '';\n    if (action.item1 !== -1) {\n        if (action.action === 'Remove') {\n            if (state === 'pack') {\n                actionInputs = actionInputs + '< ';\n                state = 'folder';\n            }\n\n            const paths = getPathsToSlot(\n                game,\n                cursor,\n                cursorPosition,\n                action.item1,\n            );\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\n            if (paths.length > 1) {\n                let bestInputs = Number.MAX_VALUE;\n                let bestPath = {};\n                for (const path of paths) {\n                    const tempInputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        path.cursor,\n                        path.cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                    if (bestInputs > getNumInputs(tempInputs)) {\n                        bestInputs = getNumInputs(tempInputs);\n                        bestPath = path;\n                        inputs = tempInputs;\n                    }\n                }\n                actionInputs = actionInputs + bestPath.path + 'A A ';\n            } else {\n                actionInputs = actionInputs + paths[0].path + 'A A ';\n                inputs = getFolderEditInputs(\n                    folderEdit,\n                    game,\n                    actionIndex + 1,\n                    paths[0].cursor,\n                    paths[0].cursorPosition,\n                    sortCursor,\n                    state,\n                );\n            }\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Add') {\n            if (state === 'folder') {\n                actionInputs = actionInputs + '> ';\n                state = 'pack';\n            }\n\n            actionInputs =\n                actionInputs +\n                '(Press A A on ' +\n                gameInfo.Items[action.item1].name +\n                ' ' +\n                action.modifier1 +\n                ')';\n            inputs = getFolderEditInputs(\n                folderEdit,\n                game,\n                actionIndex + 1,\n                cursor,\n                cursorPosition,\n                sortCursor,\n                state,\n            );\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Swap') {\n            if (state === 'pack') {\n                actionInputs = actionInputs + '< ';\n                state = 'folder';\n            }\n\n            const pathsToFirstItem = getPathsToSlot(\n                game,\n                cursor,\n                cursorPosition,\n                action.item1,\n            );\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\n            if (pathsToFirstItem.length > 1) {\n                let bestInputs = Number.MAX_VALUE;\n                let bestPath1 = {};\n                let bestPath2 = {};\n                console.log(pathsToFirstItem);\n                for (const path of pathsToFirstItem) {\n                    const pathsToSecondItem = getPathsToSlot(\n                        game,\n                        path.cursor,\n                        path.cursorPosition,\n                        action.item2,\n                    );\n                    if (pathsToSecondItem.length > 1) {\n                        for (const path2 of pathsToSecondItem) {\n                            const tempInputs = getFolderEditInputs(\n                                folderEdit,\n                                game,\n                                actionIndex + 1,\n                                path2.cursor,\n                                path2.cursorPosition,\n                                sortCursor,\n                                state,\n                            );\n                            tempInputs[actionIndex] =\n                                actionInputs +\n                                path.path +\n                                'A ' +\n                                path2.path +\n                                'A ';\n\n                            console.log(getNumInputs(tempInputs));\n                            if (bestInputs > getNumInputs(tempInputs)) {\n                                bestInputs = getNumInputs(tempInputs);\n                                bestPath1 = path;\n                                bestPath2 = path2;\n                                inputs = tempInputs;\n                            }\n                        }\n                    } else {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            pathsToSecondItem[0].cursor,\n                            pathsToSecondItem[0].cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n\n                        console.log(bestInputs);\n                        console.log(bestInputs > getNumInputs(tempInputs));\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath1 = path;\n                            bestPath2 = pathsToSecondItem[0];\n                            inputs = tempInputs;\n                        }\n                    }\n                }\n                actionInputs =\n                    actionInputs +\n                    bestPath1.path +\n                    'A ' +\n                    bestPath2.path +\n                    'A ';\n            } else {\n                actionInputs = actionInputs + pathsToFirstItem[0].path + 'A ';\n\n                const pathsToSecondItem = getPathsToSlot(\n                    game,\n                    pathsToFirstItem[0].cursor,\n                    pathsToFirstItem[0].cursorPosition,\n                    action.item2,\n                );\n                if (pathsToSecondItem.length > 1) {\n                    let bestInputs = Number.MAX_VALUE;\n                    let bestPath = {};\n                    for (const path of pathsToSecondItem) {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            path.cursor,\n                            path.cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath = path;\n                            inputs = tempInputs;\n                        }\n                    }\n                    actionInputs = actionInputs + bestPath.path + 'A ';\n                } else {\n                    actionInputs =\n                        actionInputs + pathsToSecondItem[0].path + 'A ';\n\n                    inputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        pathsToSecondItem[0].cursor,\n                        pathsToSecondItem[0].cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                }\n            }\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Replace') {\n            // If in folder, find the chip to be replaced, swap to pack, and select the new chip\n            // If in pack, find the new chip, swap to folder, and select the chip to be replaced.\n            if (state === 'folder') {\n                state = 'pack';\n                const paths = getPathsToSlot(\n                    game,\n                    cursor,\n                    cursorPosition,\n                    action.item1,\n                );\n                // If multiple paths returned, we need to test which one works better with the rest of the edit.\n                if (paths.length > 1) {\n                    let bestInputs = Number.MAX_VALUE;\n                    let bestPath = {};\n                    for (const path of paths) {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            path.cursor,\n                            path.cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath = path;\n                            inputs = tempInputs;\n                        }\n                    }\n                    actionInputs = actionInputs + bestPath.path + 'A ';\n                } else {\n                    actionInputs = actionInputs + paths[0].path + 'A ';\n                    inputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        paths[0].cursor,\n                        paths[0].cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                }\n\n                actionInputs =\n                    actionInputs +\n                    '> (Press A on ' +\n                    gameInfo.Items[action.item2].name +\n                    ' ' +\n                    action.modifier2 +\n                    ') ';\n            } else if (state === 'pack') {\n                state = 'folder';\n                actionInputs =\n                    actionInputs +\n                    '(Press A on ' +\n                    gameInfo.Items[action.item2].name +\n                    ' ' +\n                    action.modifier2 +\n                    ') < ';\n\n                const paths = getPathsToSlot(\n                    game,\n                    cursor,\n                    cursorPosition,\n                    action.item1,\n                );\n                // If multiple paths returned, we need to test which one works better with the rest of the edit.\n                if (paths.length > 1) {\n                    let bestInputs = Number.MAX_VALUE;\n                    let bestPath = {};\n                    for (const path of paths) {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            path.cursor,\n                            path.cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath = path;\n                            inputs = tempInputs;\n                        }\n                    }\n                    actionInputs = actionInputs + bestPath.path + 'A ';\n                } else {\n                    actionInputs = actionInputs + paths[0].path + 'A ';\n                    inputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        paths[0].cursor,\n                        paths[0].cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                }\n            }\n\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Reg' || action.action === 'Default') {\n            if (state === 'pack') {\n                actionInputs = actionInputs + '< ';\n                state = 'folder';\n            }\n\n            const paths = getPathsToSlot(\n                game,\n                cursor,\n                cursorPosition,\n                action.item1,\n            );\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\n            if (paths.length > 1) {\n                let bestInputs = Number.MAX_VALUE;\n                let bestPath = {};\n                for (const path of paths) {\n                    const tempInputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        path.cursor,\n                        path.cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                    if (bestInputs > getNumInputs(tempInputs)) {\n                        bestInputs = getNumInputs(tempInputs);\n                        bestPath = path;\n                        inputs = tempInputs;\n                    }\n                }\n                // BN6 requires extra inputs after Select. SF3 is instead Y.\n                if (game === 'MMBN6') {\n                    actionInputs = actionInputs + bestPath.path + 'Select ';\n                } else if (game === 'MMSF3') {\n                    actionInputs = actionInputs + bestPath.path + 'Y ';\n                } else {\n                    actionInputs = actionInputs + bestPath.path + 'Select ';\n                }\n            } else {\n                // BN6 requires extra inputs after Select. SF3 is instead Y.\n                if (game === 'MMBN6') {\n                    actionInputs =\n                        actionInputs +\n                        paths[0].path +\n                        'Select A (advance text) A';\n                } else if (game === 'MMSF3') {\n                    actionInputs = actionInputs + paths[0].path + 'Y ';\n                } else {\n                    actionInputs = actionInputs + paths[0].path + 'Select ';\n                }\n                inputs = getFolderEditInputs(\n                    folderEdit,\n                    game,\n                    actionIndex + 1,\n                    paths[0].cursor,\n                    paths[0].cursorPosition,\n                    sortCursor,\n                    state,\n                );\n            }\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Sort') {\n            if (state === 'pack') {\n                actionInputs = actionInputs + '< ';\n                state = 'folder';\n            }\n\n            actionInputs = actionInputs + 'Start ';\n\n            const sortTypes = [...gameInfo.sortTypes];\n            // We need to remove one of the Alphabet sorts from the list, since the game can only sort by one Alphabet.\n            if (action.item1 === 'Alphabet (JP)') {\n                sortTypes.splice(sortTypes.indexOf('Alphabet'), 1);\n            } else {\n                sortTypes.splice(sortTypes.indexOf('Alphabet (JP)'), 1);\n            }\n\n            // If the distance between the cursor and the desired sort is less than half the number of possible\n            // sorts, go directly to it. Otherwise, wrap around.\n            const numInputs = sortCursor - sortTypes.indexOf(action.item1);\n            if (Math.abs(numInputs) <= sortTypes.length / 2) {\n                // If positive difference, go up. Otherwise, go down.\n                if (Math.sign(numInputs) > 0) {\n                    for (let i = 0; i < Math.abs(numInputs); i++) {\n                        actionInputs = actionInputs + '^ ';\n                    }\n                } else if (Math.sign(numInputs) < 0) {\n                    for (let i = 0; i < Math.abs(numInputs); i++) {\n                        actionInputs = actionInputs + 'V ';\n                    }\n                }\n            } else {\n                const inverseInputs = sortTypes.length - Math.abs(numInputs);\n                // If positive difference, go down. Otherwise, go up. (Opposite of other situation).\n                if (Math.sign(numInputs) > 0) {\n                    for (let i = 0; i < Math.abs(inverseInputs); i++) {\n                        actionInputs = actionInputs + 'V ';\n                    }\n                } else if (Math.sign(numInputs) < 0) {\n                    for (let i = 0; i < Math.abs(inverseInputs); i++) {\n                        actionInputs = actionInputs + '^ ';\n                    }\n                }\n            }\n            actionInputs = actionInputs + 'A ';\n            // For reverse sorts, press A a 2nd time.\n            if (action.item2) {\n                actionInputs = actionInputs + 'A ';\n            }\n            actionInputs = actionInputs + 'B ';\n            inputs = getFolderEditInputs(\n                folderEdit,\n                game,\n                actionIndex + 1,\n                cursor,\n                cursorPosition,\n                sortTypes.indexOf(action.item1),\n                state,\n            );\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Tag') {\n            if (state === 'pack') {\n                actionInputs = actionInputs + '< ';\n                state = 'folder';\n            }\n            actionInputs = actionInputs + 'Select V A (advance text) ';\n\n            const pathsToFirstItem = getPathsToSlot(\n                game,\n                cursor,\n                cursorPosition,\n                action.item1,\n            );\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\n            if (pathsToFirstItem.length > 1) {\n                let bestInputs = Number.MAX_VALUE;\n                let bestPath1 = {};\n                let bestPath2 = {};\n                console.log(pathsToFirstItem);\n                for (const path of pathsToFirstItem) {\n                    const pathsToSecondItem = getPathsToSlot(\n                        game,\n                        path.cursor,\n                        path.cursorPosition,\n                        action.item2,\n                    );\n                    if (pathsToSecondItem.length > 1) {\n                        for (const path2 of pathsToSecondItem) {\n                            const tempInputs = getFolderEditInputs(\n                                folderEdit,\n                                game,\n                                actionIndex + 1,\n                                path2.cursor,\n                                path2.cursorPosition,\n                                sortCursor,\n                                state,\n                            );\n                            tempInputs[actionIndex] =\n                                actionInputs +\n                                path.path +\n                                'A ' +\n                                path2.path +\n                                'A ';\n\n                            console.log(getNumInputs(tempInputs));\n                            if (bestInputs > getNumInputs(tempInputs)) {\n                                bestInputs = getNumInputs(tempInputs);\n                                bestPath1 = path;\n                                bestPath2 = path2;\n                                inputs = tempInputs;\n                            }\n                        }\n                    } else {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            pathsToSecondItem[0].cursor,\n                            pathsToSecondItem[0].cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n\n                        console.log(bestInputs);\n                        console.log(bestInputs > getNumInputs(tempInputs));\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath1 = path;\n                            bestPath2 = pathsToSecondItem[0];\n                            inputs = tempInputs;\n                        }\n                    }\n                }\n                actionInputs =\n                    actionInputs +\n                    bestPath1.path +\n                    'A (advance text) ' +\n                    bestPath2.path +\n                    'A ';\n            } else {\n                actionInputs =\n                    actionInputs +\n                    pathsToFirstItem[0].path +\n                    'A (advance text) ';\n\n                const pathsToSecondItem = getPathsToSlot(\n                    game,\n                    pathsToFirstItem[0].cursor,\n                    pathsToFirstItem[0].cursorPosition,\n                    action.item2,\n                );\n                if (pathsToSecondItem.length > 1) {\n                    let bestInputs = Number.MAX_VALUE;\n                    let bestPath = {};\n                    for (const path of pathsToSecondItem) {\n                        const tempInputs = getFolderEditInputs(\n                            folderEdit,\n                            game,\n                            actionIndex + 1,\n                            path.cursor,\n                            path.cursorPosition,\n                            sortCursor,\n                            state,\n                        );\n\n                        if (bestInputs > getNumInputs(tempInputs)) {\n                            bestInputs = getNumInputs(tempInputs);\n                            bestPath = path;\n                            inputs = tempInputs;\n                        }\n                    }\n                    actionInputs = actionInputs + bestPath.path + 'A ';\n                } else {\n                    actionInputs =\n                        actionInputs + pathsToSecondItem[0].path + 'A ';\n\n                    inputs = getFolderEditInputs(\n                        folderEdit,\n                        game,\n                        actionIndex + 1,\n                        pathsToSecondItem[0].cursor,\n                        pathsToSecondItem[0].cursorPosition,\n                        sortCursor,\n                        state,\n                    );\n                }\n            }\n            inputs[actionIndex] = actionInputs;\n        } else if (action.action === 'Favorite') {\n            // Currently ignoring Favorite, as the inputs are different between SF1 and 2, and is not currently\n            // super important to optimizing folder edits.\n            // TODO: Implement Favorites\n        }\n        return inputs;\n    } else {\n        // Return an empty list of inputs if item1 is invalid.\n        return [];\n    }\n}\n","/** @format */\n\nimport { useContext } from 'react';\nimport styles from './styles/FolderEdit.Module.css';\nimport NotesContext from '../../../common/NotesContext';\nimport performFolderEditAction from '../../../common/functions/performFolderEditAction';\nimport getFolderEditInputs from '../../../common/functions/getFolderEditInputs';\n\nfunction Action(props) {\n    const {\n        notes: { game },\n    } = useContext(NotesContext);\n\n    const gameInfo = require('../../../../resources/' +\n        game +\n        '/ItemNames.json');\n\n    // Determine the text for the action based on the action type.\n    let text = '';\n    if (props.action.action === 'Add') {\n        text =\n            'Add ' +\n            gameInfo.Items[props.action.item1].name +\n            (gameInfo.modifiers ? ' ' + props.action.modifier1 : '');\n    } else if (props.action.action === 'Remove') {\n        console.log(props.folder);\n        text =\n            'Remove slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ')';\n    } else if (props.action.action === 'Swap') {\n        text =\n            'Swap slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ') with slot ' +\n            (parseInt(props.action.item2) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item2].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item2].modifier\n                : '') +\n            ')';\n    } else if (props.action.action === 'Replace') {\n        text =\n            'Replace slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ') with ' +\n            gameInfo.Items[props.action.item2].name +\n            (gameInfo.modifiers ? ' ' + props.action.modifier2 : '');\n    } else if (props.action.action === 'Reg') {\n        text =\n            'Reg slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ')';\n    } else if (props.action.action === 'Default') {\n        text =\n            'Default slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ')';\n    } else if (props.action.action === 'Sort') {\n        text =\n            'Sort by ' +\n            (props.action.item2 ? 'Reverse ' : '') +\n            props.action.item1;\n    } else if (props.action.action === 'Tag') {\n        text =\n            'Tag slot ' +\n            (parseInt(props.action.item1) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item1].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item1].modifier\n                : '') +\n            ') with slot ' +\n            (parseInt(props.action.item2) + 1) +\n            ' (' +\n            gameInfo.Items[props.folder[props.action.item2].item].name +\n            (gameInfo.modifiers\n                ? ' ' + props.folder[props.action.item2].modifier\n                : '') +\n            ')';\n    }\n\n    return <div className={`${styles.action}`}>{text}</div>;\n}\n\nfunction FolderEdit(props) {\n    const {\n        notes: { game },\n        folderEditView,\n    } = useContext(NotesContext);\n\n    const gameInfo = require('../../../../resources/' +\n        game +\n        '/ItemNames.json');\n\n    if (props.folderEdit != null) {\n        if (folderEditView === 'Actions') {\n            // Create a list of Actions. Use the initial folder in order to list the appropriate information per action\n            const actionsList = [];\n            let tempFolder = JSON.parse(\n                JSON.stringify(props.folderEdit.prevFolder),\n            );\n\n            for (const action of props.folderEdit.value) {\n                actionsList.push(\n                    <Action\n                        key={action.id}\n                        action={action}\n                        folder={tempFolder}\n                    />,\n                );\n\n                tempFolder = performFolderEditAction(\n                    tempFolder,\n                    action,\n                    gameInfo,\n                );\n            }\n\n            return (\n                <div className={`${styles.folderEditContainer}`}>\n                    <div className={`${styles.label}`}>Folder Edit</div>\n                    {actionsList}\n                </div>\n            );\n        } else if (folderEditView === 'Differences') {\n            console.log(props.folderEdit.folder);\n            return (\n                <div className={`${styles.folderEditContainer}`}>\n                    <div className={`${styles.label}`}>Folder Edit</div>\n                    <div className={`${styles.wrapper}`}>\n                        <div className=\"col-5\">\n                            <div className={`${styles.label}`}>Previous</div>\n                            {props.folderEdit.prevFolder.map((slot) => (\n                                <div\n                                    className={`${\n                                        slot.regged ? styles.regged : ''\n                                    } ${slot.tagged ? styles.tagged : ''}`}>\n                                    {(parseInt(slot.slot) + 1)\n                                        .toString()\n                                        .padStart(2, '0')}\n                                    . {gameInfo.Items[slot.item].name}{' '}\n                                    {gameInfo.modifiers ? slot.modifier : ''}\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"col-2\">-></div>\n                        <div className=\"col-5\">\n                            <div className={`${styles.label}`}>Next</div>\n                            {props.folderEdit.folder.map((slot) => (\n                                <div\n                                    className={`${\n                                        slot.regged ? styles.regged : ''\n                                    } ${slot.tagged ? styles.tagged : ''}`}>\n                                    {(parseInt(slot.slot) + 1)\n                                        .toString()\n                                        .padStart(2, '0')}\n                                    . {gameInfo.Items[slot.item].name}{' '}\n                                    {gameInfo.modifiers ? slot.modifier : ''}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else if (folderEditView === 'Inputs') {\n            return (\n                <div className={`${styles.folderEditContainer}`}>\n                    <div className={`${styles.label}`}>Folder Edit</div>\n                    {getFolderEditInputs(props.folderEdit.value, game).map(\n                        (action) => (\n                            <div className=\"col-12\">{action}</div>\n                        ),\n                    )}\n                </div>\n            );\n        }\n    }\n\n    return null;\n}\n\nexport default FolderEdit;\n","/** @format */\n\nimport { useContext, memo } from 'react';\nimport styles from './styles/NoteSection.Module.css';\nimport Text from './Text';\nimport ItemsList from './ItemsList';\nimport Image from './Image';\nimport State from './State';\nimport FolderEdit from './FolderEdit';\nimport Icon from '../../../common/Icon';\nimport NotesContext from '../../../common/NotesContext';\nimport areShallowEqual from 'are-shallow-equal';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (areShallowEqual(oldProps, newProps)) {\n        return true;\n    }\n\n    console.log('test');\n    return false;\n}\n\nconst NoteSection = memo((props) => {\n    const {\n        notes: { game },\n        mode,\n        foundItems,\n        foundModifiers,\n    } = useContext(NotesContext);\n\n    if (mode === 'list') {\n        return (\n            <div\n                id={'section-' + props.section.id}\n                className={`${styles.section} card`}\n                ref={props.noteRef}>\n                <div className={`${styles.wrapper}`}>\n                    <div className={`${styles.textContainer} col-m-12`}>\n                        {props.section.text.map((text) => (\n                            <Text\n                                key={'text-' + text.id}\n                                text={text}\n                                foundItems={foundItems}\n                                foundModifiers={foundModifiers}\n                            />\n                        ))}\n                    </div>\n                    <div className={`${styles.itemContainer}`}>\n                        <ItemsList\n                            items={props.section.items}\n                            updateTracker={props.updateTracker}\n                            game={game}\n                            foundItems={foundItems}\n                            foundModifiers={foundModifiers}\n                        />\n                    </div>\n                </div>\n                <div className={`${styles.wrapper}`}>\n                    <Image\n                        image={props.section.image}\n                        onClick={props.fullscreenImage}\n                    />\n                    <State state={props.section.state} game={game} />\n                    <FolderEdit folderEdit={props.section.folderEdit} />\n                </div>\n            </div>\n        );\n    } else if (mode === 'presenter') {\n        return (\n            <div\n                id={'section-' + props.section.id}\n                className={`${styles.wrapper} card`}\n                ref={props.noteRef}>\n                <div className=\"col-12 col-m-12\">\n                    <Icon\n                        src=\"/icons/previous.png\"\n                        size=\"large\"\n                        altText=\"Previous\"\n                        hover={true}\n                        hidden={false}\n                        onClick={props.previousSection}\n                    />\n                    <Icon\n                        src=\"/icons/next.png\"\n                        size=\"large\"\n                        altText=\"Next\"\n                        hover={true}\n                        hidden={false}\n                        float={'right'}\n                        onClick={props.nextSection}\n                    />\n                </div>\n                <div className=\"col-4 col-m-12\">\n                    <ul>\n                        {props.section.text.map((text) => (\n                            <Text\n                                key={'text-' + text.id}\n                                text={text}\n                                foundItems={foundItems}\n                                foundModifiers={foundModifiers}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <ItemsList\n                    items={props.section.items}\n                    updateTracker={props.updateTracker}\n                    game={game}\n                    foundItems={foundItems}\n                    foundModifiers={foundModifiers}\n                />\n                <div className=\"col-6 col-m-12\">\n                    <Image image={props.section.image} />\n                    <State state={props.section.state} game={game} />\n                    <FolderEdit folderEdit={props.section.folderEdit} />\n                </div>\n            </div>\n        );\n    }\n\n    return null;\n}, shouldUpdate);\n\nexport default NoteSection;\n","/** @format */\n\nimport {\n    useState,\n    useEffect,\n    useCallback,\n    useContext,\n    useMemo,\n    createRef,\n} from 'react';\nimport NoteSection from './NoteSection';\nimport NotesContext from '../../../common/NotesContext';\nimport styles from './styles/Notes.Module.css';\n\nfunction Notes(props) {\n    const { notes, showNotes, showTracker, mode } = useContext(NotesContext);\n\n    const [state, setState] = useState({\n        section: 0,\n        sectionTop: 5,\n        scrollPosition: 0,\n    });\n\n    const [numSections, setNumSections] = useState(\n        Math.min(10, notes.sections.length),\n    );\n\n    const notesRef = createRef();\n\n    const sectionRefs = useMemo(() => {\n        const refsArray = new Array(notes.sections.length);\n        notes.sections.map((section) => (refsArray[section.id] = createRef()));\n        return refsArray;\n    }, [notes]);\n\n    const renderNewSections = useCallback(\n        (entries, observer) => {\n            const [entry] = entries;\n\n            if (entry.isIntersecting && numSections !== notes.sections.length) {\n                setNumSections(\n                    Math.min(numSections + 10, notes.sections.length),\n                );\n            }\n        },\n        [numSections, notes, setNumSections],\n    );\n\n    const observer = useMemo(() => {\n        const options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 0.2,\n        };\n\n        return new IntersectionObserver(renderNewSections, options);\n    }, [renderNewSections]);\n\n    useEffect(() => {\n        if (mode === 'list' && showNotes) {\n            sectionRefs[state.section].current.scrollIntoView({\n                behavior: 'instant',\n            });\n        }\n    }, [mode, showNotes]);\n\n    useEffect(() => {\n        observer.disconnect();\n        if (\n            numSections < notes.sections.length &&\n            mode === 'list' &&\n            showNotes\n        ) {\n            observer.observe(sectionRefs[numSections - 1].current);\n        }\n    }, [mode, showNotes, sectionRefs, numSections, observer, notes]);\n\n    const onScroll = (e) => {\n        let scrollPosition = e.target.scrollTop;\n        let newSectionTop = state.sectionTop;\n\n        let i = 0;\n        if (\n            scrollPosition > state.scrollPosition &&\n            state.section !== notes.sections.length\n        ) {\n            while (\n                scrollPosition >=\n                Math.floor(\n                    newSectionTop +\n                        sectionRefs[\n                            state.section + i\n                        ].current.getBoundingClientRect().height +\n                        10,\n                )\n            ) {\n                newSectionTop =\n                    newSectionTop +\n                    Math.floor(\n                        sectionRefs[\n                            state.section + i\n                        ].current.getBoundingClientRect().height + 10,\n                    );\n                i++;\n\n                if (state.section + i === notes.sections.length) {\n                    break;\n                }\n            }\n        } else if (\n            scrollPosition < state.scrollPosition &&\n            state.section !== 0\n        ) {\n            while (scrollPosition < newSectionTop) {\n                i--;\n                newSectionTop =\n                    newSectionTop -\n                    sectionRefs[\n                        state.section + i\n                    ].current.getBoundingClientRect().height -\n                    10;\n\n                if (state.section + i === 0) {\n                    break;\n                }\n            }\n        }\n\n        setState({\n            ...state,\n            section: state.section + i,\n            sectionTop: newSectionTop,\n            scrollPosition: scrollPosition,\n        });\n    };\n\n    const handleKeyPress = (e) => {\n        let keyPress = e.key;\n        if (\n            keyPress === 'ArrowLeft' ||\n            keyPress === 'ArrowRight' ||\n            keyPress === ' '\n        ) {\n            e.preventDefault();\n        }\n\n        if (keyPress === 'ArrowLeft' && state.section !== 0) {\n            if (mode === 'list') {\n                sectionRefs[state.section - 1].current.scrollIntoView({\n                    behavior: 'smooth',\n                });\n            } else if (mode === 'presenter') {\n                setState({\n                    ...state,\n                    section: state.section - 1,\n                });\n            }\n        } else if (\n            (keyPress === ' ' || keyPress === 'ArrowRight') &&\n            state.section !== notes.sections.length - 1\n        ) {\n            if (mode === 'list') {\n                sectionRefs[state.section + 1].current.scrollIntoView({\n                    behavior: 'smooth',\n                });\n            } else if (mode === 'presenter') {\n                setState({\n                    ...state,\n                    section: state.section + 1,\n                });\n            }\n        }\n    };\n\n    const previousSection = (e) => {\n        e.preventDefault();\n\n        if (state.section !== 0) {\n            setState({\n                ...state,\n                section: state.section - 1,\n            });\n        }\n    };\n\n    const nextSection = (e) => {\n        e.preventDefault();\n\n        if (state.section !== notes.sections.length - 1) {\n            setState({\n                ...state,\n                section: state.section + 1,\n            });\n        }\n    };\n\n    const fullSizeClass = !showTracker ? styles.fullSize : '';\n\n    if (showNotes) {\n        if (mode === 'list') {\n            return (\n                <div\n                    onScroll={onScroll}\n                    onKeyDown={handleKeyPress}\n                    className={`${styles.notes} ${fullSizeClass}`}\n                    ref={notesRef}\n                    tabIndex=\"0\">\n                    {notes.sections.slice(0, numSections).map((section) => (\n                        <NoteSection\n                            key={'section-' + section.id}\n                            noteRef={sectionRefs[section.id]}\n                            section={section}\n                            updateTracker={props.updateTracker}\n                            fullscreenImage={props.fullscreenImage}\n                        />\n                    ))}\n                </div>\n            );\n        } else if (mode === 'presenter') {\n            const section = notes.sections[state.section];\n\n            return (\n                <div\n                    onKeyDown={handleKeyPress}\n                    className={`${styles.notes} ${fullSizeClass}`}\n                    ref={notesRef}\n                    tabIndex=\"0\">\n                    <NoteSection\n                        key={'section-' + section.id}\n                        noteRef={sectionRefs[section.id]}\n                        section={section}\n                        updateTracker={props.updateTracker}\n                        previousSection={previousSection}\n                        nextSection={nextSection}\n                        fullscreenImage={props.fullscreenImage}\n                    />\n                </div>\n            );\n        }\n    }\n\n    return null;\n}\n\nexport default Notes;\n","/** @format */\n\nimport { useContext } from 'react';\nimport NotesContext from '../../../common/NotesContext';\nimport styles from './styles/Modifiers.Module.css';\nimport themeMMBN from './styles/themes/MMBN/MMBN-Modifiers.Module.css';\n\nfunction Modifier(props) {\n    const foundClass = props.foundModifiers[props.id].includes(props.modifier)\n        ? styles.found\n        : '';\n    return (\n        <div\n            id={'modifier-' + props.id + '-' + props.modifier}\n            className={`${styles.modifier} ${styles[props.game]} ${foundClass}`}\n            onClick={() => props.updateFound(props.modifier)}>\n            {props.modifier}{' '}\n        </div>\n    );\n}\n\nfunction Modifiers(props) {\n    const {\n        notes: { game },\n        foundModifiers,\n    } = useContext(NotesContext);\n\n    let theme = {};\n    if (game.includes('MMBN')) {\n        theme = themeMMBN;\n    }\n\n    const updateFound = (modifier) => {\n        props.updateTracker(props.id, modifier);\n    };\n\n    if (props.modifiers != null && props.modifiers.length > 0) {\n        return (\n            <div className={`${styles.modifiers} ${theme.modifiers}`}>\n                {props.modifiers.map((modifier) => (\n                    <Modifier\n                        key={'modifier-' + modifier}\n                        id={props.id}\n                        modifier={modifier}\n                        foundModifiers={foundModifiers}\n                        game={game}\n                        updateFound={updateFound}\n                    />\n                ))}\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default Modifiers;\n","/** @format */\n\nimport { useContext } from 'react';\nimport Modifiers from './Modifiers';\nimport NotesContext from '../../../common/NotesContext';\nimport styles from './styles/Item.Module.css';\nimport themeMMBN from './styles/themes/MMBN/MMBN-Item.Module.css';\nimport themeMMSF from './styles/themes/MMSF/MMSF-Item.Module.css';\n\nfunction Item(props) {\n    const {\n        notes: { game },\n    } = useContext(NotesContext);\n\n    let theme = {};\n    if (game.includes('MMBN')) {\n        theme = themeMMBN;\n    } else if (game.includes('MMSF')) {\n        theme = themeMMSF;\n    }\n\n    const updateFound = () => {\n        props.updateTracker(props.id, null);\n    };\n\n    if (props.id >= props.type.low && props.id <= props.type.high) {\n        const foundClass = props.found ? styles.found : '';\n\n        return (\n            <div>\n                <div\n                    id={props.id}\n                    className={`${styles.item} ${theme[props.type.id]} ${\n                        theme.item\n                    } ${foundClass}`}\n                    onClick={updateFound}>\n                    <div className={`${styles.title} ${theme.title}`}>\n                        {(props.id - props.low + 1).toString().padStart(3, '0')}{' '}\n                        {props.name}\n                    </div>\n                    <img\n                        className={`${styles.itemArt} ${theme.itemArt}`}\n                        src={'/items/' + game + '/' + props.id + '.png'}\n                        alt={props.name + ' art'}\n                    />\n                </div>\n                <Modifiers\n                    id={props.id}\n                    modifiers={props.modifiers}\n                    updateTracker={props.updateTracker}\n                />\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default Item;\n","/** @format */\n\nimport { useContext } from 'react';\nimport styles from './styles/Tracker.Module.css';\nimport Item from './Item';\nimport NotesContext from '../../../common/NotesContext';\n\nfunction Tracker(props) {\n    const {\n        notes: { game },\n        showNotes,\n        showTracker,\n        foundItems,\n    } = useContext(NotesContext);\n\n    const fullSizeClass = !showNotes ? styles.fullSize : '';\n\n    let Items = require('../../../../resources/' + game + '/ItemNames.json');\n\n    if (showTracker) {\n        return (\n            <div className={`${styles.tracker} ${fullSizeClass}`}>\n                {Items.types.map((type) => (\n                    <div\n                        key={'type-' + type.name}\n                        className={`card ${styles.section}`}>\n                        <div className={styles.header}>{type.name}</div>\n                        <div id=\"Items\" className={styles.list}>\n                            {Items.Items.map((item) => (\n                                <Item\n                                    key={'item-' + item.id}\n                                    id={item.id}\n                                    name={item.name}\n                                    type={type}\n                                    low={type.low}\n                                    modifiers={item.modifiers}\n                                    updateTracker={props.updateTracker}\n                                    found={foundItems.includes(item.id)}\n                                />\n                            ))}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default Tracker;\n","/** @format */\n\nimport styles from './styles/LargeImage.Module.css';\n\nfunction LargeImage(props) {\n    const onClick = (e) => {\n        if (e.target.tagName !== 'IMG') {\n            props.fullscreenImage(null);\n        }\n    };\n\n    if (props.image != null) {\n        return (\n            <div className={styles.fullscreenPreview} onClick={onClick}>\n                <img className={styles.image} src={props.image} alt=\"\" />\n            </div>\n        );\n    }\n\n    return null;\n}\n\nexport default LargeImage;\n","/** @format */\n\nimport { createContext } from 'react';\n\nconst RouteContext = createContext({});\n\nexport default RouteContext;\n","/** @format */\n\nimport { useState, useCallback, useContext, Suspense } from 'react';\nimport styles from './styles/Route.Module.css';\nimport Menu from './Menu';\nimport Notes from './notes/Notes';\nimport Tracker from './tracker/Tracker';\nimport LargeImage from './LargeImage';\nimport useMatchMedia from '../../common/functions/useMatchMedia';\nimport RouteContext from '../../common/RouteContext';\nimport NotesContext from '../../common/NotesContext';\nimport useSuspenseResource from '../../common/functions/useSuspense';\n\nfunction Route(props) {\n    let path = '';\n    if (props.match != null) {\n        path = props.match.params.routePath;\n    }\n\n    const notesResource = useSuspenseResource(async () => {\n        const response = await fetch(\n            `${process.env.PUBLIC_URL}/notes/${path}.json`,\n        );\n\n        return await response.json();\n    }, [path]);\n\n    return (\n        <Suspense fallback=\"Loading...\">\n            <RouteImpl {...props} notesResource={notesResource} />\n        </Suspense>\n    );\n}\n\nconst getInitialState = (notes, isMobile) => {\n    let initialTrackerDisplay = true;\n    let initialMode = 'list';\n    // If on mobile, swap to presenter mode by default and hide the tracker\n    if (isMobile) {\n        initialTrackerDisplay = false;\n        initialMode = 'presenter';\n    }\n\n    const Items = require('../../../resources/' +\n        notes.game +\n        '/ItemNames.json');\n\n    let initialFoundItems = JSON.parse(\n        localStorage.getItem('foundItems-' + notes.game),\n    );\n    let initialFoundModifiers = JSON.parse(\n        localStorage.getItem('foundModifiers-' + notes.game),\n    );\n\n    // Update foundItems and foundModifiers if nothing was in local storage\n    if (initialFoundItems == null || initialFoundItems.length === 0) {\n        initialFoundItems = JSON.parse(\n            JSON.stringify(\n                require('../../../resources/' +\n                    notes.game +\n                    '/DefaultFoundItems.json'),\n            ),\n        );\n    }\n\n    if (Items.modifiers && initialFoundModifiers == null) {\n        initialFoundModifiers = JSON.parse(\n            JSON.stringify(\n                require('../../../resources/' +\n                    notes.game +\n                    '/DefaultFoundModifiers.json'),\n            ),\n        );\n    }\n\n    return {\n        notes: notes,\n        showNotes: true,\n        showTracker: initialTrackerDisplay,\n        mode: initialMode,\n        foundItems: initialFoundItems,\n        foundModifiers: initialFoundModifiers,\n        folderEditView: 'Actions',\n    };\n};\n\nfunction RouteImpl(props) {\n    const routeContext = useContext(RouteContext);\n    let notes;\n    if (routeContext.route != null) {\n        notes = routeContext.route;\n    } else {\n        notes = props.notesResource.read();\n    }\n\n    const [state, setState] = useState(\n        getInitialState(notes, useMatchMedia('(max-width: 600px)')),\n    );\n\n    const setContext = useCallback(\n        (updates) => {\n            setState({ ...state, ...updates });\n        },\n        [state, setState],\n    );\n\n    const getContextValue = useCallback(\n        () => ({\n            ...state,\n            setContext,\n        }),\n        [state, setContext],\n    );\n\n    const updateTracker = useCallback(\n        (id, modifier) => {\n            let newFoundItems = [...state.foundItems];\n            let newFoundModifiers =\n                state.foundModifiers !== null\n                    ? [...state.foundModifiers]\n                    : null;\n            if (modifier == null) {\n                if (newFoundItems.includes(id)) {\n                    newFoundItems.splice(newFoundItems.indexOf(id), 1);\n                    if (newFoundModifiers != null) {\n                        newFoundModifiers[id] = [];\n                    }\n                } else {\n                    newFoundItems.push(id);\n                }\n            } else {\n                if (newFoundModifiers[id].includes(modifier)) {\n                    newFoundModifiers[id].splice(\n                        newFoundModifiers[id].indexOf(modifier),\n                        1,\n                    );\n                    if (newFoundModifiers[id].length === 0) {\n                        newFoundItems.splice(newFoundItems.indexOf(id), 1);\n                    }\n                } else {\n                    newFoundModifiers[id].push(modifier);\n                    if (!newFoundItems.includes(id)) {\n                        newFoundItems.push(id);\n                    }\n                }\n            }\n\n            setState({\n                ...state,\n                foundItems: newFoundItems,\n                foundModifiers: newFoundModifiers,\n            });\n\n            localStorage.setItem(\n                'foundItems-' + state.notes.game,\n                JSON.stringify(newFoundItems),\n            );\n            localStorage.setItem(\n                'foundModifiers-' + state.notes.game,\n                JSON.stringify(newFoundModifiers),\n            );\n        },\n        [state, setState],\n    );\n\n    const fullscreenImage = useCallback(\n        (image) => {\n            setState({ ...state, fullscreenImage: image });\n        },\n        [state, setState],\n    );\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <LargeImage\n                image={state.fullscreenImage}\n                fullscreenImage={fullscreenImage}\n            />\n            <NotesContext.Provider value={getContextValue()}>\n                <Notes\n                    updateTracker={updateTracker}\n                    fullscreenImage={fullscreenImage}\n                />\n                <div className={`${styles.rightColumn}`}>\n                    <Menu\n                        preview={routeContext.preview}\n                        swapPreview={props.swapPreview}\n                    />\n                    <Tracker updateTracker={updateTracker} />\n                </div>\n            </NotesContext.Provider>\n        </div>\n    );\n}\n\nexport default Route;\n","/** @format */\n\nimport { createContext } from 'react';\n\nconst GameContext = createContext('');\n\nexport default GameContext;\n","/** @format */\n\nimport { useContext, memo } from 'react';\nimport GameContext from '../../../common/GameContext';\nimport styles from './styles/ItemDropdown.Module.css';\nimport Button from '../../../common/Button';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (oldProps.item !== newProps.item) {\n        return false;\n    } else if (oldProps.updateItem !== newProps.updateItem) {\n        return false;\n    }\n\n    return true;\n}\n\nconst ItemDropdown = memo((props) => {\n    const gameInfo = useContext(GameContext);\n\n    const onUpdateItem = (e) => {\n        let value = e.target.value;\n\n        if (value !== '') {\n            value = parseInt(value);\n        }\n\n        props.updateItem(value);\n    };\n\n    const addDropdown = (e) => {\n        e.preventDefault();\n\n        props.updateItem(0);\n    };\n\n    if (props.item != null) {\n        if (props.type === 'text') {\n            return (\n                <select\n                    className={`${styles.select}`}\n                    value={props.item}\n                    onChange={onUpdateItem}>\n                    <option value=\"\">Remove {gameInfo.name}</option>\n                    {gameInfo.Items.map((item) => (\n                        <option value={item.id} key={'text-item-' + item.id}>\n                            {item.name}\n                        </option>\n                    ))}\n                </select>\n            );\n        } else if (props.type === 'section') {\n            return (\n                <select\n                    className={`${styles.select}`}\n                    value={props.item}\n                    onChange={onUpdateItem}>\n                    <option value=\"\">Select {gameInfo.name}</option>\n                    {gameInfo.Items.map((item) => (\n                        <option value={item.id} key={'section-item-' + item.id}>\n                            {item.name}\n                        </option>\n                    ))}\n                </select>\n            );\n        }\n    } else {\n        if (props.type === 'text') {\n            return (\n                <span className={`${styles.buffer}`}>\n                    <Button\n                        text={'Add ' + gameInfo.name}\n                        size=\"medium\"\n                        onClick={addDropdown}\n                    />\n                </span>\n            );\n        }\n    }\n\n    return null;\n}, shouldUpdate);\n\nexport default ItemDropdown;\n","/** @format */\n\nimport { useContext } from 'react';\nimport GameContext from '../../../common/GameContext';\nimport styles from './styles/ModifierDropdown.Module.css';\n\nfunction ModifierDropdown(props) {\n    const gameInfo = useContext(GameContext);\n\n    const onModifierUpdate = (e) => {\n        let value = e.target.value;\n        props.updateModifier(value);\n    };\n\n    if (!gameInfo.modifiers) {\n        return null;\n    }\n\n    if (props.item != null) {\n        if (gameInfo.Items[props.item] == null) {\n            return (\n                <select\n                    className={`${styles.select}`}\n                    value={props.modifier}\n                    onChange={onModifierUpdate}>\n                    <option value=\"\"> </option>\n                </select>\n            );\n        }\n\n        return (\n            <select\n                className={`${styles.select}`}\n                value={props.modifier}\n                onChange={onModifierUpdate}>\n                <option value=\"\"> </option>\n                {gameInfo.Items[props.item].modifiers.map((modifier) => (\n                    <option value={modifier} key={'text-modifier-' + modifier}>\n                        {modifier}\n                    </option>\n                ))}\n            </select>\n        );\n    }\n\n    return <span className={`${styles.buffer}`} />;\n}\n\nexport default ModifierDropdown;\n","/** @format */\n\nimport { useContext, memo } from 'react';\nimport styles from './styles/SectionText.Module.css';\nimport ItemDropdown from './ItemDropdown';\nimport ModifierDropdown from './ModifierDropdown';\nimport Icon from '../../../common/Icon';\nimport GameContext from '../../../common/GameContext';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (oldProps.text.id !== newProps.text.id) {\n        return false;\n    } else if (oldProps.text.text !== newProps.text.text) {\n        return false;\n    } else if (oldProps.text.item !== newProps.text.item) {\n        return false;\n    } else if (oldProps.text.modifier !== newProps.text.modifier) {\n        return false;\n    } else if (oldProps.updateText !== newProps.updateText) {\n        return false;\n    }\n\n    return true;\n}\n\nconst SectionText = memo((props) => {\n    const game = useContext(GameContext);\n\n    const onTextUpdate = (e) => {\n        const newText = JSON.parse(JSON.stringify(props.text));\n        newText.text = e.target.value;\n        props.updateText(newText, props.text.id);\n    };\n\n    const updateItem = (item) => {\n        const newText = JSON.parse(JSON.stringify(props.text));\n        if (item !== '') {\n            newText.item = item;\n        } else {\n            newText.item = null;\n        }\n        props.updateText(newText, props.text.id);\n    };\n\n    const updateModifier = (modifier) => {\n        const newText = JSON.parse(JSON.stringify(props.text));\n        newText.modifier = modifier;\n        props.updateText(newText, props.text.id);\n    };\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <textarea\n                className={`${styles.textarea}`}\n                defaultValue={props.text.text}\n                placeholder=\"Text\"\n                onBlur={onTextUpdate}\n            />\n            <ItemDropdown\n                type=\"text\"\n                item={props.text.item}\n                game={game}\n                updateItem={updateItem}\n            />\n            <ModifierDropdown\n                type=\"text\"\n                item={props.text.item}\n                modifier={props.text.modifier}\n                updateModifier={updateModifier}\n            />\n            <Icon\n                src=\"/icons/up.png\"\n                id={'moveTextUp-' + props.text.id}\n                size=\"small\"\n                hover={true}\n                hidden={props.text.id === 0}\n                altText=\"Up\"\n                onClick={() => props.moveTextUp(props.text.id)}\n            />\n            <Icon\n                src=\"/icons/down.png\"\n                id={'moveTextDown-' + props.text.id}\n                size=\"small\"\n                hover={true}\n                hidden={props.text.id === props.max}\n                altText=\"Down\"\n                onClick={() => props.moveTextDown(props.text.id)}\n            />\n            <Icon\n                src=\"/icons/delete.png\"\n                id={'deleteText-' + props.text.id}\n                size=\"small\"\n                hover={true}\n                hidden={false}\n                grayscale={true}\n                altText=\"X\"\n                onClick={() => props.deleteText(props.text.id)}\n            />\n        </div>\n    );\n}, shouldUpdate);\n\nexport default SectionText;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/SectionItem.Module.css';\nimport ItemDropdown from './ItemDropdown';\nimport ModifierDropdown from './ModifierDropdown';\nimport Icon from '../../../common/Icon';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (oldProps.item.id !== newProps.item.id) {\n        return false;\n    } else if (oldProps.item.value !== newProps.item.value) {\n        return false;\n    } else if (oldProps.item.modifier !== newProps.item.modifier) {\n        return false;\n    } else if (oldProps.updateItem !== newProps.updateItem) {\n        return false;\n    }\n\n    return true;\n}\n\nconst SectionItem = React.memo((props) => {\n    const updateItem = (item) => {\n        const newItem = JSON.parse(JSON.stringify(props.item));\n        newItem.value = item;\n        props.updateItem(newItem, props.item.id);\n    };\n\n    const updateModifier = (modifier) => {\n        const newItem = JSON.parse(JSON.stringify(props.item));\n        newItem.modifier = modifier;\n        props.updateItem(newItem, props.item.id);\n    };\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <ItemDropdown\n                type=\"section\"\n                item={props.item.value}\n                updateItem={updateItem}\n            />\n            <ModifierDropdown\n                type=\"section\"\n                item={props.item.value}\n                modifier={props.item.modifier}\n                updateModifier={updateModifier}\n            />\n            <Icon\n                src=\"/icons/up.png\"\n                size=\"small\"\n                hover={true}\n                hidden={props.item.id === 0}\n                altText=\"Up\"\n                onClick={() => props.moveItemUp(props.item.id)}\n            />\n            <Icon\n                src=\"/icons/down.png\"\n                size=\"small\"\n                hover={true}\n                hidden={props.item.id === props.max}\n                altText=\"Down\"\n                onClick={() => props.moveItemDown(props.item.id)}\n            />\n            <Icon\n                src=\"/icons/delete.png\"\n                size=\"small\"\n                hover={true}\n                hidden={false}\n                grayscale={true}\n                altText=\"X\"\n                onClick={() => props.deleteItem(props.item.id)}\n            />\n        </div>\n    );\n}, shouldUpdate);\n\nexport default SectionItem;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/PreviewImage.Module.css';\n\nclass PreviewImage extends React.Component {\n    render() {\n        if (this.props.image == null || this.props.image === '') {\n            return null;\n        }\n\n        return (\n            <img className={`${styles.img}`} src={this.props.image} alt=\"\" />\n        );\n    }\n}\n\nexport default PreviewImage;\n","/** @format */\n\nimport React from 'react';\nimport PreviewImage from './PreviewImage';\nimport Icon from '../../../common/Icon';\nimport styles from './styles/SectionImage.Module.css';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (oldProps.image !== newProps.image) {\n        return false;\n    } else if (oldProps.updateImage !== newProps.updateImage) {\n        return false;\n    }\n\n    return true;\n}\n\nconst SectionImage = React.memo((props) => {\n    const getBase64 = (file, callback) => {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function () {\n            callback(reader.result);\n        };\n        reader.onerror = function (error) {\n            console.log('Error: ', error);\n        };\n    };\n\n    let deleteIcon;\n    if (props.image != null) {\n        deleteIcon = (\n            <Icon\n                src=\"/icons/delete.png\"\n                size=\"small\"\n                hover={true}\n                grayscale={true}\n                altText=\"X\"\n                onClick={props.deleteImage}\n            />\n        );\n    }\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <div className={`${styles.input}`}>\n                <input\n                    type=\"file\"\n                    onChange={(e) => {\n                        getBase64(e.target.files[0], props.updateImage);\n                    }}\n                />\n                {deleteIcon}\n            </div>\n            <PreviewImage image={props.image} />\n        </div>\n    );\n}, shouldUpdate);\n\nexport default SectionImage;\n","/** @format */\n\nimport { memo } from 'react';\nimport Button from '../../../common/Button';\nimport styles from './styles/SectionState.Module.css';\nimport areShallowEqual from 'are-shallow-equal';\n\nfunction shouldUpdate(oldProps, newProps) {\n    if (areShallowEqual(oldProps, newProps)) {\n        return true;\n    }\n\n    return false;\n}\n\nconst SectionState = memo((props) => {\n    const onStateValueChange = (key, value) => {\n        // JSON stringify, then JSON parse to make a deep copy.\n        let newState = JSON.parse(JSON.stringify(props.state));\n        newState[key].value = value;\n        props.updateState(newState);\n    };\n\n    const onStateShownChange = (key, value) => {\n        // JSON stringify, then JSON parse to make a deep copy.\n        let newState = JSON.parse(JSON.stringify(props.state));\n        newState[key].shown = value;\n        props.updateState(newState);\n    };\n\n    if (props.state != null) {\n        return (\n            <div>\n                <div className={`${styles.wrapper}`}>\n                    {props.state.keys.map((key) => (\n                        <div className={`${styles.stateField}`} key={key}>\n                            <label\n                                className={`${styles.label}`}\n                                htmlFor={\n                                    'state-' + key + '-' + props.sectionId\n                                }>\n                                {key}\n                            </label>\n                            <div className={`${styles.inputs}`}>\n                                <input\n                                    type=\"text\"\n                                    className={styles.textInput}\n                                    defaultValue={props.state[key].value}\n                                    onChange={(e) => {\n                                        onStateValueChange(key, e.target.value);\n                                    }}\n                                />\n                                <input\n                                    type=\"checkbox\"\n                                    className={styles.checkbox}\n                                    checked={props.state[key].shown}\n                                    onChange={(e) => {\n                                        onStateShownChange(\n                                            key,\n                                            e.target.checked,\n                                        );\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"col-2\">\n                    <Button\n                        text=\"Delete State\"\n                        size=\"medium\"\n                        onClick={props.deleteState}\n                    />\n                </div>\n            </div>\n        );\n    }\n    return <Button text=\"Add State\" size=\"medium\" onClick={props.addState} />;\n}, shouldUpdate);\n\nexport default SectionState;\n","/** @format */\n\nimport performFolderEditAction from './performFolderEditAction';\n\nexport default function getNewFolder(folderEdit, folder, gameInfo) {\n    let newFolder = JSON.parse(JSON.stringify(folder));\n    for (const action of folderEdit.value) {\n        newFolder = performFolderEditAction(newFolder, action, gameInfo);\n    }\n\n    return newFolder;\n}\n","/** @format */\n\nimport { useContext } from 'react';\nimport Icon from '../../../common/Icon';\nimport Button from '../../../common/Button';\nimport GameContext from '../../../common/GameContext';\nimport performFolderEditAction from '../../../common/functions/performFolderEditAction';\nimport getNewFolder from '../../../common/functions/getNewFolder';\nimport styles from './styles/SectionFolderEdit.Module.css';\n\nfunction ItemOption(props) {\n    const gameInfo = useContext(GameContext);\n\n    if (props.item !== -1) {\n        return (\n            <option value={props.slot} key={props.slot}>\n                {parseInt(props.slot) + 1}. {gameInfo.Items[props.item].name}{' '}\n                {props.modifier}\n            </option>\n        );\n    }\n\n    return null;\n}\n\nfunction ItemDropdown(props) {\n    const gameInfo = useContext(GameContext);\n\n    // For Reg/Default and Remove, return a list of items in the folder\n    // For Add, return a list of all possible items\n    // For Swap and Tag, return 2 lists of items in the folder\n    // For Replace, return a list of items in the folder, and a list of all possible items.\n    // For Sort, return a list of the sort types for the game, and a checkbox to reverse the sort.\n    if (\n        (props.action.action === 'Reg' && props.id === 1) ||\n        (props.action.action === 'Default' && props.id === 1) ||\n        (props.action.action === 'Remove' && props.id === 1) ||\n        props.action.action === 'Swap' ||\n        (props.action.action === 'Replace' && props.id === 1) ||\n        props.action.action === 'Tag'\n    ) {\n        return (\n            <select\n                value={props.action['item' + props.id]}\n                className={`${styles.select} ${styles.itemDropdown}`}\n                onChange={(e) => {\n                    props.onUpdate(props.action.id, e.target.value);\n                }}>\n                <option value={-1}> </option>\n                {props.folder.map((item) => (\n                    <ItemOption\n                        key={item.slot}\n                        slot={item.slot}\n                        item={item.item}\n                        modifier={item.modifier}\n                        game={props.game}\n                    />\n                ))}\n            </select>\n        );\n    } else if (\n        (props.action.action === 'Add' && props.id === 1) ||\n        (props.action.action === 'Replace' && props.id === 2)\n    ) {\n        // Generate a list of all items with modifiers\n        const itemList = [];\n        for (let item of gameInfo.Items) {\n            if (gameInfo.modifiers) {\n                for (let modifier of item.modifiers) {\n                    itemList.push({\n                        id: item.id,\n                        name: item.name,\n                        modifier: modifier,\n                    });\n                }\n            } else {\n                itemList.push({\n                    id: item.id,\n                    name: item.name,\n                });\n            }\n        }\n        return (\n            <select\n                value={\n                    props.action['item' + props.id] +\n                    (gameInfo.modifiers\n                        ? '-' + props.action['modifier' + props.id]\n                        : '')\n                }\n                className={`${styles.select} ${styles.itemDropdown}`}\n                onChange={(e) => {\n                    props.onUpdate(props.action.id, e.target.value);\n                }}>\n                <option value={-1}> </option>\n                {itemList.map((item) => (\n                    <option\n                        value={\n                            item.id +\n                            (gameInfo.modifiers ? '-' + item.modifier : '')\n                        }\n                        key={\n                            item.id + (gameInfo.modifiers ? item.modifier : '')\n                        }>\n                        {item.name} {item.modifier}\n                    </option>\n                ))}\n            </select>\n        );\n    } else if (props.action.action === 'Sort' && props.id === 1) {\n        return (\n            <select\n                value={props.action.item1 + (props.action.item2 ? '-r' : '')}\n                className={`${styles.select} ${styles.itemDropdown}`}\n                onChange={(e) => {\n                    props.onUpdate(props.action.id, e.target.value);\n                }}>\n                <option value={''}> </option>\n                {gameInfo.sortTypes.map((sortType) => (\n                    <option value={sortType}>{sortType}</option>\n                ))}\n                {gameInfo.sortTypes.map((sortType) => (\n                    <option value={sortType + '-r'}>R. {sortType}</option>\n                ))}\n            </select>\n        );\n    }\n    return null;\n}\n\nfunction Action(props) {\n    const gameInfo = useContext(GameContext);\n\n    // For formatting purposes, add an extra spacer div between the 2 dropdowns for actions that require both.\n    let spacer;\n    if (\n        props.action.action === 'Replace' ||\n        props.action.action === 'Swap' ||\n        props.action.action === 'Tag'\n    ) {\n        spacer = <div className={`${styles.spacer}`} />;\n    }\n\n    return (\n        <div className={`${styles.wrapper}`}>\n            <select\n                value={props.action.action}\n                className={`${styles.select}`}\n                onChange={(e) => {\n                    props.updateAction(props.action.id, e.target.value);\n                }}>\n                <option value=\"\"> </option>\n                {gameInfo.actionTypes.map((action) => (\n                    <option key={action} value={action}>\n                        {action}\n                    </option>\n                ))}\n            </select>\n            <ItemDropdown\n                action={props.action}\n                id={1}\n                folder={props.folder}\n                onUpdate={props.updateItem1}\n            />\n            <Icon\n                src=\"/icons/delete.png\"\n                id={'deleteAction-' + props.action.id}\n                size=\"small\"\n                altText=\"X\"\n                hover={true}\n                grayscale={true}\n                onClick={() => {\n                    props.deleteAction(props.action.id);\n                }}\n            />\n            {spacer}\n            <ItemDropdown\n                action={props.action}\n                id={2}\n                folder={props.folder}\n                onUpdate={props.updateItem2}\n            />\n        </div>\n    );\n}\n\nfunction ActionsList(props) {\n    const gameInfo = useContext(GameContext);\n    // JSON stringify, then JSON parse to make a deep copy.\n    let tempFolder = JSON.parse(JSON.stringify(props.folderEdit.prevFolder));\n    const actionsList = [];\n\n    for (const action of props.folderEdit.value) {\n        actionsList.push(\n            <Action\n                key={action.id}\n                action={action}\n                folder={tempFolder}\n                updateAction={props.updateAction}\n                updateItem1={props.updateItem1}\n                updateItem2={props.updateItem2}\n                deleteAction={props.deleteAction}\n            />,\n        );\n\n        tempFolder = performFolderEditAction(tempFolder, action, gameInfo);\n    }\n\n    return <div className={styles.wrapper}>{actionsList}</div>;\n}\n\nfunction SectionFolderEdit(props) {\n    const gameInfo = useContext(GameContext);\n\n    const addAction = () => {\n        // JSON stringify, then JSON parse to make a deep copy.\n        let newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\n\n        newFolderEdit.value.push({\n            id: newFolderEdit.value.length,\n            action: '',\n            item1: -1,\n            modifier1: '',\n            item2: -1,\n            modifier2: '',\n        });\n        newFolderEdit.shown = true;\n\n        props.updateFolderEdit(newFolderEdit);\n    };\n\n    const updateAction = (id, action) => {\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\n\n        newFolderEdit.value[id].action = action;\n        // Reset items when a new action is selected.\n        newFolderEdit.value[id].item1 = -1;\n        newFolderEdit.value[id].modifier1 = null;\n        // For sorts, update item2 to be false to indicate it won't be a reverse sort\n        if (action === 'Sort') {\n            newFolderEdit.value[id].item2 = false;\n        } else {\n            newFolderEdit.value[id].item2 = -1;\n            newFolderEdit.value[id].modifier2 = null;\n        }\n\n        newFolderEdit.folder = getNewFolder(\n            newFolderEdit,\n            props.folderEdit.prevFolder,\n            gameInfo,\n        );\n\n        props.updateFolderEdit(newFolderEdit);\n    };\n\n    const updateItem1 = (id, item) => {\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\n        // For the Add action, the value will be a combination of the item's ID and modifier\n        if (newFolderEdit.value[id].action === 'Add') {\n            if (gameInfo.modifiers) {\n                const itemParts = item.split('-');\n                newFolderEdit.value[id].item1 = itemParts[0];\n                newFolderEdit.value[id].modifier1 = itemParts[1];\n            } else {\n                newFolderEdit.value[id].item1 = item;\n            }\n        } else if (newFolderEdit.value[id].action === 'Sort') {\n            if (item.includes('-')) {\n                const itemParts = item.split('-');\n                newFolderEdit.value[id].item1 = itemParts[0];\n                newFolderEdit.value[id].item2 = true;\n            } else {\n                newFolderEdit.value[id].item1 = item;\n                newFolderEdit.value[id].item2 = false;\n            }\n        } else {\n            newFolderEdit.value[id].item1 = item;\n        }\n\n        newFolderEdit.folder = getNewFolder(\n            newFolderEdit,\n            props.folderEdit.prevFolder,\n            gameInfo,\n        );\n\n        props.updateFolderEdit(newFolderEdit);\n    };\n\n    const updateItem2 = (id, item) => {\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\n        // For the Replace action, the value will be a combination of the item's ID and modifier\n        if (newFolderEdit.value[id].action === 'Replace') {\n            if (gameInfo.modifiers) {\n                const itemParts = item.split('-');\n                newFolderEdit.value[id].item2 = itemParts[0];\n                newFolderEdit.value[id].modifier2 = itemParts[1];\n            } else {\n                newFolderEdit.value[id].item2 = item;\n            }\n        } else {\n            newFolderEdit.value[id].item2 = item;\n        }\n\n        newFolderEdit.folder = getNewFolder(\n            newFolderEdit,\n            props.folderEdit.prevFolder,\n            gameInfo,\n        );\n\n        props.updateFolderEdit(newFolderEdit);\n    };\n\n    const deleteAction = (id) => {\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\n        newFolderEdit.value.splice(id, 1);\n\n        newFolderEdit.folder = getNewFolder(\n            newFolderEdit,\n            props.folderEdit.prevFolder,\n            gameInfo,\n        );\n\n        props.updateFolderEdit(newFolderEdit);\n    };\n\n    if (props.folderEdit != null) {\n        return (\n            <div className={styles.wrapper}>\n                <ActionsList\n                    folderEdit={props.folderEdit}\n                    updateAction={updateAction}\n                    updateItem1={updateItem1}\n                    updateItem2={updateItem2}\n                    deleteAction={deleteAction}\n                />\n                <Button text=\"Add Action\" size=\"medium\" onClick={addAction} />\n                <Button\n                    text=\"Delete Folder Edit\"\n                    size=\"medium\"\n                    onClick={props.deleteFolderEdit}\n                />\n            </div>\n        );\n    }\n    return (\n        <Button\n            text=\"Add Folder Edit\"\n            size=\"medium\"\n            onClick={props.addFolderEdit}\n        />\n    );\n}\n\nexport default SectionFolderEdit;\n","/** @format */\n\nimport { useCallback, useContext } from 'react';\nimport styles from './styles/Section.Module.css';\nimport GameContext from '../../../common/GameContext';\nimport Button from '../../../common/Button';\nimport Icon from '../../../common/Icon';\nimport SectionText from './SectionText';\nimport SectionItem from './SectionItem';\nimport SectionImage from './SectionImage';\nimport SectionState from './SectionState';\nimport SectionFolderEdit from './SectionFolderEdit';\n\nfunction Section(props) {\n    const gameInfo = useContext(GameContext);\n\n    const updateText = useCallback(\n        (text, id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.text[id] = text;\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const addText = useCallback(\n        (e) => {\n            // Stringify then parse JSON to create deep copy.\n            e.preventDefault();\n\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.text.push({\n                id: newSection.text.length,\n                text: '',\n            });\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const moveTextUp = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            let chosenText = newSection.text[id];\n            chosenText.id = id - 1;\n            let aboveText = newSection.text[id - 1];\n            aboveText.id = id;\n\n            newSection.text[id] = aboveText;\n            newSection.text[id - 1] = chosenText;\n\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const moveTextDown = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            let chosenText = newSection.text[id];\n            chosenText.id = id + 1;\n            let belowText = newSection.text[id + 1];\n            belowText.id = id;\n\n            newSection.text[id] = belowText;\n            newSection.text[id + 1] = chosenText;\n\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const deleteText = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            for (let i = id + 1; i < newSection.text.length; i++) {\n                newSection.text[i].id--;\n            }\n\n            newSection.text.splice(id, 1);\n\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const updateItem = useCallback(\n        (item, id) => {\n            // Stringify then parse JSON to create deep copy.\n            const newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.items[id] = item;\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const addItem = useCallback(() => {\n        // Stringify then parse JSON to create deep copy.\n        let newSection = JSON.parse(JSON.stringify(props.section));\n        newSection.items.push({\n            id: newSection.items.length,\n            value: 0,\n        });\n        props.setSection(newSection, props.section.id);\n    }, [props]);\n\n    const moveItemUp = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            let chosenItem = newSection.items[id];\n            chosenItem.id = id - 1;\n            let aboveItem = newSection.items[id - 1];\n            aboveItem.id = id;\n\n            newSection.items[id] = aboveItem;\n            newSection.items[id - 1] = chosenItem;\n\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const moveItemDown = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            let chosenItem = newSection.items[id];\n            chosenItem.id = id + 1;\n            let belowItem = newSection.items[id + 1];\n            belowItem.id = id;\n\n            newSection.items[id] = belowItem;\n            newSection.items[id + 1] = chosenItem;\n\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const deleteItem = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n\n            for (let i = id + 1; i < newSection.items.length; i++) {\n                newSection.items[i].id--;\n            }\n\n            newSection.items.splice(id, 1);\n\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const updateImage = useCallback(\n        (image) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.image = image;\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const deleteImage = useCallback(() => {\n        // Stringify then parse JSON to create deep copy.\n        let newSection = JSON.parse(JSON.stringify(props.section));\n        newSection.image = null;\n        props.setSection(newSection, props.section.id);\n    }, [props]);\n\n    const updateState = useCallback(\n        (state) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.state = state;\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const addState = useCallback(\n        (e) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.state = props.getLastState(props.section.id);\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const deleteState = useCallback(() => {\n        // Stringify then parse JSON to create deep copy.\n        let newSection = JSON.parse(JSON.stringify(props.section));\n        newSection.state = null;\n        props.setSection(newSection, props.section.id);\n    }, [props]);\n\n    const updateFolderEdit = (folderEdit) => {\n        // JSON stringify, then JSON parse to make a deep copy.\n        let newSection = JSON.parse(JSON.stringify(props.section));\n        newSection.folderEdit = folderEdit;\n        props.setSection(newSection, props.section.id);\n    };\n\n    const addFolderEdit = useCallback(\n        (e) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.folderEdit = props.getLastFolderEdit(props.section.id);\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    const deleteFolderEdit = useCallback(\n        (e) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSection = JSON.parse(JSON.stringify(props.section));\n            newSection.folderEdit = null;\n            props.setSection(newSection, props.section.id);\n        },\n        [props],\n    );\n\n    return (\n        <div id={'section-' + props.section.id} className={`${styles.section}`}>\n            <div className={`${styles.sectionHeader}`}>\n                <h3 className={`${styles.header}`}>\n                    Section {props.section.id + 1}\n                </h3>\n                <Icon\n                    src=\"/icons/up.png\"\n                    id={'moveSectionUp-' + props.section.id}\n                    size=\"small\"\n                    altText=\"Up\"\n                    hover={true}\n                    hidden={props.section.id === 0}\n                    onClick={() => {\n                        props.moveSectionUp(props.section.id);\n                    }}\n                />\n                <Icon\n                    src=\"/icons/down.png\"\n                    id={'moveSectionDown-' + props.section.id}\n                    size=\"small\"\n                    altText=\"Down\"\n                    hover={true}\n                    hidden={props.section.id === props.max}\n                    onClick={() => {\n                        props.moveSectionDown(props.section.id);\n                    }}\n                />\n                <Icon\n                    src=\"/icons/delete.png\"\n                    id={'deleteSection-' + props.section.id}\n                    size=\"small\"\n                    altText=\"X\"\n                    hover={true}\n                    grayscale={true}\n                    onClick={() => {\n                        props.deleteSection(props.section.id);\n                    }}\n                />\n            </div>\n            <div className={`${styles.wrapper}`}>\n                <div className={`${styles.textContainer}`}>\n                    <h4>Text</h4>\n                    {props.section.text.map((text) => (\n                        <SectionText\n                            key={'text-' + text.id}\n                            sectionId={props.section.id}\n                            text={text}\n                            max={props.section.text.length - 1}\n                            updateText={updateText}\n                            moveTextUp={moveTextUp}\n                            moveTextDown={moveTextDown}\n                            deleteText={deleteText}\n                        />\n                    ))}\n                    <Button text=\"Add Text\" size=\"medium\" onClick={addText} />\n                </div>\n                <div className={`${styles.itemsContainer}`}>\n                    <h4>{gameInfo.name}s</h4>\n                    {props.section.items.map((item) => (\n                        <SectionItem\n                            key={'item-' + item.id}\n                            item={item}\n                            max={props.section.items.length - 1}\n                            updateItem={updateItem}\n                            moveItemUp={moveItemUp}\n                            moveItemDown={moveItemDown}\n                            deleteItem={deleteItem}\n                        />\n                    ))}\n                    <Button\n                        text={'Add ' + gameInfo.name}\n                        size=\"medium\"\n                        onClick={addItem}\n                    />\n                </div>\n            </div>\n            <div className={`${styles.wrapper}`}>\n                <div className={`${styles.imageContainer}`}>\n                    <h4>Image</h4>\n                    <SectionImage\n                        image={props.section.image}\n                        updateImage={updateImage}\n                        deleteImage={deleteImage}\n                    />\n                </div>\n                <div className={`${styles.stateContainer}`}>\n                    <h4>State</h4>\n                    <SectionState\n                        state={props.section.state}\n                        updateState={updateState}\n                        deleteState={deleteState}\n                        addState={addState}\n                    />\n                </div>\n                <div className={`${styles.folderEditContainer}`}>\n                    <h4>Folder Edit</h4>\n                    <SectionFolderEdit\n                        folderEdit={props.section.folderEdit}\n                        updateFolderEdit={updateFolderEdit}\n                        deleteFolderEdit={deleteFolderEdit}\n                        addFolderEdit={addFolderEdit}\n                    />\n                </div>\n            </div>\n            <Button\n                text=\"Add Section\"\n                id={'addSection-' + (props.section.id + 1)}\n                size=\"medium\"\n                onClick={() => {\n                    props.addSection(props.section.id + 1);\n                }}\n            />\n        </div>\n    );\n}\n\nexport default Section;\n","/** @format */\n\nimport { useState, useEffect, useCallback, useContext } from 'react';\nimport RouteContext from '../../common/RouteContext';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Section from './Section/Section';\n\nimport styles from './styles/SectionList.Module.css';\n\nfunction SectionList(props) {\n    const { route, numSections, setContext } = useContext(RouteContext);\n\n    const [displayedSections, setDisplayedSections] = useState(\n        route.sections.slice(0, numSections),\n    );\n    const addMoreSections = () => {\n        setDisplayedSections(\n            route.sections.slice(\n                0,\n                Math.min(numSections + 10, route.sections.length),\n            ),\n        );\n        setContext({\n            numSections: Math.min(numSections + 10, route.sections.length),\n        });\n    };\n\n    useEffect(() => {\n        setDisplayedSections(route.sections.slice(0, numSections));\n    }, [route.sections, numSections]);\n\n    const setSection = (section, id) => {\n        const newSections = [...route.sections];\n        newSections[id] = section;\n        setContext({ route: { ...route, sections: newSections } });\n    };\n\n    const addSection = useCallback(\n        (id) => {\n            let newSections = [...route.sections];\n            let newSection = {\n                id: id,\n                text: [],\n                items: [],\n            };\n\n            newSections.splice(id, 0, newSection);\n\n            for (let i = id + 1; i < newSections.length; i++) {\n                newSections[i].id++;\n            }\n\n            setContext({ route: { ...route, sections: newSections } });\n            setContext({ numSections: numSections + 1 });\n        },\n        [route, setContext, numSections],\n    );\n\n    const moveSectionUp = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSections = JSON.parse(JSON.stringify(route.sections));\n\n            let chosenSection = newSections[id];\n            chosenSection.id = id - 1;\n            let aboveSection = newSections[id - 1];\n            aboveSection.id = id;\n\n            newSections[id] = aboveSection;\n            newSections[id - 1] = chosenSection;\n\n            setContext({ route: { ...route, sections: newSections } });\n        },\n        [route, setContext],\n    );\n\n    const moveSectionDown = useCallback(\n        (id) => {\n            // Stringify then parse JSON to create deep copy.\n            let newSections = JSON.parse(JSON.stringify(route.sections));\n\n            let chosenSection = newSections[id];\n            chosenSection.id = id + 1;\n            let belowSection = newSections[id + 1];\n            belowSection.id = id;\n\n            newSections[id] = belowSection;\n            newSections[id + 1] = chosenSection;\n\n            setContext({ route: { ...route, sections: newSections } });\n        },\n        [route, setContext],\n    );\n\n    const deleteSection = useCallback(\n        (id) => {\n            // JSON stringify, then JSON parse to make a deep copy.\n            let newSections = JSON.parse(JSON.stringify(route.sections));\n\n            for (let i = id + 1; i < newSections.length; i++) {\n                newSections[i].id--;\n            }\n\n            newSections.splice(id, 1);\n\n            setContext({ route: { ...route, sections: newSections } });\n        },\n        [route, setContext],\n    );\n\n    const getLastState = (id) => {\n        // Check previous sections for the last state value\n        let state = null;\n        for (let i = id - 1; i >= 0; i--) {\n            if (route.sections[i].state != null) {\n                state = JSON.parse(JSON.stringify(route.sections[i].state));\n                break;\n            }\n        }\n\n        // If no state was found, use initialState\n        if (state == null) {\n            state = JSON.parse(JSON.stringify(route.initialState));\n        }\n\n        return state;\n    };\n\n    const getLastFolderEdit = (id) => {\n        // Check previous sections for the last folder edit value\n        let folderEdit = null;\n        for (let i = id - 1; i >= 0; i--) {\n            if (route.sections[i].folderEdit != null) {\n                folderEdit = JSON.parse(\n                    JSON.stringify(route.sections[i].folderEdit),\n                );\n                break;\n            }\n        }\n\n        // If no state was found, use initialState\n        if (folderEdit == null) {\n            folderEdit = JSON.parse(JSON.stringify(route.initialFolderEdit));\n        }\n\n        // Setup the previous folder to be the same as the starting folder, and clear the folder edit.\n        folderEdit.prevFolder = folderEdit.folder;\n        folderEdit.value = [\n            {\n                id: 0,\n                action: '',\n                item1: -1,\n                modifier1: '',\n                item2: -1,\n                modifier2: '',\n            },\n        ];\n\n        return folderEdit;\n    };\n\n    return (\n        <div id=\"scrollableDiv\" className={`${styles.sectionList}`}>\n            <InfiniteScroll\n                dataLength={displayedSections}\n                next={addMoreSections}\n                hasMore={route.sections.length > displayedSections.length}\n                loader={'Loading...'}\n                scrollableTarget={'scrollableDiv'}>\n                {displayedSections.map((section) => (\n                    <Section\n                        key={'section-' + section.id}\n                        section={section}\n                        setSection={setSection}\n                        max={route.sections.length - 1}\n                        moveSectionUp={moveSectionUp}\n                        moveSectionDown={moveSectionDown}\n                        addSection={addSection}\n                        deleteSection={deleteSection}\n                        getLastState={getLastState}\n                        getLastFolderEdit={getLastFolderEdit}\n                    />\n                ))}\n                <div className=\"bottom-buffer\"> </div>\n            </InfiniteScroll>\n        </div>\n    );\n}\n\nexport default SectionList;\n","/** @format */\n\nimport { useCallback, useContext } from 'react';\nimport { Buffer } from 'buffer';\nimport styles from './styles/RouteInfo.Module.css';\nimport RouteContext from '../../common/RouteContext';\nimport Button from '../../common/Button';\n\nfunction RouteInfo(props) {\n    const { route, preview, setContext } = useContext(RouteContext);\n\n    const games = require('../../../resources/gamesList.json');\n    const routes = require('../../../notes/routes.json');\n\n    const generateDownload = useCallback(\n        (e) => {\n            e.preventDefault();\n\n            console.log(route);\n\n            let a = document.createElement('a');\n            a.href =\n                'data:text/json;base64;charset=utf-8,' +\n                Buffer.from(JSON.stringify(route)).toString('base64');\n            a.download = route.path + '.json';\n            a.click();\n        },\n        [route],\n    );\n\n    const importText = (text) => {\n        text = text.replace(/(\\r\\n|\\n|\\r)/gm, '\\n');\n        const lines = text.split('\\n');\n        let newSections = [];\n\n        let sectionId = 0;\n\n        for (let i = 0; i < lines.length; i++) {\n            let line = lines[i];\n            const section = {\n                id: sectionId,\n                text: [],\n                items: [],\n            };\n\n            let textId = 0;\n            while (line !== '') {\n                const text = {\n                    id: textId,\n                    text: line,\n                };\n\n                section.text.push(text);\n                i++;\n                textId++;\n\n                if (i < lines.length) {\n                    line = lines[i];\n                } else {\n                    line = '';\n                }\n            }\n\n            newSections.push(section);\n            sectionId++;\n        }\n\n        setContext({\n            route: { ...route, sections: newSections },\n            numSections: Math.min(10, newSections.length),\n        });\n    };\n\n    const importJSON = (file) => {\n        const route = JSON.parse(file);\n        const gameInfo = require('../../../resources/' +\n            route.game +\n            '/ItemNames.json');\n        setContext({\n            route: route,\n            numSections: Math.min(10, route.sections.length),\n            gameInfo: gameInfo,\n        });\n    };\n\n    const handleUpload = (file, callback) => {\n        let reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = function () {\n            callback(reader.result);\n        };\n        reader.onerror = function (error) {\n            console.log('Error: ', error);\n        };\n    };\n\n    const updateGame = useCallback(\n        (newGame) => {\n            let gameInfo = require('../../../resources/ItemNames.json');\n            if (newGame !== '' && newGame != null) {\n                gameInfo = require('../../../resources/' +\n                    newGame +\n                    '/ItemNames.json');\n            }\n\n            setContext({\n                route: {\n                    ...route,\n                    game: newGame,\n                },\n                gameInfo: gameInfo,\n            });\n        },\n        [route, setContext],\n    );\n\n    return (\n        <div className={`${styles.routeInfo}`}>\n            <h2 className={`${styles.header}`}>Update your Route</h2>\n\n            <label htmlFor=\"title\" className={`${styles.label}`}>\n                Route Name\n            </label>\n            <input\n                type=\"text\"\n                name=\"title\"\n                className={`${styles.textInput}`}\n                defaultValue={route.title}\n                onBlur={(e) =>\n                    setContext({ route: { ...route, title: e.target.value } })\n                }\n            />\n\n            <label htmlFor=\"path\" className={`${styles.label}`}>\n                Path\n            </label>\n            <input\n                type=\"text\"\n                name=\"path\"\n                className={`${styles.textInput}`}\n                defaultValue={route.path}\n                onBlur={(e) =>\n                    setContext({ route: { ...route, path: e.target.value } })\n                }\n            />\n\n            <label htmlFor=\"game\" className={`${styles.label}`}>\n                Game\n            </label>\n            <select\n                name=\"game\"\n                className={`${styles.select}`}\n                value={route.game}\n                onChange={(e) => updateGame(e.target.value)}>\n                <option value=\"\"> </option>\n                {games.map((game) => (\n                    <option key={game} value={game}>\n                        {routes[game].name}\n                    </option>\n                ))}\n            </select>\n\n            <label htmlFor=\"textImport\" className={`${styles.label}`}>\n                Import Text\n            </label>\n            <input\n                type=\"file\"\n                name={'textImport'}\n                className={`${styles.fileInput}`}\n                onChange={(e) => handleUpload(e.target.files[0], importText)}\n            />\n            <label htmlFor=\"jsonImport\" className={`${styles.label}`}>\n                Import JSON\n            </label>\n            <input\n                type=\"file\"\n                name={'jsonImport'}\n                className={`${styles.fileInput}`}\n                onChange={(e) => handleUpload(e.target.files[0], importJSON)}\n            />\n\n            <div className={`${styles.wrapper}`}>\n                <Button\n                    text=\"Load Last Edit\"\n                    size=\"medium\"\n                    className={`${styles.btn}`}\n                    onClick={props.loadLastRouteEdit}\n                />\n                <Button\n                    text=\"Save JSON File\"\n                    size=\"medium\"\n                    className={`${styles.btn}`}\n                    onClick={generateDownload}\n                />\n                <Button\n                    text=\"Preview\"\n                    size=\"medium\"\n                    className={`${styles.btn}`}\n                    onClick={() => setContext({ preview: !preview })}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default RouteInfo;\n","/** @format */\n\nimport { useState, useCallback, useMemo, Suspense } from 'react';\nimport styles from './styles/RouteForm.Module.css';\nimport Route from '../route/Route';\nimport SectionList from './SectionList';\nimport RouteInfo from './RouteInfo';\nimport useSuspenseResource from '../../common/functions/useSuspense';\nimport RouteContext from '../../common/RouteContext';\nimport GameContext from '../../common/GameContext';\n\nconst equal = require('deep-equal');\n\nfunction RouteForm(props) {\n    const path = props.match.params.path;\n\n    const notesResource = useSuspenseResource(async () => {\n        const response = await fetch(\n            `${process.env.PUBLIC_URL}/notes/${path}.json`,\n        );\n\n        return await response.json();\n    }, [path]);\n\n    return (\n        <Suspense fallback=\"Loading...\">\n            <RouteFormImpl {...props} notesResource={notesResource} />\n        </Suspense>\n    );\n}\n\nconst getInitialState = (path, game, route) => {\n    // If no game is specified, try setting the game based on the initial route object.\n    if (game == null) {\n        game = route.game;\n    }\n\n    let gameInfo = require('../../../resources/ItemNames.json');\n    if (game !== '' && game != null) {\n        gameInfo = require('../../../resources/' + game + '/ItemNames.json');\n    }\n\n    return {\n        route: {\n            title: path != null ? route.title : '',\n            path: path,\n            game: path != null ? route.game : game,\n            version: path != null ? route.version : '1.0',\n            initialState: game != null ? gameInfo.initialState : {},\n            initialFolderEdit: game != null ? gameInfo.initialFolderEdit : {},\n            sections:\n                path != null\n                    ? route.sections\n                    : [\n                          {\n                              id: 0,\n                              text: [],\n                              items: [],\n                          },\n                      ],\n        },\n        gameInfo: gameInfo,\n        preview: false,\n        numSections: path != null ? Math.min(10, route.sections.length) : 1,\n    };\n};\n\nfunction RouteFormImpl(props) {\n    let initialPath = props.match.params.path;\n    let initialGame = props.match.params.gameId;\n    let initialRoute = {};\n    if (initialPath != null) {\n        initialRoute = props.notesResource.read();\n    }\n\n    const [state, setState] = useState(\n        getInitialState(initialPath, initialGame, initialRoute),\n    );\n    const gameContext = useMemo(() => {\n        return state.gameInfo;\n    }, [state.gameInfo]);\n\n    const setContext = useCallback(\n        (updates) => {\n            setState({ ...state, ...updates });\n        },\n        [state, setState],\n    );\n\n    const getContextValue = useCallback(\n        () => ({\n            ...state,\n            setContext,\n        }),\n        [state, setContext],\n    );\n\n    const setNewRoute = (newRoute) => {\n        newRoute.preview = false;\n        newRoute.numSections = Math.min(10, newRoute.sections.length);\n\n        // If initial state is different, the state variables need to be updated\n        if (!equal(newRoute.initialState, state.gameInfo.initialState)) {\n            newRoute.initialState = state.gameInfo.initialState;\n\n            // TODO: Update state variables in each section to add new keys.\n        }\n\n        setState({ ...state, route: newRoute });\n    };\n\n    const loadLastRouteEdit = (e) => {\n        e.preventDefault();\n\n        let newRoute = JSON.parse(localStorage.getItem('lastRouteEdit'));\n\n        if (newRoute != null) {\n            setNewRoute(newRoute);\n        } else {\n            alert(\n                'Error: No route found in local storage. Either there is nothing to load, or your route may have been too large. When your route gets large, try downloading the JSON file periodically to save your progress.',\n            );\n        }\n    };\n\n    const swapPreview = () => {\n        setState((prevState) => ({\n            ...state,\n            preview: !prevState.preview,\n        }));\n    };\n\n    if (state.preview) {\n        return (\n            <div>\n                <RouteContext.Provider value={getContextValue()}>\n                    <Route swapPreview={swapPreview} />\n                </RouteContext.Provider>\n            </div>\n        );\n    } else {\n        return (\n            <form className={`${styles.wrapper} ${styles.form}`}>\n                <RouteContext.Provider value={getContextValue()}>\n                    <GameContext.Provider value={gameContext}>\n                        <RouteInfo\n                            loadLastRouteEdit={loadLastRouteEdit}\n                            swapPreview={swapPreview}\n                        />\n\n                        <SectionList sections={state.route.sections} />\n                    </GameContext.Provider>\n                </RouteContext.Provider>\n            </form>\n        );\n    }\n}\n\nexport default RouteForm;\n","/** @format */\n\nimport React from 'react';\nimport styles from './styles/NotesHome.Module.css';\nimport { Link } from 'react-router-dom';\nimport Button from '../common/Button';\n\nlet games = require('../../resources/gamesList.json');\nlet routes = require('../../notes/routes.json');\n\nclass NotesHome extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createRoute = this.createRoute.bind(this);\n    }\n\n    createRoute() {\n        this.props.history.push('/notes/createRoute');\n    }\n\n    render() {\n        return (\n            <div className=\"page\">\n                <div className={'card ' + styles.wrapper}>\n                    <h1>Games</h1>\n                    <div className={`${styles.wrapper}`}>\n                        {games.map((gameId) => (\n                            <div\n                                className=\"col-2 col-t-3 col-m-6\"\n                                key={'routesList' + gameId}>\n                                <Link\n                                    to={'/notes/game/' + gameId}\n                                    className={`${styles.link}`}>\n                                    <img\n                                        className={`${styles.img}`}\n                                        src={'/gameArt/' + gameId + '.png'}\n                                        alt={gameId + '.png'}\n                                    />\n                                    <h4 className=\"gameLink\">\n                                        {routes[gameId].name}\n                                    </h4>\n                                </Link>\n                            </div>\n                        ))}\n                    </div>\n                    <Button\n                        text=\"Create New Route\"\n                        size=\"medium\"\n                        onClick={this.createRoute}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NotesHome;\n","/** @format */\n\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Switch } from 'react-router-dom';\nimport { Route as BrowserRoute } from 'react-router-dom';\n\nimport RoutesList from './RoutesList';\nimport Route from './route/Route';\nimport RouteForm from './routeForm/RouteForm';\nimport NotesHome from './NotesHome';\n\nclass NotesTool extends React.Component {\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <BrowserRoute\n                        path={'/notes/game/:gameId/route/:routePath'}\n                        component={Route}\n                    />\n                    <BrowserRoute\n                        path={'/notes/game/:gameId'}\n                        component={RoutesList}\n                    />\n                    <BrowserRoute\n                        path={'/notes/editRoute/:path'}\n                        component={RouteForm}\n                    />\n                    <BrowserRoute\n                        path={'/notes/createRoute/:gameId'}\n                        component={RouteForm}\n                    />\n                    <BrowserRoute\n                        path={'/notes/createRoute'}\n                        component={RouteForm}\n                    />\n                    <BrowserRoute path={'/notes'} component={NotesHome} />\n                </Switch>\n            </HashRouter>\n        );\n    }\n}\n\nexport default NotesTool;\n","/** @format */\n\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Switch } from 'react-router-dom';\nimport { Route as BrowserRoute } from 'react-router-dom';\nimport NotesTool from './notes/NotesTool';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <BrowserRoute path=\"/notes\" component={NotesTool} />\n                </Switch>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/main.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}