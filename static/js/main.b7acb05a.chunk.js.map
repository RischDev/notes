{"version":3,"sources":["components/notes/routeForm/styles/RouteInfo.Module.css","components/notes/route/notes/styles/FolderEdit.Module.css","components/notes/routeForm/Section/styles/SectionFolderEdit.Module.css","components/notes/routeForm/Section/styles/Section.Module.css","components/notes/route/styles/Menu.Module.css","resources sync /^/.*/ItemNames/.json$","components/notes/styles/RoutesListItem.Module.css","components/common/styles/Icon.Module.css","components/notes/route/notes/styles/NoteSection.Module.css","components/notes/route/notes/styles/State.Module.css","components/notes/route/notes/styles/SmallItem.Module.css","components/notes/route/tracker/styles/Tracker.Module.css","components/notes/routeForm/Section/styles/SectionState.Module.css","components/notes/styles/RoutesList.Module.css","components/notes/route/notes/styles/SmallModifiers.Module.css","components/notes/route/tracker/styles/Modifiers.Module.css","components/notes/route/tracker/styles/Item.Module.css","components/notes/styles/NotesHome.Module.css","components/notes/route/notes/styles/Text.Module.css","components/notes/route/notes/styles/Notes.Module.css","components/notes/routeForm/Section/styles/ItemDropdown.Module.css","components/notes/routeForm/Section/styles/ModifierDropdown.Module.css","components/common/styles/Button.Module.css","components/notes/route/styles/Route.Module.css","components/notes/route/notes/styles/ItemsList.Module.css","components/notes/route/notes/styles/Image.Module.css","components/notes/route/styles/LargeImage.Module.css","components/notes/routeForm/styles/RouteForm.Module.css","components/notes/routeForm/Section/styles/SectionText.Module.css","resources sync /^/.*/DefaultFoundItems/.json$","resources sync /^/.*/DefaultFoundModifiers/.json$","components/notes/route/notes/styles/themes/MMBN/MMBN-SmallItem.Module.css","components/notes/route/notes/styles/themes/MMSF/MMSF-SmallItem.Module.css","components/notes/route/notes/styles/themes/MMBN/MMBN-SmallModifiers.Module.css","components/notes/route/tracker/styles/themes/MMBN/MMBN-Modifiers.Module.css","components/notes/route/tracker/styles/themes/MMBN/MMBN-Item.Module.css","components/notes/route/tracker/styles/themes/MMSF/MMSF-Item.Module.css","components/notes/routeForm/Section/styles/SectionItem.Module.css","components/notes/routeForm/Section/styles/PreviewImage.Module.css","components/notes/routeForm/Section/styles/SectionImage.Module.css","components/notes/routeForm/styles/SectionList.Module.css","reportWebVitals.js","components/common/Icon.js","components/common/functions/useSuspense.js","components/notes/RoutesListItem.js","components/common/Button.js","components/notes/RoutesList.js","components/common/functions/useMatchMedia.js","components/common/NotesContext.js","components/notes/route/Menu.js","components/notes/route/notes/Text.js","components/notes/route/notes/SmallModifiers.js","components/notes/route/notes/SmallItem.js","components/notes/route/notes/ItemsList.js","components/notes/route/notes/Image.js","components/notes/route/notes/State.js","components/common/functions/performFolderEditAction.js","components/common/functions/performFolderEditSort.js","components/common/functions/getPathsToSlot.js","components/common/functions/getFolderEditInputs.js","components/notes/route/notes/FolderEdit.js","components/notes/route/notes/NoteSection.js","components/notes/route/notes/Notes.js","components/notes/route/tracker/Modifiers.js","components/notes/route/tracker/Item.js","components/notes/route/tracker/Tracker.js","components/notes/route/LargeImage.js","components/common/RouteContext.js","components/notes/route/Route.js","components/common/GameContext.js","components/notes/routeForm/Section/ItemDropdown.js","components/notes/routeForm/Section/ModifierDropdown.js","components/notes/routeForm/Section/SectionText.js","components/notes/routeForm/Section/SectionItem.js","components/notes/routeForm/Section/PreviewImage.js","components/notes/routeForm/Section/SectionImage.js","components/notes/routeForm/Section/SectionState.js","components/common/functions/getNewFolder.js","components/notes/routeForm/Section/SectionFolderEdit.js","components/notes/routeForm/Section/Section.js","components/notes/routeForm/SectionList.js","components/notes/routeForm/RouteInfo.js","components/notes/routeForm/RouteForm.js","components/notes/NotesHome.js","components/notes/NotesTool.js","components/App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Icon","hoverClass","this","props","hover","styles","hiddenClass","hidden","floatClass","float","right","grayscaleClass","grayscale","src","className","icon","size","onClick","alt","altText","React","Component","useSuspenseResource","promiseCallback","deps","useMemo","promise","result","status","suspender","r","read","createSuspenseResource","RoutesListItemImpl","notes","notesResource","wrapper","to","gameId","path","link","title","category","author","version","RoutesListItem","a","fetch","process","response","json","fallback","Button","btn","type","text","routes","require","RoutesList","match","params","gameRoutes","history","push","state","gameName","name","createRoute","bind","gameArt","header","route","useMatchMedia","query","useState","window","matchMedia","matches","setMatches","useEffect","mediaQueryList","callback","addListener","removeListener","NotesContext","createContext","Menu","useContext","game","showNotes","showTracker","mode","foundModifiers","folderEditView","setContext","changeMode","useCallback","resetTracker","newFoundItems","JSON","parse","stringify","newFoundModifiers","foundItems","localStorage","setItem","updateNotesDisplay","updateTrackerDisplay","swapNotesAndTracker","modeText","previewButton","preview","swapPreview","notesText","menu","showNotesText","showTrackerText","col","label","value","select","onChange","target","Text","item","includes","modifier","found","Modifier","foundClass","updateFound","SmallModifiers","theme","themeMMBN","updateTracker","modifiers","length","SmallItem","themeMMSF","Items","typeClass","i","types","low","high","itemArt","ItemsList","itemsList","completedItems","items","some","j","item2","itemList","Image","image","imageContainer","State","stateContainer","key","stateField","shown","keyLabel","performFolderEditAction","folder","action","gameInfo","newFolder","item1","slot","modifier1","slot1","slot2","modifier2","regged","tagged","parseInt","tempItem","sortType","reverse","sort","nameJP","damageSort","elementOrder","element","counts","capacity","performFolderEditSort","getPathsToSlot","cursor","cursorPosition","goal","pathsToSlot","numInputs","Math","sign","itemsShown","abs","min","console","log","max","getNumInputs","inputs","count","actionInputs","split","input","getFolderEditInputs","folderEdit","actionIndex","sortCursor","Array","paths","bestInputs","Number","MAX_VALUE","bestPath","tempInputs","pathsToFirstItem","bestPath1","bestPath2","pathsToSecondItem","path2","sortTypes","splice","indexOf","inverseInputs","Action","FolderEdit","actionsList","tempFolder","prevFolder","folderEditContainer","toString","padStart","shouldUpdate","oldProps","newProps","areShallowEqual","NoteSection","memo","section","ref","noteRef","textContainer","itemContainer","fullscreenImage","previousSection","nextSection","Notes","sectionTop","scrollPosition","setState","sections","numSections","setNumSections","notesRef","createRef","sectionRefs","refsArray","renderNewSections","entries","observer","isIntersecting","IntersectionObserver","root","rootMargin","threshold","current","scrollIntoView","behavior","disconnect","observe","handleKeyPress","keyPress","preventDefault","fullSizeClass","fullSize","onScroll","scrollTop","newSectionTop","floor","getBoundingClientRect","height","onKeyDown","tabIndex","slice","Modifiers","Item","Tracker","tracker","list","LargeImage","fullscreenPreview","tagName","RouteContext","RouteImpl","routeContext","isMobile","initialTrackerDisplay","initialMode","initialFoundItems","getItem","initialFoundModifiers","getInitialState","updates","getContextValue","Provider","rightColumn","Route","routePath","GameContext","ItemDropdown","onUpdateItem","updateItem","buffer","ModifierDropdown","onModifierUpdate","updateModifier","updateText","SectionText","textarea","placeholder","newText","moveTextUp","moveTextDown","deleteText","SectionItem","newItem","moveItemUp","moveItemDown","deleteItem","PreviewImage","img","updateImage","SectionImage","deleteIcon","deleteImage","imageField","file","reader","FileReader","readAsDataURL","onload","onerror","error","getBase64","files","SectionState","htmlFor","sectionId","textInput","defaultValue","newState","updateState","onStateValueChange","checkbox","checked","onStateShownChange","deleteState","addState","getNewFolder","ItemOption","itemDropdown","onUpdate","secondRow","spacer","updateItem2","updateAction","actionTypes","updateItem1","deleteAction","ActionsList","SectionFolderEdit","newFolderEdit","updateFolderEdit","itemParts","deleteFolderEdit","addFolderEdit","Section","newSection","setSection","addText","chosenText","aboveText","belowText","addItem","chosenItem","aboveItem","belowItem","getLastState","getLastFolderEdit","moveSectionUp","moveSectionDown","deleteSection","itemsContainer","addSection","SectionList","displayedSections","setDisplayedSections","newSections","chosenSection","aboveSection","belowSection","initialState","initialFolderEdit","sectionList","dataLength","next","hasMore","loader","scrollableTarget","RouteInfo","games","generateDownload","document","createElement","href","btoa","download","click","importText","lines","replace","line","textId","importJSON","handleUpload","readAsText","updateGame","newGame","routeInfo","onBlur","fileInput","loadLastRouteEdit","equal","RouteFormImpl","initialPath","initialGame","initialRoute","gameContext","prevState","form","newRoute","setNewRoute","alert","RouteForm","NotesHome","NotesTool","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b7acb05a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"routeInfo\":\"_1juaIImYdU-JbBzrPmCSAn\",\"header\":\"_1py5qCH3Fe_3F8u31G1OIV\",\"label\":\"_1lkGkYuBJMpk2U8ugYKsn5\",\"textInput\":\"_2Ho51F0SyNvHB0bwoOpbH3\",\"select\":\"_4-bkCDhibfn5wpSemBqf4\",\"fileInput\":\"_3WJt0ParDofEXH3BULqf5D\",\"wrapper\":\"z2ufMtsgYdpAVGNmUCU_2\",\"spacer\":\"_3-gTvZGCGhGO_FHVfB0IZ4\",\"btn\":\"_2sreCYsEzgpYsA8XDrfhps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"folderEditContainer\":\"_13jJtq32AbSrqKVXndGi8J\",\"wrapper\":\"_2EtCeaZEOZb12rHcKZs07n\",\"action\":\"_2yatM0pMiEb1rJ9CmROb9b\",\"label\":\"_1R4_366gOVAlFiCOHot9J-\",\"folderLabel\":\"_15CMNxwd6XWWSZOQrcbagJ\",\"regged\":\"Y42r5N89ERnSWFp-HSR_b\",\"tagged\":\"_1qCpNar9YKZwU0cQLc-Cds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_1aJViBSvdM2c1osFIrcNjO\",\"checkbox\":\"_2HljH8nzmQhuSg9iaAC1Mw\",\"select\":\"ekKarJ6sw361HTDX08uPZ\",\"itemDropdown\":\"_1XJKS6yqNc7fDi0jgl9PMZ\",\"spacer\":\"_33c5RQav3iqCc3GXxL6u9C\",\"btn\":\"_3sIRgeg7ZQ5wlKkeW3KxP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_2-hsbss4J3QlRfk3ivP3Bw\",\"section\":\"_36ZuHFP4iJc6VcMEoccY8-\",\"header\":\"_3w5G8bFi_yGUxAjAC2pSCS\",\"label\":\"QlNj36iupxWkQWzAq_JE3\",\"textContainer\":\"uXyllLHgvcJCmXsuAdXFx\",\"itemsContainer\":\"_3pAtpfvvYVBA9HeyG15k6Y\",\"imageContainer\":\"_1Sp0mq-BfDM23fdR0313F8\",\"stateContainer\":\"_1cB2Cvz5VsZlJNSCS3TlGY\",\"folderEditContainer\":\"_1L1ZuuLLgojAM5uYegjDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"_2QlPtxG-DBoxbNBzVhOT75\",\"col\":\"_2B_nsuaJtQsOmQRWmq7ga\",\"btn\":\"_3NzSSHuwsC7x37KpBfoEEv\",\"label\":\"_3d31CYTugeXUb6pjMhE3bK\",\"select\":\"_1Qas7Dzlbn9n4MLRHU1SQE\"};","var map = {\n\t\"./MMBN1/ItemNames.json\": 127,\n\t\"./MMBN2/ItemNames.json\": 128,\n\t\"./MMBN3/ItemNames.json\": 129,\n\t\"./MMBN4/ItemNames.json\": 130,\n\t\"./MMBN5/ItemNames.json\": 131,\n\t\"./MMBN6/ItemNames.json\": 132,\n\t\"./MMSF1/ItemNames.json\": 133,\n\t\"./MMSF2/ItemNames.json\": 134,\n\t\"./MMSF3/ItemNames.json\": 135,\n\t\"./OSS/ItemNames.json\": 136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_1Gfx-KJJhpNYvZB3fuqAEQ\",\"link\":\"_3lUeuLlNSrlTGL24QOi9vq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"_2ebSqB1zSOZpbu0P70iE_N\",\"small\":\"_1VxycCKkdZPZwDZww5BdOs\",\"large\":\"_4-M6cg1D0jSMB5lSfUV_l\",\"right\":\"_2YhEPE7ZkeCLKiR3elUrgp\",\"hover\":\"_30nXSMO_WEHIp05G2VaaUD\",\"hidden\":\"_1kLaYogDv2Ol2FhqBkqYY3\",\"grayscale\":\"_2umdVqCkX72fB3JQI-EIba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"_1yrfu0Z67C8BNOVoIpg9DN\",\"wrapper\":\"_3y4r6Cu3THaebzd49UbY5o\",\"textContainer\":\"_2Di1OsAdz66aHut49J5ocX\",\"itemContainer\":\"_2FZcU5Jhp_2RJ-s85gE4Z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stateContainer\":\"_3834S4CR4da_f-B-ZbOeZd\",\"wrapper\":\"_1LhJFTnxMxRpnbhUDe44S0\",\"stateField\":\"-dGg4d02-Mg5vOj06SGLG\",\"label\":\"_1OgsNisMcVqhpIXOAyNxQd\",\"keyLabel\":\"_2gzJ0IJyK_SrgYERYju_aD\",\"hidden\":\"_2Asr7Fv03T7XVyXkxOYfbM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_1GmAkjIGf1rEMF9_YBiHLK\",\"item\":\"_2moR0v1HIPor6hd1R9sVz3\",\"title\":\"jwpxBg795TErVIjNkyp8T\",\"itemArt\":\"_3gwXTZWJ23tlapONGg_G1N\",\"found\":\"_1RTpaypb0Zw9IyfJ7omkHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tracker\":\"wasTyY3t2nbo05iHstMBw\",\"section\":\"n6zieeB4plQkM8pzJzlYC\",\"fullSize\":\"_3_8UP1f10LeAFGz0f05oit\",\"header\":\"_1MAo-dI5I-lSXQ4MYAYZX5\",\"list\":\"_2sclbDRwGsRSRF5WOWMucw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_2UWQKW8P27Uu6iHc_1tF3b\",\"label\":\"hp9AevHktLBBHZ0HsPQCh\",\"textInput\":\"_2BP9rerYa_MuyjapxDp5g1\",\"checkbox\":\"_2HwQHlMVwfHiPCgEvkB7AP\",\"stateField\":\"_1yn274i4vfvoDWLp1XZ_VP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_2f5xYGQhp-azc5C5DNkhe-\",\"header\":\"_2XK71YKN9Q2Rk5OfsFWIe0\",\"gameArt\":\"_2UolUTnYnSC6dm2gJvEYa6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"_2vdSwDf6V60fMvp3O8T-Sd\",\"found\":\"_3MyI7rR_EE88QlWGwB0n9i\",\"modifier\":\"_34ptAqksO8Kq1AD_qij4Qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"_1ay16zeRtLGt0Vt0EIOwPm\",\"found\":\"_70wYgrZBluxK2JUYTCT7Q\",\"modifier\":\"_345MH3DXQdv31BFPU1WHsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"-wNXkGLqMxqsYCsWRcE-C\",\"title\":\"_2cWJALW4wMrPWAfQ84mf45\",\"itemArt\":\"_1uzZKqHgppKOejemeKGzD5\",\"found\":\"_1KibNYq48RlaW2HWxkUnw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_1hshKmLSNmehZqCwlyuSUK\",\"link\":\"_lYVO_dtQUGqfyWqTxCJn\",\"img\":\"QnH9L4bevJrvbXnO2atjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"_1YhiAmdt4GIicq0B5ZvD4Z\",\"found\":\"_158BfS2JAejSI6S9UYWYNn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"_1d4EuYVZALqX4OsDl0uXIf\",\"fullSize\":\"_198aSZ0uFki6-XgxoVbChD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"_3NLd3njWXD7xHFnwo_NiDa\",\"buffer\":\"bCxE4283Hbp2QK05V-lkE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"_1uqRo-xj86u9ZmhSJYf8Ot\",\"buffer\":\"RKPruD30EQuTfq7vtOFPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"_2UgOcp4sPWdUJCkdYciMtO\",\"small\":\"_2hPSx-Wl-M9FtyP0LEk2RB\",\"medium\":\"_2oLe4va3rQ_NV3sEkHKHYP\",\"large\":\"_288TS1rF6o0bTdr4uKos8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_1-nOhQX6BqFmYOA_pKsjph\",\"rightColumn\":\"_1zalSZima65d3iXChsi55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"_2agpBq2JcVeHSopVuYbFi9\",\"itemList\":\"_3JRgIAK1XspcRJMj9gUuSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"_1yfdMF96wFQRi1I8KWLJLd\",\"image\":\"_3kw8loWUiRuTgvFl-3dTGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreenPreview\":\"_3eA_SxuPaXdBwY9XLzb6J6\",\"image\":\"_3DhqAFh4iEidOLqB1cEAuu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"_1311JjnywyRPHhy9RC2sCr\",\"form\":\"_1zUkwZi9914YVksgdFVGeF\",\"textInput\":\"_8M5UV9XOq15YtoXfbKInZ\",\"textarea\":\"_3BPXZoUncxKiukENmEKGi_\",\"select\":\"jijtaAyobGhFQ7hrI-o5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textContainer\":\"_3dUx2cgvkaDfbuX5l25JRt\",\"textarea\":\"Y1pb3YD5NREX1Ra3nA6uY\"};","var map = {\n\t\"./MMBN1/DefaultFoundItems.json\": 110,\n\t\"./MMBN2/DefaultFoundItems.json\": 111,\n\t\"./MMBN3/DefaultFoundItems.json\": 112,\n\t\"./MMBN4/DefaultFoundItems.json\": 113,\n\t\"./MMBN5/DefaultFoundItems.json\": 114,\n\t\"./MMBN6/DefaultFoundItems.json\": 115,\n\t\"./MMSF1/DefaultFoundItems.json\": 116,\n\t\"./MMSF2/DefaultFoundItems.json\": 117,\n\t\"./MMSF3/DefaultFoundItems.json\": 118,\n\t\"./OSS/DefaultFoundItems.json\": 119\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 68;","var map = {\n\t\"./MMBN1/DefaultFoundModifiers.json\": 120,\n\t\"./MMBN2/DefaultFoundModifiers.json\": 121,\n\t\"./MMBN3/DefaultFoundModifiers.json\": 122,\n\t\"./MMBN4/DefaultFoundModifiers.json\": 123,\n\t\"./MMBN5/DefaultFoundModifiers.json\": 124,\n\t\"./MMBN6/DefaultFoundModifiers.json\": 125,\n\t\"./OSS/DefaultFoundModifiers.json\": 126\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 69;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"_10zEZsXHCIkxvPnOUDCg2k\",\"title\":\"_3VEu72ACtxmfGSF-PbYeUq\",\"itemArt\":\"_349B8E4M647QIkUqAAFGse\",\"Battlechips\":\"G89vqfMhV7Z2YfmQOemBt\",\"Standard\":\"_2aSgRJWfzSDZbRM5BraEhQ\",\"Mega\":\"_3KUKTem6Isff4T-wHnjrvr\",\"Giga\":\"_1401fzKXRC1B69Zp4WL4Fy\",\"PAs\":\"ZdaHb1e2gm1a5oEBhF0po\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"gRqACM8foVdzjpAQgRAMW\",\"title\":\"_1H2YCBV0fphDmW4_yI3MNk\",\"itemArt\":\"_1CoFTRYhg95JO0n6b_Sbzg\",\"Standard\":\"_2acuL-9sYQtFNSyd8_Wbmi\",\"Mega\":\"_1Bb-FlD3zoAgf_FDBJ1oso\",\"Giga\":\"_3_NSr3ihm8Mdjd36K9ZjVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"_3yaGrTeih_2ieKd7jYnE3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modifiers\":\"_2jYGRmEuU_hdWUE1JDgbYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"j0Pa_6xouyrIgxc1825nc\",\"itemArt\":\"_3xeEJiL_pku09BL4JVFmE2\",\"Battlechips\":\"_34rSxa0iiOm4zLVhI2GdG1\",\"Standard\":\"_28mEt09wtgwGhZ6vY6gQHN\",\"Mega\":\"_2gGZArP7xTiKe0D2_hVLSD\",\"Giga\":\"_2-Qm-rHugozxHTxyKUaFem\",\"PAs\":\"XHZBrB2pGKfRUI8gtwGYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"_55SBiwKNrrVucoYRi_QZw\",\"Standard\":\"UzN2q3H4F54DVoVqhtmIT\",\"Mega\":\"EI7_TdJaiPTUGXpUsrMoC\",\"Giga\":\"_28CHFr1nwXF8dX-DDQbMwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"LuSWxm2Q_AQINhPYjduTo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"B5SWRdwNaqWvNtfbjOzX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageField\":\"Ll0o1jmodbb74nLPBpOIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionList\":\"_3fq2327GFalNEqNpmWGGAs\"};","/** @format */\r\n\r\nconst reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry);\r\n                getFID(onPerfEntry);\r\n                getFCP(onPerfEntry);\r\n                getLCP(onPerfEntry);\r\n                getTTFB(onPerfEntry);\r\n            },\r\n        );\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport styles from './styles/Icon.Module.css';\r\n\r\nclass Icon extends React.Component {\r\n\r\n    render() {\r\n        let hoverClass = this.props.hover ? styles.hover : '';\r\n        let hiddenClass = this.props.hidden ? styles.hidden : '';\r\n        let floatClass = this.props.float === \"right\" ? styles.right : '';\r\n        let grayscaleClass = this.props.grayscale ? styles.grayscale : '';\r\n\r\n        return (\r\n            <img src={this.props.src} id={this.props.id} className={`${styles.icon} ${styles[this.props.size]} ${hoverClass} ${hiddenClass} ${floatClass} ${grayscaleClass}`} onClick={this.props.onClick} alt={this.props.altText} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Icon;\r\n","/** @format */\r\n\r\nimport { useMemo } from 'react';\r\n\r\n// Converts a promise into something that works with React Suspense.\r\nfunction createSuspenseResource(promise) {\r\n    let status = 'pending';\r\n    let result;\r\n    let suspender = promise.then(\r\n        (r) => {\r\n            status = 'success';\r\n            result = r;\r\n        },\r\n        (e) => {\r\n            status = 'error';\r\n            result = e;\r\n        },\r\n    );\r\n    return {\r\n        read() {\r\n            if (status === 'pending') {\r\n                throw suspender;\r\n            } else if (status === 'error') {\r\n                throw result;\r\n            } else if (status === 'success') {\r\n                return result;\r\n            }\r\n        },\r\n    };\r\n}\r\n\r\nexport default function useSuspenseResource(promiseCallback, deps) {\r\n    return useMemo(\r\n        () => createSuspenseResource(promiseCallback()),\r\n        // Dynamic deps array because it's passed in from the caller.\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        deps,\r\n    );\r\n}\r\n","/** @format */\r\n\r\nimport React, { Suspense } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './styles/RoutesListItem.Module.css';\r\nimport Icon from '../common/Icon';\r\nimport useSuspenseResource from '../common/functions/useSuspense';\r\n\r\nfunction RoutesListItem(props) {\r\n    const path = props.path;\r\n    const notesResource = useSuspenseResource(async () => {\r\n        const response = await fetch(\r\n            `${process.env.PUBLIC_URL}/notes/${path}.json`,\r\n        );\r\n\r\n        return await response.json();\r\n    }, [path]);\r\n\r\n    return (\r\n        <Suspense fallback=\"Loading...\">\r\n            <RoutesListItemImpl\r\n                {...props}\r\n                notesResource={notesResource}\r\n                gameId={props.gameId}\r\n                path={props.path}\r\n            />\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nfunction RoutesListItemImpl(props) {\r\n    const notes = props.notesResource.read();\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Link\r\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\r\n                className={`${styles.link} col-5 col-m-6`}>\r\n                <div>{notes.title}</div>\r\n            </Link>\r\n            <Link\r\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\r\n                className={`${styles.link} col-2 hidden-mobile`}>\r\n                <div>{notes.category}</div>\r\n            </Link>\r\n            <Link\r\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\r\n                className={`${styles.link} col-2 col-m-4`}>\r\n                <div>{notes.author}</div>\r\n            </Link>\r\n            <Link\r\n                to={'/notes/game/' + props.gameId + '/route/' + props.path}\r\n                className={`${styles.link} col-2 hidden-mobile`}>\r\n                <div>{notes.version}</div>\r\n            </Link>\r\n            <Link\r\n                to={'/notes/editRoute/' + props.path}\r\n                className={`${styles.link} col-1 col-m-2`}>\r\n                <Icon\r\n                    src=\"/icons/edit.png\"\r\n                    size=\"small\"\r\n                    altText=\"Edit\"\r\n                    hover={true}\r\n                    hidden={false}\r\n                />\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoutesListItem;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport styles from './styles/Button.Module.css';\r\n\r\nclass Button extends React.Component {\r\n    render() {\r\n        return (\r\n            <button id={this.props.id} className={`${styles.btn} ${styles[this.props.size]} ${this.props.className}`} type=\"button\" onClick={this.props.onClick}>{this.props.text}</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport styles from './styles/RoutesList.Module.css';\r\nimport RoutesListItem from './RoutesListItem';\r\nimport Button from '../common/Button';\r\n\r\nlet routes = require('../../notes/routes.json');\r\n\r\nclass RoutesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let gameId = props.match.params.gameId;\r\n        let gameRoutes = routes[gameId];\r\n\r\n        if (gameRoutes == null) {\r\n            this.props.history.push('/notes');\r\n        }\r\n\r\n        this.state = {\r\n            gameId: props.match.params.gameId,\r\n            gameName: gameRoutes.name,\r\n            routes: gameRoutes.routes,\r\n        };\r\n\r\n        this.createRoute = this.createRoute.bind(this);\r\n    }\r\n\r\n    createRoute() {\r\n        this.props.history.push('/notes/createRoute/' + this.state.gameId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page\">\r\n                <div className={styles.wrapper}>\r\n                    <div className={'col-3 col-m-12 card'}>\r\n                        <h3>{this.state.gameName}</h3>\r\n                        <img\r\n                            className={styles.gameArt}\r\n                            src={'/gameArt/' + this.state.gameId + '.png'}\r\n                            alt={this.state.gameId + '.png'}\r\n                        />\r\n                    </div>\r\n                    <div className={'col-8 col-m-12 card'}>\r\n                        <h1>Routes</h1>\r\n                        <div className={styles.wrapper + ' ' + styles.header}>\r\n                            <div className=\"col-5 col-m-6\">Route Name</div>\r\n                            <div className=\"col-2 hidden-mobile\">Category</div>\r\n                            <div className=\"col-2 col-m-4\">Author</div>\r\n                            <div className=\"col-2 hidden-mobile\">Version</div>\r\n                            <div className=\"col-1 col-m-2\">Edit</div>\r\n                        </div>\r\n                        {this.state.routes.map((route) => (\r\n                            <RoutesListItem\r\n                                gameId={this.state.gameId}\r\n                                key={route.path}\r\n                                path={route.path}\r\n                            />\r\n                        ))}\r\n                        <Button\r\n                            text=\"Create New Route\"\r\n                            size=\"medium\"\r\n                            onClick={this.createRoute}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoutesList;\r\n","import { useState, useEffect } from 'react';\r\n\r\n/**\r\n * Example:\r\n *\r\n * const isSmallScreen = useMatchMedia('(max-width: 600px)');\r\n */\r\nexport default function useMatchMedia(query) {\r\n    const [matches, setMatches] = useState(\r\n        () => window.matchMedia(query).matches,\r\n    );\r\n\r\n    useEffect(() => {\r\n        const mediaQueryList = window.matchMedia(query);\r\n        const callback = (e) => setMatches(e.matches);\r\n\r\n        mediaQueryList.addListener(callback);\r\n        return function cleanup() {\r\n            mediaQueryList.removeListener(callback);\r\n        };\r\n    }, [query, setMatches]);\r\n\r\n    return matches;\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst NotesContext = createContext({})\r\n\r\nexport default NotesContext;","/** @format */\r\n\r\nimport { useContext, useCallback } from 'react';\r\nimport styles from \"./styles/Menu.Module.css\";\r\nimport Button from \"../../common/Button\";\r\nimport useMatchMedia from '../../common/functions/useMatchMedia';\r\nimport NotesContext from '../../common/NotesContext';\r\n\r\nfunction Menu(props) {\r\n    const {\r\n        notes: {\r\n            game\r\n        },\r\n        showNotes,\r\n        showTracker,\r\n        mode,\r\n        foundModifiers,\r\n        folderEditView,\r\n        setContext\r\n    } = useContext(NotesContext);\r\n\r\n    const changeMode = useCallback(\r\n        () => {\r\n            setContext({ mode: mode === \"list\" ? \"presenter\" : \"list\" });\r\n        },\r\n        [mode, setContext]\r\n    );\r\n\r\n    const resetTracker = useCallback(\r\n        () => {\r\n            let newFoundItems = JSON.parse(JSON.stringify(require('../../../resources/' + game + '/DefaultFoundItems.json')));\r\n            let newFoundModifiers = foundModifiers;\r\n            if (newFoundModifiers != null)  {\r\n                newFoundModifiers = JSON.parse(JSON.stringify(require('../../../resources/' + game + '/DefaultFoundModifiers.json')));\r\n            }\r\n\r\n            setContext({ foundItems: newFoundItems, foundModifiers: newFoundModifiers });\r\n\r\n            localStorage.setItem(\"foundItems-\" + game, JSON.stringify(newFoundItems));\r\n            localStorage.setItem(\"foundModifiers-\" + game, JSON.stringify(newFoundModifiers));\r\n        },\r\n        [game, foundModifiers, setContext]\r\n    );\r\n\r\n    const updateNotesDisplay = useCallback(\r\n        () => {\r\n            setContext({ showNotes: !showNotes });\r\n        },\r\n        [showNotes, setContext]\r\n    );\r\n\r\n    const updateTrackerDisplay = useCallback(\r\n        () => {\r\n            setContext({ showTracker: !showTracker });\r\n        },\r\n        [showTracker, setContext]\r\n    );\r\n\r\n    const swapNotesAndTracker = useCallback(\r\n        () => {\r\n            setContext({ showNotes: !showNotes, showTracker: !showTracker });\r\n        },\r\n        [showNotes, showTracker, setContext]\r\n    );\r\n\r\n    let modeText = mode === \"presenter\" ? \"List Mode\" : \"Presenter Mode\";\r\n\r\n    let previewButton = '';\r\n    if (props.preview) {\r\n        previewButton = (\r\n            <Button\r\n                text=\"Edit Route\"\r\n                size=\"medium\"\r\n                className={`${styles.btn}`}\r\n                onClick={props.swapPreview}\r\n            />\r\n        );\r\n    }\r\n\r\n    // If on mobile, use a different button layout where users can only swap notes and tracker.\r\n    if (useMatchMedia('(max-width: 600px)')) {\r\n        let notesText = props.showNotes ? 'Show Tracker' : 'Show Notes';\r\n        return (\r\n            <div className={`card ${styles.menu}`}>\r\n                <Button text=\"Reset Tracker\" size=\"medium\" onClick={resetTracker} />\r\n                <Button text={notesText} size=\"medium\" onClick={swapNotesAndTracker} />\r\n                <Button text={modeText} size=\"large\" onClick={changeMode} />\r\n                {previewButton}\r\n            </div>\r\n        );\r\n    } else {\r\n        let showNotesText = showNotes ? 'Hide Notes' : 'Show Notes';\r\n        let showTrackerText = showTracker\r\n            ? 'Hide Tracker'\r\n            : 'Show Tracker';\r\n\r\n        return (\r\n            <div className={`card ${styles.menu}`}>\r\n                <div className={`${styles.col}`}>\r\n                    <Button text={showNotesText} size=\"medium\" className={`${styles.btn}`} onClick={updateNotesDisplay} />\r\n                    <Button text={showTrackerText} size=\"medium\" className={`${styles.btn}`} onClick={updateTrackerDisplay} />\r\n                    <Button text=\"Reset Tracker\" size=\"medium\" className={`${styles.btn}`} onClick={resetTracker} />\r\n                    <Button text={modeText} size=\"medium\" className={`${styles.btn}`} onClick={changeMode} />\r\n                </div>\r\n                <div className={`${styles.col}`}>\r\n                    {previewButton}\r\n                </div>\r\n                <div className={`${styles.col}`}>\r\n                    <div className={`${styles.label}`}>\r\n                        Folder Edit View\r\n                    </div>\r\n                    <div>\r\n                        <select name=\"folderEditDisplay\" value={folderEditView} className={`${styles.select}`} onChange={ (e) => setContext({ folderEditView: e.target.value}) }>\r\n                            <option value=\"Actions\">Actions</option>\r\n                            <option value=\"Differences\">Differences</option>\r\n                            <option value=\"Inputs\">Inputs</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import { useContext } from 'react';\r\nimport NotesContext from '../../../common/NotesContext';\r\nimport styles from './styles/Text.Module.css';\r\n\r\nfunction Text(props) {\r\n    const {\r\n        foundItems,\r\n        foundModifiers\r\n    } = useContext(NotesContext);\r\n\r\n    if (props.text.item != null && foundItems.includes(props.text.item)) {\r\n        if ((props.text.modifier == null) || foundModifiers[props.text.item].includes(props.text.modifier)) {\r\n            return (\r\n                <div className={`${styles.text} ${styles.found}`}>{props.text.text}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${styles.text}`}>{props.text.text}</div>\r\n    );\r\n}\r\n\r\nexport default Text;","/** @format */\r\n\r\nimport { useContext } from 'react';\r\nimport styles from './styles/SmallModifiers.Module.css';\r\nimport themeMMBN from './styles/themes/MMBN/MMBN-SmallModifiers.Module.css';\r\nimport NotesContext from '../../../common/NotesContext';\r\n\r\nfunction Modifier(props) {\r\n    const {\r\n        notes: {\r\n            game\r\n        },\r\n        foundModifiers\r\n    } = useContext(NotesContext);\r\n\r\n    const foundClass = foundModifiers[props.id].includes(props.modifier) ? styles.found : \"\";\r\n    return(\r\n        <div id={\"modifier-\" + props.id + \"-\" + props.modifier} className={`${styles.modifier} ${styles[game]} ${foundClass}`} onClick={ () => props.updateFound(props.modifier) }>{props.modifier}</div>\r\n    );\r\n}\r\n\r\nfunction SmallModifiers(props) {\r\n    const {\r\n        notes: {\r\n            game\r\n        }\r\n    } = useContext(NotesContext);\r\n\r\n    let theme = {};\r\n    if (game.includes(\"MMBN\")) {\r\n        theme = themeMMBN;\r\n    }\r\n\r\n    const updateFound = (modifier) => {\r\n        props.updateTracker(props.id, modifier);\r\n    }\r\n\r\n    if (props.modifiers != null && props.modifiers.length > 0) {\r\n        return(\r\n            <div className={`${styles.modifiers} ${theme.modifiers}`}>\r\n                {props.modifiers.map((modifier) =>\r\n                    <Modifier key={\"small-modifier-\" + modifier} id={props.id} modifier={modifier} updateFound={updateFound} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default SmallModifiers;\r\n","/** @format */\r\n\r\nimport { useContext } from 'react';\r\nimport styles from './styles/SmallItem.Module.css';\r\nimport themeMMBN from './styles/themes/MMBN/MMBN-SmallItem.Module.css';\r\nimport themeMMSF from './styles/themes/MMSF/MMSF-SmallItem.Module.css';\r\nimport SmallModifiers from './SmallModifiers';\r\nimport NotesContext from '../../../common/NotesContext';\r\n\r\nfunction SmallItem(props) {\r\n    const {\r\n        notes: {\r\n            game\r\n        }\r\n    } = useContext(NotesContext);\r\n\r\n    let theme = {};\r\n    if (game.includes(\"MMBN\")) {\r\n        theme = themeMMBN;\r\n    } else if (game.includes(\"MMSF\")) {\r\n        theme = themeMMSF;\r\n    }\r\n\r\n    let Items = require('../../../../resources/' + game + '/ItemNames.json');\r\n\r\n    const updateFound = () => {\r\n        props.updateTracker(props.id, null);\r\n    }\r\n\r\n    const foundClass = props.found ? styles.found : \"\";\r\n    let typeClass = \"\";\r\n    for (let i = 0; i < Items.types.length; i++) {\r\n        let type = Items.types[i];\r\n        if (props.id >= type.low && props.id <= type.high) {\r\n            typeClass = type.id;\r\n            break;\r\n        }\r\n    }\r\n    return(\r\n        <div className={`${styles.wrapper}`}>\r\n            <div id={props.id} className={`${styles.item} ${theme.item} ${theme[typeClass]} ${foundClass}`} onClick={updateFound}>\r\n                <div className={`${styles.title} ${theme.title}`}>{Items.Items[props.id].name}</div>\r\n                <img className={`${styles.itemArt} ${theme.itemArt}`} src={\"/items/\" + game + \"/\" + props.id + \".png\"} alt={Items.Items[props.id] + \" art\"} />\r\n            </div>\r\n            <SmallModifiers id={props.id} modifiers={props.modifiers} updateTracker={props.updateTracker} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SmallItem;\r\n","import { useContext } from 'react';\r\nimport SmallItem from './SmallItem';\r\nimport NotesContext from '../../../common/NotesContext';\r\nimport styles from './styles/ItemsList.Module.css';\r\n\r\nfunction ItemsList(props) {\r\n    const {\r\n        notes: {\r\n            game\r\n        },\r\n        foundItems,\r\n        foundModifiers\r\n    } = useContext(NotesContext);\r\n\r\n    let Items = require('../../../../resources/' + game + '/ItemNames.json');\r\n\r\n    let itemsList;\r\n\r\n    if (Items.modifiers) {\r\n        let completedItems = [];\r\n\r\n        for (let i = 0; i < props.items.length; i++) {\r\n            let item = props.items[i];\r\n\r\n            if (!completedItems.some(o => o.value === item.value)) {\r\n                let modifiers = [];\r\n\r\n                for (let j = 0; j < props.items.length; j++) {\r\n                    let item2 = props.items[j];\r\n\r\n                    if (item2.value === item.value && item2.modifier && item2.modifier !== \"\" && item2.modifier != null) {\r\n                        modifiers.push(item2.modifier);\r\n                    }\r\n                }\r\n\r\n                completedItems.push({\r\n                    value: item.value,\r\n                    modifiers: modifiers\r\n                })\r\n            }\r\n        }\r\n\r\n        itemsList = completedItems.map((item) =>\r\n                        <SmallItem key={\"small-item-\" + item.value} id={item.value} updateTracker={props.updateTracker} modifiers={item.modifiers} found={foundItems.includes(item.value)} foundModifiers={foundModifiers} />\r\n                    );\r\n    } else {\r\n        itemsList = props.items.map((item) =>\r\n                        <SmallItem key={\"small-item-\" + item.value} id={item.value} updateTracker={props.updateTracker} found={foundItems.includes(item.value)} foundModifiers={foundModifiers} />\r\n                    );\r\n    }\r\n\r\n    if (props.items.length > 0) {\r\n        return (\r\n            <div>\r\n                <div className={styles.label}>\r\n                    Potential {Items.name + \"s\"}\r\n                </div>\r\n                <div className={styles.itemList}>\r\n                    {itemsList}\r\n                </div>\r\n           </div>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default ItemsList;","import styles from './styles/Image.Module.css';\r\n\r\nfunction Image(props) {\r\n    if (props.image != null) {\r\n        return (\r\n            <div className={`${styles.imageContainer}`}>\r\n                <img className={styles.image} src={props.image} alt=\"\" onClick={ () => props.onClick(props.image) } />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default Image;","import styles from './styles/State.Module.css';\r\n\r\nfunction State(props) {\r\n    if (props.state != null) {\r\n        return (\r\n            <div className={`${styles.stateContainer}`}>\r\n                <div className={`${styles.label}`}>\r\n                    State\r\n                </div>\r\n                <div className={styles.wrapper}>\r\n                    {props.state.keys.map((key) =>\r\n                        <div className={`${styles.stateField} ${!props.state[key].shown ? styles.hidden : ''}`} key={key}>\r\n                            <div className={`${styles.keyLabel}`}>\r\n                                {key}\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                {props.state[key].value}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default State;","import performFolderEditSort from './performFolderEditSort';\r\n\r\nexport default function performFolderEditAction(folder, action, gameInfo) {\r\n    const newFolder = JSON.parse(JSON.stringify(folder));\r\n\r\n    if (action.item1 !== -1) {\r\n        if (action.action === \"Remove\") {\r\n            newFolder[action.item1].item = -1;\r\n            newFolder[action.item1].modifier = null;\r\n        } else if (action.action === \"Add\") {\r\n            for (const item of folder) {\r\n                if (item.item === -1) {\r\n                    newFolder[item.slot].item = action.item1;\r\n                    newFolder[item.slot].modifier = action.modifier1;\r\n                    break;\r\n                }\r\n            }\r\n        } else if (action.action === \"Swap\") {\r\n            if (action.item2 !== -1) {\r\n                const slot1 = newFolder[action.item1];\r\n                const slot2 = newFolder[action.item2];\r\n\r\n                // Swap the slots.\r\n                slot1.slot = action.item2;\r\n                slot2.slot = action.item1;\r\n\r\n                //Swap positions in array\r\n                newFolder[action.item1] = slot2;\r\n                newFolder[action.item2] = slot1;\r\n            }\r\n        } else if (action.action === \"Replace\") {\r\n            if (action.item2 !== -1) {\r\n                newFolder[action.item1].item = action.item2;\r\n                newFolder[action.item1].modifier = action.modifier2;\r\n            }\r\n        } else if (action.action === \"Reg\" || action.action === \"Default\") {\r\n            // Unreg everything else\r\n            for (let i = 0; i < newFolder.length; i++) {\r\n                newFolder[i].regged = false;\r\n            }\r\n            newFolder[action.item1].regged = true;\r\n        } else if (action.action === \"Tag\") {\r\n            // Tag only does something if 2 items are selected.\r\n            if (action.item1 != -1 && action.item2 != -1) {\r\n                // Untag everything else\r\n                for (let i = 0; i < newFolder.length; i++) {\r\n                    newFolder[i].tagged = false;\r\n                }\r\n                // Mark items as tagged first. Then, move items around to put them next to each other.\r\n                newFolder[action.item1].tagged = true;\r\n                newFolder[action.item2].tagged = true;\r\n\r\n                // Whichever item is picked first goes on top. However, if item1 is above item2 in the folder, item1 will not\r\n                // move. But if item 2 is above item1, item1 moves up one slot because of item2 moving below.\r\n                if (parseInt(action.item1) < parseInt(action.item2)) {\r\n                    for (let i = parseInt(action.item2); i > parseInt(action.item1) + 1; i--) {\r\n                        let tempItem = newFolder[i];\r\n                        newFolder[i] = newFolder[i - 1];\r\n                        newFolder[i].slot = newFolder[i].slot + 1;\r\n                        newFolder[i - 1] = tempItem;\r\n                        newFolder[i - 1].slot = newFolder[i - 1].slot - 1;\r\n                    }\r\n                } else {\r\n                    for (let i = parseInt(action.item2); i < parseInt(action.item1); i++) {\r\n                        let tempItem = newFolder[i];\r\n                        newFolder[i] = newFolder[i + 1];\r\n                        newFolder[i].slot = newFolder[i].slot - 1;\r\n                        newFolder[i + 1] = tempItem;\r\n                        newFolder[i + 1].slot = newFolder[i + 1].slot + 1;\r\n                    }\r\n                }\r\n            }\r\n        } else if (action.action === \"Sort\") {\r\n            performFolderEditSort(newFolder, action.item1, action.item2, gameInfo)\r\n        }\r\n        // TODO: Implement Favorites\r\n    }\r\n\r\n    return newFolder;\r\n}","export default function performFolderEditSort(folder, sortType, reverse, gameInfo) {\r\n    if (sortType === \"ID\") {\r\n        folder.sort((slot1, slot2) => {\r\n            if (reverse) {\r\n                if (slot1.item === slot2.item) {\r\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                } else {\r\n                    return slot1.item < slot2.item ? 1 : -1\r\n                }\r\n            } else {\r\n                if (slot1.item === slot2.item) {\r\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                } else {\r\n                    return slot1.item > slot2.item ? 1 : -1\r\n                }\r\n            }\r\n        });\r\n    } else if (sortType === \"Alphabet\") {\r\n        folder.sort((slot1, slot2) => {\r\n            if (reverse) {\r\n                if (slot1.item === slot2.item) {\r\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                } else {\r\n                    return gameInfo.Items[slot1.item].name < gameInfo.Items[slot2.item].name ? 1 : -1\r\n                }\r\n            } else {\r\n                if (slot1.item === slot2.item) {\r\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                } else {\r\n                    return gameInfo.Items[slot1.item].name > gameInfo.Items[slot2.item].name ? 1 : -1\r\n                }\r\n            }\r\n        });\r\n    } else if (sortType === \"Alphabet (JP)\") {\r\n        folder.sort((slot1, slot2) => {\r\n            if (reverse) {\r\n                if (slot1.item === slot2.item) {\r\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                } else {\r\n                    return gameInfo.Items[slot1.item].nameJP < gameInfo.Items[slot2.item].nameJP ? 1 : -1\r\n                }\r\n            } else {\r\n                if (slot1.item === slot2.item) {\r\n                    return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                } else {\r\n                    return gameInfo.Items[slot1.item].nameJP > gameInfo.Items[slot2.item].nameJP ? 1 : -1\r\n                }\r\n            }\r\n        });\r\n    } else if (sortType === \"Code\") {\r\n        folder.sort((slot1, slot2) => {\r\n            if (reverse) {\r\n                if (slot1.modifier === slot2.modifier) {\r\n                    return slot1.item > slot2.item ? 1 : -1;\r\n                } else {\r\n                    return slot1.modifier < slot2.modifier ? 1 : -1\r\n                }\r\n            } else {\r\n                if (slot1.modifier === slot2.modifier) {\r\n                    return slot1.item > slot2.item ? 1 : -1;\r\n                } else {\r\n                    return slot1.modifier > slot2.modifier ? 1 : -1\r\n                }\r\n            }\r\n        });\r\n    } else if (sortType === \"Attack\") {\r\n        folder.sort((slot1, slot2) => {\r\n            if (reverse) {\r\n                if (gameInfo.Items[slot1.item].damageSort === gameInfo.Items[slot2.item].damageSort) {\r\n                    if (slot1.item === slot2.item) {\r\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                    } else {\r\n                        return slot1.item > slot2.item ? 1 : -1\r\n                    }\r\n                } else {\r\n                    return gameInfo.Items[slot1.item].damageSort > gameInfo.Items[slot2.item].damageSort ? 1 : -1\r\n                }\r\n            } else {\r\n                if (gameInfo.Items[slot1.item].damageSort === gameInfo.Items[slot2.item].damageSort) {\r\n                    if (slot1.item === slot2.item) {\r\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                    } else {\r\n                        return slot1.item > slot2.item ? 1 : -1\r\n                    }\r\n                } else {\r\n                    return gameInfo.Items[slot1.item].damageSort < gameInfo.Items[slot2.item].damageSort ? 1 : -1\r\n                }\r\n            }\r\n        });\r\n    } else if (sortType === \"Element\") {\r\n        folder.sort((slot1, slot2) => {\r\n            if (reverse) {\r\n                if (gameInfo.elementOrder[gameInfo.Items[slot1.item].element] === gameInfo.elementOrder[gameInfo.Items[slot2.item].element]) {\r\n                    if (slot1.item === slot2.item) {\r\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                    } else {\r\n                        return slot1.item > slot2.item ? 1 : -1\r\n                    }\r\n                } else {\r\n                    return gameInfo.elementOrder[gameInfo.Items[slot1.item].element] < gameInfo.elementOrder[gameInfo.Items[slot2.item].element] ? 1 : -1\r\n                }\r\n            } else {\r\n                if (gameInfo.elementOrder[gameInfo.Items[slot1.item].element] === gameInfo.elementOrder[gameInfo.Items[slot2.item].element]) {\r\n                    if (slot1.item === slot2.item) {\r\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                    } else {\r\n                        return slot1.item > slot2.item ? 1 : -1\r\n                    }\r\n                } else {\r\n                    return gameInfo.elementOrder[gameInfo.Items[slot1.item].element] > gameInfo.elementOrder[gameInfo.Items[slot2.item].element] ? 1 : -1\r\n                }\r\n            }\r\n        });\r\n    } else if (sortType === \"Quantity\") {\r\n        // Count number of each item in the folder\r\n        const counts = {}\r\n        for (const slot of folder) {\r\n            if (counts[slot.item]) {\r\n                counts[slot.item][slot.modifier] = counts[slot.item][slot.modifier] ? counts[slot.item][slot.modifier] + 1 : 1;\r\n            } else {\r\n                counts[slot.item] = {};\r\n                counts[slot.item][slot.modifier] = 1;\r\n            }\r\n        }\r\n\r\n        folder.sort((slot1, slot2) => {\r\n            if (reverse) {\r\n                if (counts[slot1.item][slot1.modifier] === counts[slot2.item][slot2.modifier]) {\r\n                    if (slot1.item === slot2.item) {\r\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                    } else {\r\n                        return slot1.item > slot2.item ? 1 : -1\r\n                    }\r\n                } else {\r\n                    return counts[slot1.item][slot1.modifier] > counts[slot2.item][slot2.modifier] ? 1 : -1\r\n                }\r\n            } else {\r\n                if (counts[slot1.item][slot1.modifier] === counts[slot2.item][slot2.modifier]) {\r\n                    if (slot1.item === slot2.item) {\r\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                    } else {\r\n                        return slot1.item > slot2.item ? 1 : -1\r\n                    }\r\n                } else {\r\n                    return counts[slot1.item][slot1.modifier] < counts[slot2.item][slot2.modifier] ? 1 : -1\r\n                }\r\n            }\r\n        });\r\n    } else if (sortType === \"Capacity\" || sortType === \"MB\") {\r\n        folder.sort((slot1, slot2) => {\r\n            if (reverse) {\r\n                if (gameInfo.Items[slot1.item].capacity === gameInfo.Items[slot2.item].capacity) {\r\n                    if (slot1.item === slot2.item) {\r\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                    } else {\r\n                        return slot1.item > slot2.item ? 1 : -1\r\n                    }\r\n                } else {\r\n                    return gameInfo.Items[slot1.item].capacity < gameInfo.Items[slot2.item].capacity ? 1 : -1\r\n                }\r\n            } else {\r\n                if (gameInfo.Items[slot1.item].capacity === gameInfo.Items[slot2.item].capacity) {\r\n                    if (slot1.item === slot2.item) {\r\n                        return slot1.modifier > slot2.modifier ? 1 : -1;\r\n                    } else {\r\n                        return slot1.item > slot2.item ? 1 : -1\r\n                    }\r\n                } else {\r\n                    return gameInfo.Items[slot1.item].capacity > gameInfo.Items[slot2.item].capacity ? 1 : -1\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Actually update the slots based on the new order\r\n    let i = 0;\r\n    for (const slot of folder) {\r\n        slot.slot = i;\r\n        i = i + 1;\r\n    }\r\n}","export default function getPathsToSlot(game, cursor, cursorPosition, goal) {\r\n    const gameInfo = require('../../../resources/' + game + '/ItemNames.json');\r\n    const pathsToSlot = [{\r\n        path: \"\",\r\n        cursor: cursor,\r\n        cursorPosition: cursorPosition\r\n    }];\r\n\r\n    for (const path of pathsToSlot) {\r\n        let numInputs = 0;\r\n        while (parseInt(path.cursor) !== parseInt(goal) && numInputs <= 100) {\r\n            // If the difference is negative, we're moving the cursor down. If its positive, we're moving the cursor up.\r\n            if (Math.sign(path.cursor - goal) === -1) {\r\n                // Check if pressing R will get you closer to the slot\r\n                if ((path.cursor - path.cursorPosition + (2 * gameInfo.itemsShown) - 1) <= 29\r\n                    && (Math.abs((path.cursor + gameInfo.itemsShown) - goal) + 1) <= Math.abs(path.cursor - goal)) {\r\n                    // If pressing R will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\r\n                    if ((Math.abs((path.cursor + gameInfo.itemsShown) - goal) + 1) === Math.abs(path.cursor - goal)) {\r\n                        pathsToSlot.push({\r\n                            path: path.path + \"R \",\r\n                            cursor: path.cursor + gameInfo.itemsShown,\r\n                            cursorPosition: path.cursorPosition\r\n                        });\r\n                        path.path = path.path + \"V \";\r\n                        path.cursor = path.cursor + 1;\r\n                        path.cursorPosition = Math.min(path.cursorPosition + 1, gameInfo.itemsShown - 1);\r\n                    } else {\r\n                        path.path = path.path + \"R \";\r\n                        path.cursor = path.cursor + gameInfo.itemsShown;\r\n                    }\r\n                } else {\r\n                    // Check if pressing R will get you closer to the slot in the situation that you're close to the bottom of the folder\r\n                    if ((path.cursor - path.cursorPosition + (2 * gameInfo.itemsShown) - 1) > 29\r\n                        && (Math.abs((30 - gameInfo.itemsShown + path.cursorPosition) - goal) + 1) <= Math.abs(path.cursor - goal)\r\n                        && (path.cursor !== (30 - gameInfo.itemsShown + path.cursorPosition))) {\r\n                        // If pressing R will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\r\n                        if ((Math.abs((30 - gameInfo.itemsShown + path.cursorPosition) - goal) + 1) === Math.abs(path.cursor - goal)) {\r\n                            pathsToSlot.push({\r\n                                path: path.path + \"R \",\r\n                                cursor: (30 - gameInfo.itemsShown + path.cursorPosition),\r\n                                cursorPosition: path.cursorPosition\r\n                            });\r\n                            path.path = path.path + \"V \";\r\n                            path.cursor = path.cursor + 1;\r\n                            path.cursorPosition = Math.min(path.cursorPosition + 1, gameInfo.itemsShown - 1);\r\n                        } else {\r\n                            path.path = path.path + \"R \";\r\n                            path.cursor = (30 - gameInfo.itemsShown + path.cursorPosition);\r\n                        }\r\n                    } else {\r\n                        // If we get here, pressing R will not be helpful, so just press down.\r\n                        console.log(\"Attempting to move down once\");\r\n                        path.path = path.path + \"V \";\r\n                        path.cursor = path.cursor + 1;\r\n                        path.cursorPosition = Math.min(path.cursorPosition + 1, gameInfo.itemsShown - 1);\r\n                    }\r\n                }\r\n            } else if (Math.sign(path.cursor - goal) === 1) {\r\n                // Check if pressing L will get you closer to the slot\r\n                if ((path.cursor - path.cursorPosition - gameInfo.itemsShown) >= 0\r\n                    && (Math.abs((path.cursor - gameInfo.itemsShown) - goal) + 1) <= Math.abs(path.cursor - goal)) {\r\n                    // If pressing L will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\r\n                    if ((Math.abs((path.cursor - gameInfo.itemsShown) - goal) + 1) === Math.abs(path.cursor - goal)) {\r\n                        pathsToSlot.push({\r\n                            path: path.path + \"L \",\r\n                            cursor: path.cursor - gameInfo.itemsShown,\r\n                            cursorPosition: path.cursorPosition\r\n                        });\r\n                        path.path = path.path + \"^ \";\r\n                        path.cursor = path.cursor - 1;\r\n                        path.cursorPosition = Math.max(path.cursorPosition - 1, 0);\r\n                    } else {\r\n                        path.path = path.path + \"L \";\r\n                        path.cursor = path.cursor - gameInfo.itemsShown;\r\n                    }\r\n                } else {\r\n                    // Check if pressing L will get you closer to the slot in the situation that you're close to the bottom of the folder\r\n                    if ((path.cursor - path.cursorPosition - gameInfo.itemsShown) < 0\r\n                        && (Math.abs((path.cursorPosition) - goal) + 1) <= Math.abs(path.cursor - goal)\r\n                        && (path.cursor !== cursorPosition)) {\r\n                        // If pressing R will be equal in inputs to pressing just down, create a new path to track with the R press, then move on with a down input.\r\n                        if ((Math.abs(path.cursorPosition - goal) + 1) <= Math.abs(path.cursor - goal)) {\r\n                            pathsToSlot.push({\r\n                                path: path.path + \"L \",\r\n                                cursor: 0 + path.cursorPosition,\r\n                                cursorPosition: path.cursorPosition\r\n                            });\r\n                            path.path = path.path + \"^ \";\r\n                            path.cursor = path.cursor - 1;\r\n                            path.cursorPosition = Math.max(path.cursorPosition - 1, 0);\r\n                        } else {\r\n                            path.path = path.path + \"L \";\r\n                            path.cursor = (0 + path.cursorPosition);\r\n                        }\r\n                    } else {\r\n                        // If we get here, pressing R will not be helpful, so just press down.\r\n                        path.path = path.path + \"^ \";\r\n                        path.cursor = path.cursor - 1;\r\n                        path.cursorPosition = Math.max(path.cursorPosition - 1, 0);\r\n                    }\r\n                }\r\n            }\r\n            numInputs = numInputs + 1;\r\n        }\r\n        if (numInputs >= 100) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return pathsToSlot;\r\n}","import getPathsToSlot from './getPathsToSlot';\r\n\r\nfunction getNumInputs(inputs) {\r\n    let count = 0;\r\n    for (const action of inputs) {\r\n        if (action != null ) {\r\n            const actionInputs = action.split(\" \");\r\n            for (const input of actionInputs) {\r\n                if (input === \"V\" || input === \"^\" || input === \"<\" || input === \">\" || input === \"A\" || input === \"Start\" || input === \"Select\") {\r\n                    count = count + 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return count;\r\n}\r\n\r\nexport default function getFolderEditInputs(folderEdit, game, actionIndex = 0, cursor = 0, cursorPosition = 0, sortCursor = 0, state = \"folder\") {\r\n    // If actionIndex equals the length of the folder edit, there are no more actions to test. Return an empty list.\r\n    if (actionIndex === folderEdit.length) {\r\n        return [];\r\n    }\r\n    const gameInfo = require('../../../resources/' + game + '/ItemNames.json');\r\n    const action = folderEdit[actionIndex];\r\n\r\n    let inputs = new Array(folderEdit.length);\r\n    let actionInputs = \"\";\r\n    if (action.item1 !== -1) {\r\n        if (action.action === \"Remove\") {\r\n            if (state === \"pack\") {\r\n                actionInputs = actionInputs + \"< \";\r\n                state = \"folder\";\r\n            }\r\n\r\n            const paths = getPathsToSlot(game, cursor, cursorPosition, action.item1);\r\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\r\n            if (paths.length > 1) {\r\n                let bestInputs = Number.MAX_VALUE;\r\n                let bestPath = {}\r\n                for (const path of paths) {\r\n                    const tempInputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, path.cursor, path.cursorPosition, sortCursor, state);\r\n                    if (bestInputs > getNumInputs(tempInputs)) {\r\n                        bestInputs = getNumInputs(tempInputs);\r\n                        bestPath = path;\r\n                        inputs = tempInputs;\r\n                    }\r\n                }\r\n                actionInputs = actionInputs + bestPath.path + \"A A \";\r\n            } else {\r\n                actionInputs = actionInputs + paths[0].path + \"A A \";\r\n                inputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, paths[0].cursor, paths[0].cursorPosition, sortCursor, state);\r\n            }\r\n            inputs[actionIndex] = actionInputs;\r\n        } else if (action.action === \"Add\") {\r\n            if (state === \"folder\") {\r\n                actionInputs = actionInputs + \"> \";\r\n                state = \"pack\";\r\n            }\r\n\r\n            actionInputs = actionInputs + \"(Press A A on \" + gameInfo.Items[action.item1].name + \" \" + action.modifier1 + \")\";\r\n            inputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, cursor, cursorPosition, sortCursor, state);\r\n            inputs[actionIndex] = actionInputs;\r\n        } else if (action.action === \"Swap\") {\r\n            if (state === \"pack\") {\r\n                actionInputs = actionInputs + \"< \";\r\n                state = \"folder\";\r\n            }\r\n\r\n            const pathsToFirstItem = getPathsToSlot(game, cursor, cursorPosition, action.item1);\r\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\r\n            if (pathsToFirstItem.length > 1) {\r\n                let bestInputs = Number.MAX_VALUE;\r\n                let bestPath1 = {}\r\n                let bestPath2 = {}\r\n                console.log(pathsToFirstItem);\r\n                for (const path of pathsToFirstItem) {\r\n                    const pathsToSecondItem = getPathsToSlot(game, path.cursor, path.cursorPosition, action.item2);\r\n                    if (pathsToSecondItem.length > 1) {\r\n                        for (const path2 of pathsToSecondItem) {\r\n                            const tempInputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, path2.cursor, path2.cursorPosition, sortCursor, state);\r\n                            tempInputs[actionIndex] = actionInputs + path.path + \"A \" + path2.path + \"A \";\r\n\r\n                            console.log(getNumInputs(tempInputs));\r\n                            if (bestInputs > getNumInputs(tempInputs)) {\r\n                                bestInputs = getNumInputs(tempInputs);\r\n                                bestPath1 = path;\r\n                                bestPath2 = path2;\r\n                                inputs = tempInputs;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const tempInputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, pathsToSecondItem[0].cursor, pathsToSecondItem[0].cursorPosition, sortCursor, state);\r\n\r\n                        console.log(bestInputs);\r\n                        console.log(bestInputs > getNumInputs(tempInputs));\r\n                        if (bestInputs > getNumInputs(tempInputs)) {\r\n                            bestInputs = getNumInputs(tempInputs);\r\n                            bestPath1 = path;\r\n                            bestPath2 = pathsToSecondItem[0];\r\n                            inputs = tempInputs;\r\n                        }\r\n                    }\r\n                }\r\n                actionInputs = actionInputs + bestPath1.path + \"A \" + bestPath2.path + \"A \";\r\n            } else {\r\n                actionInputs = actionInputs + pathsToFirstItem[0].path + \"A \";\r\n\r\n                const pathsToSecondItem = getPathsToSlot(game, pathsToFirstItem[0].cursor, pathsToFirstItem[0].cursorPosition, action.item2);\r\n                if (pathsToSecondItem.length > 1) {\r\n                    let bestInputs = Number.MAX_VALUE;\r\n                    let bestPath = {}\r\n                    for (const path of pathsToSecondItem) {\r\n                        const tempInputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, path.cursor, path.cursorPosition, sortCursor, state);\r\n\r\n                        if (bestInputs > getNumInputs(tempInputs)) {\r\n                            bestInputs = getNumInputs(tempInputs);\r\n                            bestPath = path;\r\n                            inputs = tempInputs;\r\n                        }\r\n                    }\r\n                    actionInputs = actionInputs + bestPath.path + \"A \";\r\n                } else {\r\n                    actionInputs = actionInputs + pathsToSecondItem[0].path + \"A \";\r\n\r\n                    inputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, pathsToSecondItem[0].cursor, pathsToSecondItem[0].cursorPosition, sortCursor, state);\r\n                }\r\n            }\r\n            inputs[actionIndex] = actionInputs;\r\n        } else if (action.action === \"Replace\") {\r\n            // If in folder, find the chip to be replaced, swap to pack, and select the new chip\r\n            // If in pack, find the new chip, swap to folder, and select the chip to be replaced.\r\n            if (state === \"folder\") {\r\n                state = \"pack\";\r\n                const paths = getPathsToSlot(game, cursor, cursorPosition, action.item1);\r\n                // If multiple paths returned, we need to test which one works better with the rest of the edit.\r\n                if (paths.length > 1) {\r\n                    let bestInputs = Number.MAX_VALUE;\r\n                    let bestPath = {}\r\n                    for (const path of paths) {\r\n                        const tempInputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, path.cursor, path.cursorPosition, sortCursor, state);\r\n                        if (bestInputs > getNumInputs(tempInputs)) {\r\n                            bestInputs = getNumInputs(tempInputs);\r\n                            bestPath = path;\r\n                            inputs = tempInputs;\r\n                        }\r\n                    }\r\n                    actionInputs = actionInputs + bestPath.path + \"A \";\r\n                } else {\r\n                    actionInputs = actionInputs + paths[0].path + \"A \";\r\n                    inputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, paths[0].cursor, paths[0].cursorPosition, sortCursor, state);\r\n                }\r\n\r\n                actionInputs = actionInputs + \"> (Press A on \" + gameInfo.Items[action.item2].name + \" \" + action.modifier2 + \") \";\r\n            } else if (state === \"pack\") {\r\n                state = \"folder\";\r\n                actionInputs = actionInputs + \"(Press A on \" + gameInfo.Items[action.item2].name + \" \" + action.modifier2 + \") < \";\r\n\r\n                const paths = getPathsToSlot(game, cursor, cursorPosition, action.item1);\r\n                // If multiple paths returned, we need to test which one works better with the rest of the edit.\r\n                if (paths.length > 1) {\r\n                    let bestInputs = Number.MAX_VALUE;\r\n                    let bestPath = {}\r\n                    for (const path of paths) {\r\n                        const tempInputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, path.cursor, path.cursorPosition, sortCursor, state);\r\n                        if (bestInputs > getNumInputs(tempInputs)) {\r\n                            bestInputs = getNumInputs(tempInputs);\r\n                            bestPath = path;\r\n                            inputs = tempInputs;\r\n                        }\r\n                    }\r\n                    actionInputs = actionInputs + bestPath.path + \"A \";\r\n                } else {\r\n                    actionInputs = actionInputs + paths[0].path + \"A \";\r\n                    inputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, paths[0].cursor, paths[0].cursorPosition, sortCursor, state);\r\n                }\r\n            }\r\n\r\n            inputs[actionIndex] = actionInputs;\r\n        } else if (action.action === \"Reg\" || action.action === \"Default\") {\r\n            if (state === \"pack\") {\r\n                actionInputs = actionInputs + \"< \";\r\n                state = \"folder\";\r\n            }\r\n\r\n            const paths = getPathsToSlot(game, cursor, cursorPosition, action.item1);\r\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\r\n            if (paths.length > 1) {\r\n                let bestInputs = Number.MAX_VALUE;\r\n                let bestPath = {}\r\n                for (const path of paths) {\r\n                    const tempInputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, path.cursor, path.cursorPosition, sortCursor, state);\r\n                    if (bestInputs > getNumInputs(tempInputs)) {\r\n                        bestInputs = getNumInputs(tempInputs);\r\n                        bestPath = path;\r\n                        inputs = tempInputs;\r\n                    }\r\n                }\r\n                // BN6 requires extra inputs after Select. SF3 is instead Y.\r\n                if (game === \"MMBN6\") {\r\n                    actionInputs = actionInputs + bestPath.path + \"Select \";\r\n                } else if (game === \"MMSF3\") {\r\n                    actionInputs = actionInputs + bestPath.path + \"Y \";\r\n                } else {\r\n                    actionInputs = actionInputs + bestPath.path + \"Select \";\r\n                }\r\n            } else {\r\n                // BN6 requires extra inputs after Select. SF3 is instead Y.\r\n                if (game === \"MMBN6\") {\r\n                    actionInputs = actionInputs + paths[0].path + \"Select A (advance text) A\";\r\n                } else if (game === \"MMSF3\") {\r\n                    actionInputs = actionInputs + paths[0].path + \"Y \";\r\n                } else {\r\n                    actionInputs = actionInputs + paths[0].path + \"Select \";\r\n                }\r\n                inputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, paths[0].cursor, paths[0].cursorPosition, sortCursor, state);\r\n            }\r\n            inputs[actionIndex] = actionInputs;\r\n        } else if (action.action === \"Sort\") {\r\n            if (state === \"pack\") {\r\n                actionInputs = actionInputs + \"< \";\r\n                state = \"folder\";\r\n            }\r\n\r\n            actionInputs = actionInputs + \"Start \";\r\n\r\n            const sortTypes = [...gameInfo.sortTypes];\r\n            // We need to remove one of the Alphabet sorts from the list, since the game can only sort by one Alphabet.\r\n            if (action.item1 === \"Alphabet (JP)\") {\r\n                sortTypes.splice(sortTypes.indexOf(\"Alphabet\"), 1);\r\n            } else {\r\n                sortTypes.splice(sortTypes.indexOf(\"Alphabet (JP)\"), 1);\r\n            }\r\n\r\n            // If the distance between the cursor and the desired sort is less than half the number of possible\r\n            // sorts, go directly to it. Otherwise, wrap around.\r\n            const numInputs = sortCursor - sortTypes.indexOf(action.item1);\r\n            if (Math.abs(numInputs) <= (sortTypes.length / 2)) {\r\n                // If positive difference, go up. Otherwise, go down.\r\n                if (Math.sign(numInputs) > 0) {\r\n                    for (let i = 0; i < Math.abs(numInputs); i++) {\r\n                        actionInputs = actionInputs + \"^ \";\r\n                    }\r\n                } else if (Math.sign(numInputs) < 0) {\r\n                    for (let i = 0; i < Math.abs(numInputs); i++) {\r\n                        actionInputs = actionInputs + \"V \";\r\n                    }\r\n                }\r\n            } else {\r\n                const inverseInputs = sortTypes.length - Math.abs(numInputs)\r\n                // If positive difference, go down. Otherwise, go up. (Opposite of other situation).\r\n                if (Math.sign(numInputs) > 0) {\r\n                    for (let i = 0; i < Math.abs(inverseInputs); i++) {\r\n                        actionInputs = actionInputs + \"V \";\r\n                    }\r\n                } else if (Math.sign(numInputs) < 0) {\r\n                    for (let i = 0; i < Math.abs(inverseInputs); i++) {\r\n                        actionInputs = actionInputs + \"^ \";\r\n                    }\r\n                }\r\n            }\r\n            actionInputs = actionInputs + \"A \";\r\n            // For reverse sorts, press A a 2nd time.\r\n            if (action.item2) {\r\n                actionInputs = actionInputs + \"A \";\r\n            }\r\n            actionInputs = actionInputs + \"B \";\r\n            inputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, cursor, cursorPosition, sortTypes.indexOf(action.item1), state);\r\n            inputs[actionIndex] = actionInputs;\r\n        } else if (action.action === \"Tag\") {\r\n            if (state === \"pack\") {\r\n                actionInputs = actionInputs + \"< \";\r\n                state = \"folder\";\r\n            }\r\n            actionInputs = actionInputs + \"Select V A (advance text) \"\r\n\r\n            const pathsToFirstItem = getPathsToSlot(game, cursor, cursorPosition, action.item1);\r\n            // If multiple paths returned, we need to test which one works better with the rest of the edit.\r\n            if (pathsToFirstItem.length > 1) {\r\n                let bestInputs = Number.MAX_VALUE;\r\n                let bestPath1 = {}\r\n                let bestPath2 = {}\r\n                console.log(pathsToFirstItem);\r\n                for (const path of pathsToFirstItem) {\r\n                    const pathsToSecondItem = getPathsToSlot(game, path.cursor, path.cursorPosition, action.item2);\r\n                    if (pathsToSecondItem.length > 1) {\r\n                        for (const path2 of pathsToSecondItem) {\r\n                            const tempInputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, path2.cursor, path2.cursorPosition, sortCursor, state);\r\n                            tempInputs[actionIndex] = actionInputs + path.path + \"A \" + path2.path + \"A \";\r\n\r\n                            console.log(getNumInputs(tempInputs));\r\n                            if (bestInputs > getNumInputs(tempInputs)) {\r\n                                bestInputs = getNumInputs(tempInputs);\r\n                                bestPath1 = path;\r\n                                bestPath2 = path2;\r\n                                inputs = tempInputs;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const tempInputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, pathsToSecondItem[0].cursor, pathsToSecondItem[0].cursorPosition, sortCursor, state);\r\n\r\n                        console.log(bestInputs);\r\n                        console.log(bestInputs > getNumInputs(tempInputs));\r\n                        if (bestInputs > getNumInputs(tempInputs)) {\r\n                            bestInputs = getNumInputs(tempInputs);\r\n                            bestPath1 = path;\r\n                            bestPath2 = pathsToSecondItem[0];\r\n                            inputs = tempInputs;\r\n                        }\r\n                    }\r\n                }\r\n                actionInputs = actionInputs + bestPath1.path + \"A (advance text) \" + bestPath2.path + \"A \";\r\n            } else {\r\n                actionInputs = actionInputs + pathsToFirstItem[0].path + \"A (advance text) \";\r\n\r\n                const pathsToSecondItem = getPathsToSlot(game, pathsToFirstItem[0].cursor, pathsToFirstItem[0].cursorPosition, action.item2);\r\n                if (pathsToSecondItem.length > 1) {\r\n                    let bestInputs = Number.MAX_VALUE;\r\n                    let bestPath = {}\r\n                    for (const path of pathsToSecondItem) {\r\n                        const tempInputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, path.cursor, path.cursorPosition, sortCursor, state);\r\n\r\n                        if (bestInputs > getNumInputs(tempInputs)) {\r\n                            bestInputs = getNumInputs(tempInputs);\r\n                            bestPath = path;\r\n                            inputs = tempInputs;\r\n                        }\r\n                    }\r\n                    actionInputs = actionInputs + bestPath.path + \"A \";\r\n                } else {\r\n                    actionInputs = actionInputs + pathsToSecondItem[0].path + \"A \";\r\n\r\n                    inputs = getFolderEditInputs(folderEdit, game, actionIndex + 1, pathsToSecondItem[0].cursor, pathsToSecondItem[0].cursorPosition, sortCursor, state);\r\n                }\r\n            }\r\n            inputs[actionIndex] = actionInputs;\r\n        } else if (action.action === \"Favorite\") {\r\n            // Currently ignoring Favorite, as the inputs are different between SF1 and 2, and is not currently\r\n            // super important to optimizing folder edits.\r\n            // TODO: Implement Favorites\r\n        }\r\n        return inputs;\r\n    } else {\r\n        // Return an empty list of inputs if item1 is invalid.\r\n        return [];\r\n    }\r\n}\r\n","import { useContext } from 'react';\r\nimport styles from './styles/FolderEdit.Module.css';\r\nimport NotesContext from '../../../common/NotesContext';\r\nimport performFolderEditAction from '../../../common/functions/performFolderEditAction';\r\nimport getFolderEditInputs from '../../../common/functions/getFolderEditInputs';\r\n\r\nfunction Action(props) {\r\n    const {\r\n        notes: {\r\n            game\r\n        }\r\n    } = useContext(NotesContext);\r\n\r\n    const gameInfo = require('../../../../resources/' + game + '/ItemNames.json');\r\n\r\n    // Determine the text for the action based on the action type.\r\n    let text = \"\";\r\n    if (props.action.action === \"Add\") {\r\n        text = \"Add \" + gameInfo.Items[props.action.item1].name + (gameInfo.modifiers ? (\" \" + props.action.modifier1) : \"\");\r\n    } else if (props.action.action === \"Remove\") {\r\n        console.log(props.folder);\r\n        text = \"Remove slot \" + (parseInt(props.action.item1) + 1) + \" (\" + gameInfo.Items[props.folder[props.action.item1].item].name + (gameInfo.modifiers ? (\" \" + props.folder[props.action.item1].modifier) : \"\") + \")\";\r\n    } else if (props.action.action === \"Swap\") {\r\n        text = \"Swap slot \" + (parseInt(props.action.item1) + 1)  + \" (\" + gameInfo.Items[props.folder[props.action.item1].item].name + (gameInfo.modifiers ? (\" \" + props.folder[props.action.item1].modifier) : \"\") + \") with slot \" + (parseInt(props.action.item2) + 1)  + \" (\" + gameInfo.Items[props.folder[props.action.item2].item].name + (gameInfo.modifiers ? (\" \" + props.folder[props.action.item2].modifier) : \"\") + \")\";\r\n    } else if (props.action.action === \"Replace\") {\r\n        text = \"Replace slot \" + (parseInt(props.action.item1) + 1)  + \" (\" + gameInfo.Items[props.folder[props.action.item1].item].name + (gameInfo.modifiers ? (\" \" + props.folder[props.action.item1].modifier) : \"\") + \") with \" + gameInfo.Items[props.action.item2].name + (gameInfo.modifiers ? (\" \" + props.action.modifier2) : \"\");\r\n    } else if (props.action.action === \"Reg\") {\r\n        text = \"Reg slot \" + (parseInt(props.action.item1) + 1)  + \" (\" + gameInfo.Items[props.folder[props.action.item1].item].name + (gameInfo.modifiers ? (\" \" + props.folder[props.action.item1].modifier) : \"\") + \")\";\r\n    } else if (props.action.action === \"Default\") {\r\n        text = \"Default slot \" + (parseInt(props.action.item1) + 1)  + \" (\" + gameInfo.Items[props.folder[props.action.item1].item].name + (gameInfo.modifiers ? (\" \" + props.folder[props.action.item1].modifier) : \"\") + \")\";\r\n    } else if (props.action.action === \"Sort\") {\r\n        text = \"Sort by \" + (props.action.item2 ? \"Reverse \" : \"\") + props.action.item1;\r\n    } else if (props.action.action === \"Tag\") {\r\n        text = \"Tag slot \" + (parseInt(props.action.item1) + 1)  + \" (\" + gameInfo.Items[props.folder[props.action.item1].item].name + (gameInfo.modifiers ? (\" \" + props.folder[props.action.item1].modifier) : \"\") + \") with slot \" + (parseInt(props.action.item2) + 1)  + \" (\" + gameInfo.Items[props.folder[props.action.item2].item].name + (gameInfo.modifiers ? (\" \" + props.folder[props.action.item2].modifier) : \"\") + \")\";\r\n    }\r\n\r\n    return (\r\n        <div className={`${styles.action}`}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction FolderEdit(props) {\r\n    const {\r\n        notes: {\r\n            game\r\n        },\r\n        folderEditView\r\n    } = useContext(NotesContext);\r\n    \r\n    const gameInfo = require('../../../../resources/' + game + '/ItemNames.json');\r\n\r\n    if (props.folderEdit != null) {\r\n        if (folderEditView === \"Actions\") {\r\n            // Create a list of Actions. Use the initial folder in order to list the appropriate information per action\r\n            const actionsList = [];\r\n            let tempFolder = JSON.parse(JSON.stringify(props.folderEdit.prevFolder));\r\n\r\n            for (const action of props.folderEdit.value) {\r\n                actionsList.push(<Action key={action.id} action={action} folder={tempFolder} />)\r\n\r\n                tempFolder = performFolderEditAction(tempFolder, action, gameInfo);\r\n            }\r\n\r\n            return (\r\n                <div className={`${styles.folderEditContainer}`}>\r\n                    <div className={`${styles.label}`}>\r\n                        Folder Edit\r\n                    </div>\r\n                    {actionsList}\r\n                </div>\r\n            );\r\n        } else if (folderEditView === \"Differences\") {\r\n            console.log(props.folderEdit.folder);\r\n            return (\r\n                <div className={`${styles.folderEditContainer}`}>\r\n                    <div className={`${styles.label}`}>\r\n                        Folder Edit\r\n                    </div>\r\n                    <div className={`${styles.wrapper}`}>\r\n                        <div className=\"col-5\">\r\n                            <div className={`${styles.label}`}>\r\n                                Previous\r\n                            </div>\r\n                            {props.folderEdit.prevFolder.map((slot) =>\r\n                                <div className={`${slot.regged ? styles.regged : \"\"} ${slot.tagged ? styles.tagged : \"\"}`}>\r\n                                    {(parseInt(slot.slot) + 1).toString().padStart(2, \"0\")}. {gameInfo.Items[slot.item].name} {gameInfo.modifiers ? slot.modifier : \"\"}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            ->\r\n                        </div>\r\n                        <div className=\"col-5\">\r\n                            <div className={`${styles.label}`}>\r\n                                Next\r\n                            </div>\r\n                            {props.folderEdit.folder.map((slot) =>\r\n                                <div className={`${slot.regged ? styles.regged : \"\"} ${slot.tagged ? styles.tagged : \"\"}`}>\r\n                                    {(parseInt(slot.slot) + 1).toString().padStart(2, \"0\")}. {gameInfo.Items[slot.item].name} {gameInfo.modifiers ? slot.modifier : \"\"}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (folderEditView === \"Inputs\") {\r\n            return (\r\n                <div className={`${styles.folderEditContainer}`}>\r\n                    <div className={`${styles.label}`}>\r\n                        Folder Edit\r\n                    </div>\r\n                    {getFolderEditInputs(props.folderEdit.value, game).map((action) =>\r\n                        <div className=\"col-12\">\r\n                            {action}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default FolderEdit;","/** @format */\r\n\r\nimport { useContext, memo } from 'react';\r\nimport styles from './styles/NoteSection.Module.css';\r\nimport Text from './Text';\r\nimport ItemsList from './ItemsList';\r\nimport Image from './Image';\r\nimport State from './State';\r\nimport FolderEdit from './FolderEdit';\r\nimport Icon from '../../../common/Icon';\r\nimport NotesContext from '../../../common/NotesContext';\r\nimport areShallowEqual from 'are-shallow-equal';\r\n\r\nfunction shouldUpdate(oldProps, newProps) {\r\n    if (areShallowEqual(oldProps, newProps)) {\r\n        return true;\r\n    }\r\n\r\n    console.log(\"test\");\r\n    return false;\r\n}\r\n\r\nconst NoteSection = memo((props) => {\r\n    const {\r\n        notes: {\r\n            game\r\n        },\r\n        mode,\r\n        foundItems,\r\n        foundModifiers\r\n    } = useContext(NotesContext);\r\n\r\n    if (mode === \"list\") {\r\n        return (\r\n            <div id={\"section-\" + props.section.id} className={`${styles.section} card`} ref={props.noteRef}>\r\n                <div className={`${styles.wrapper}`}>\r\n                    <div className={`${styles.textContainer} col-m-12`}>\r\n                        {props.section.text.map((text) =>\r\n                            <Text key={\"text-\" + text.id} text={text} foundItems={foundItems} foundModifiers={foundModifiers} />\r\n                        )}\r\n                    </div>\r\n                    <div className={`${styles.itemContainer}`}>\r\n                        <ItemsList items={props.section.items} updateTracker={props.updateTracker} game={game} foundItems={foundItems} foundModifiers={foundModifiers} />\r\n                    </div>\r\n                </div>\r\n                <div className={`${styles.wrapper}`}>\r\n                    <Image image={props.section.image} onClick={props.fullscreenImage} />\r\n                    <State state={props.section.state} game={game} />\r\n                    <FolderEdit folderEdit={props.section.folderEdit} />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (mode === \"presenter\") {\r\n        return (\r\n            <div id={\"section-\" + props.section.id} className={`${styles.wrapper} card`} ref={props.noteRef}>\r\n                <div className=\"col-12 col-m-12\">\r\n                    <Icon src=\"/icons/previous.png\" size=\"large\" altText=\"Previous\" hover={true} hidden={false} onClick={props.previousSection} />\r\n                    <Icon src=\"/icons/next.png\" size=\"large\" altText=\"Next\" hover={true} hidden={false} float={\"right\"} onClick={props.nextSection} />\r\n                </div>\r\n                <div className=\"col-4 col-m-12\">\r\n                    <ul>\r\n                        {props.section.text.map((text) =>\r\n                            <Text key={\"text-\" + text.id} text={text} foundItems={foundItems} foundModifiers={foundModifiers} />\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                <ItemsList items={props.section.items} updateTracker={props.updateTracker} game={game} foundItems={foundItems} foundModifiers={foundModifiers} />\r\n                <div className=\"col-6 col-m-12\">\r\n                    <Image image={props.section.image} />\r\n                    <State state={props.section.state} game={game} />\r\n                    <FolderEdit folderEdit={props.section.folderEdit} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}, shouldUpdate);\r\n\r\nexport default NoteSection;\r\n","/** @format */\r\n\r\nimport { useState, useEffect, useCallback, useContext, useMemo, createRef } from 'react';\r\nimport NoteSection from './NoteSection';\r\nimport NotesContext from '../../../common/NotesContext';\r\nimport styles from './styles/Notes.Module.css';\r\n\r\nfunction Notes(props) {\r\n    const {\r\n        notes,\r\n        showNotes,\r\n        showTracker,\r\n        mode\r\n    } = useContext(NotesContext);\r\n\r\n    const [state, setState] = useState({\r\n        section: 0,\r\n        sectionTop: 5,\r\n        scrollPosition: 0\r\n    });\r\n\r\n    const [numSections, setNumSections] = useState(Math.min(10, notes.sections.length));\r\n\r\n    const notesRef = createRef();\r\n\r\n    const sectionRefs = useMemo(() => {\r\n        const refsArray = new Array(notes.sections.length);\r\n        notes.sections.map((section) =>\r\n            refsArray[section.id] = createRef()\r\n        );\r\n        return refsArray;\r\n    }, [notes]);\r\n\r\n    const renderNewSections = useCallback((entries, observer) => {\r\n        const [ entry ] = entries;\r\n\r\n        if (entry.isIntersecting && numSections !== notes.sections.length) {\r\n            setNumSections(Math.min(numSections + 10, notes.sections.length))\r\n        }\r\n    }, [numSections, notes, setNumSections]);\r\n\r\n    const observer = useMemo(() => {\r\n        const options = {\r\n            root: null,\r\n            rootMargin: '0px',\r\n            threshold: 0.2,\r\n        };\r\n\r\n        return new IntersectionObserver(renderNewSections, options);\r\n    }, [renderNewSections]);\r\n\r\n    useEffect(() => {\r\n        if (mode === \"list\" && showNotes) {\r\n            sectionRefs[state.section].current.scrollIntoView({behavior: 'instant'});\r\n        }\r\n    }, [mode, showNotes]);\r\n\r\n    useEffect(() => {\r\n        observer.disconnect();\r\n        if (numSections < notes.sections.length && mode === \"list\" && showNotes) {\r\n            observer.observe(sectionRefs[numSections - 1].current);\r\n        }\r\n    }, [mode, showNotes, sectionRefs, numSections, observer, notes]);\r\n\r\n    const onScroll = (e) => {\r\n        let scrollPosition = e.target.scrollTop;\r\n        let newSectionTop = state.sectionTop;\r\n\r\n        let i = 0;\r\n        if (scrollPosition > state.scrollPosition && state.section !== notes.sections.length) {\r\n            while (scrollPosition >= Math.floor(newSectionTop + sectionRefs[state.section + i].current.getBoundingClientRect().height + 10)) {\r\n                newSectionTop = newSectionTop + Math.floor(sectionRefs[state.section + i].current.getBoundingClientRect().height + 10);\r\n                i++;\r\n\r\n                if (state.section + i === notes.sections.length) {\r\n                    break;\r\n                }\r\n            }\r\n        } else if (scrollPosition < state.scrollPosition && state.section !== 0) {\r\n            while (scrollPosition < newSectionTop) {\r\n                i--;\r\n                newSectionTop = newSectionTop - sectionRefs[state.section + i].current.getBoundingClientRect().height - 10;\r\n\r\n                if (state.section + i === 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            section: state.section + i,\r\n            sectionTop: newSectionTop,\r\n            scrollPosition: scrollPosition,\r\n        });\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        let keyPress = e.key;\r\n        if (\r\n            keyPress === 'ArrowLeft' ||\r\n            keyPress === 'ArrowRight' ||\r\n            keyPress === ' '\r\n        ) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (keyPress === \"ArrowLeft\" && state.section !== 0) {\r\n            if (mode === \"list\") {\r\n                sectionRefs[state.section - 1].current.scrollIntoView({behavior: 'smooth'});\r\n            } else if (mode === \"presenter\") {\r\n                setState({\r\n                    ...state,\r\n                    section: state.section - 1\r\n                });\r\n            }\r\n        } else if ((keyPress === \" \" || keyPress === \"ArrowRight\") && state.section !== notes.sections.length - 1) {\r\n            if (mode === \"list\") {\r\n                sectionRefs[state.section + 1].current.scrollIntoView({behavior: 'smooth'});\r\n            } else if (mode === \"presenter\") {\r\n                setState({\r\n                    ...state,\r\n                    section: state.section + 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const previousSection = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (state.section !== 0) {\r\n            setState({\r\n                ...state,\r\n                section: state.section - 1\r\n            });\r\n        }\r\n    }\r\n\r\n    const nextSection = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (state.section !== notes.sections.length - 1) {\r\n            setState({\r\n                ...state,\r\n                section: state.section + 1\r\n            });\r\n        }\r\n    }\r\n\r\n    const fullSizeClass = !showTracker ? styles.fullSize : \"\";\r\n\r\n    if (showNotes) {\r\n        if (mode === \"list\") {\r\n            return(\r\n                <div onScroll={onScroll} onKeyDown={handleKeyPress} className={`${styles.notes} ${fullSizeClass}`} ref={notesRef} tabIndex=\"0\">\r\n                    {notes.sections.slice(0, numSections).map((section) =>\r\n                        <NoteSection\r\n                            key={\"section-\" + section.id}\r\n                            noteRef={sectionRefs[section.id]}\r\n                            section={section}\r\n                            updateTracker={props.updateTracker}\r\n                            fullscreenImage={props.fullscreenImage}\r\n                        />\r\n                    )}\r\n                </div>\r\n            );\r\n        } else if (mode === \"presenter\") {\r\n            const section = notes.sections[state.section];\r\n\r\n            return(\r\n                <div onKeyDown={handleKeyPress} className={`${styles.notes} ${fullSizeClass}`} ref={notesRef} tabIndex=\"0\">\r\n                    <NoteSection\r\n                        key={\"section-\" + section.id}\r\n                        noteRef={sectionRefs[section.id]}\r\n                        section={section}\r\n                        updateTracker={props.updateTracker}\r\n                        previousSection={previousSection}\r\n                        nextSection={nextSection}\r\n                        fullscreenImage={props.fullscreenImage}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default Notes;\r\n","/** @format */\r\n\r\nimport { useContext } from 'react';\r\nimport NotesContext from '../../../common/NotesContext';\r\nimport styles from './styles/Modifiers.Module.css';\r\nimport themeMMBN from './styles/themes/MMBN/MMBN-Modifiers.Module.css';\r\n\r\nfunction Modifier(props) {\r\n    const foundClass = props.foundModifiers[props.id].includes(props.modifier) ? styles.found : \"\";\r\n    return(\r\n        <div id={\"modifier-\" + props.id + \"-\" + props.modifier} className={`${styles.modifier} ${styles[props.game]} ${foundClass}`} onClick={ () => props.updateFound(props.modifier) } >{props.modifier} </div>\r\n    );\r\n}\r\n\r\nfunction Modifiers(props) {\r\n    const {\r\n        notes: {\r\n            game\r\n        },\r\n        foundModifiers\r\n    } = useContext(NotesContext);\r\n\r\n    let theme = {};\r\n    if (game.includes(\"MMBN\")) {\r\n        theme = themeMMBN;\r\n    }\r\n\r\n    const updateFound = (modifier) => {\r\n        props.updateTracker(props.id, modifier);\r\n    };\r\n\r\n    if (props.modifiers != null && props.modifiers.length > 0) {\r\n        return(\r\n            <div className={`${styles.modifiers} ${theme.modifiers}`}>\r\n                {props.modifiers.map((modifier) =>\r\n                    <Modifier key={\"modifier-\" + modifier} id={props.id} modifier={modifier} foundModifiers={foundModifiers} game={game} updateFound={updateFound} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Modifiers;\r\n","/** @format */\r\n\r\nimport { useContext } from 'react';\r\nimport Modifiers from './Modifiers';\r\nimport NotesContext from '../../../common/NotesContext';\r\nimport styles from './styles/Item.Module.css';\r\nimport themeMMBN from './styles/themes/MMBN/MMBN-Item.Module.css';\r\nimport themeMMSF from './styles/themes/MMSF/MMSF-Item.Module.css';\r\n\r\nfunction Item(props) {\r\n    const {\r\n        notes: {\r\n            game\r\n        }\r\n    } = useContext(NotesContext);\r\n\r\n    let theme = {};\r\n    if (game.includes(\"MMBN\")) {\r\n        theme = themeMMBN;\r\n    } else if (game.includes(\"MMSF\")) {\r\n        theme = themeMMSF;\r\n    }\r\n\r\n    const updateFound = () => {\r\n        props.updateTracker(props.id, null);\r\n    };\r\n\r\n    if (props.id >= props.type.low && props.id <= props.type.high) {\r\n        const foundClass = props.found ? styles.found : \"\";\r\n\r\n        return(\r\n            <div>\r\n                <div id={props.id} className={`${styles.item} ${theme[props.type.id]} ${theme.item} ${foundClass}`} onClick={updateFound}>\r\n                    <div className={`${styles.title} ${theme.title}`}>{(props.id - props.low + 1).toString().padStart(3, \"0\")} {props.name}</div>\r\n                    <img className={`${styles.itemArt} ${theme.itemArt}`} src={\"/items/\" + game + \"/\" + props.id + \".png\"} alt={props.name + \" art\"} />\r\n                </div>\r\n                <Modifiers id={props.id} modifiers={props.modifiers} updateTracker={props.updateTracker} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default Item;\r\n","/** @format */\r\n\r\nimport { useContext } from 'react';\r\nimport styles from './styles/Tracker.Module.css';\r\nimport Item from './Item';\r\nimport NotesContext from '../../../common/NotesContext';\r\n\r\nfunction Tracker(props) {\r\n    const {\r\n        notes: {\r\n            game\r\n        },\r\n        showNotes,\r\n        showTracker,\r\n        foundItems\r\n    } = useContext(NotesContext);\r\n\r\n    const fullSizeClass = !showNotes ? styles.fullSize : \"\";\r\n\r\n    let Items = require('../../../../resources/' + game + '/ItemNames.json');\r\n\r\n    if (showTracker) {\r\n        return(\r\n            <div className={`${styles.tracker} ${fullSizeClass}`}>\r\n                {Items.types.map((type) =>\r\n                    <div key={\"type-\" + type.name} className={`card ${styles.section}`}>\r\n                        <div className={styles.header}>\r\n                            {type.name}\r\n                        </div>\r\n                        <div id=\"Items\" className={styles.list}>\r\n                            {Items.Items.map((item) =>\r\n                                <Item key={\"item-\" + item.id} id={item.id} name={item.name} type={type} low={type.low} modifiers={item.modifiers} updateTracker={props.updateTracker} found={foundItems.includes(item.id)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default Tracker;\r\n","import styles from './styles/LargeImage.Module.css';\r\n\r\nfunction LargeImage(props) {\r\n    const onClick = (e) => {\r\n        if (e.target.tagName !== \"IMG\") {\r\n            props.fullscreenImage(null);\r\n        }\r\n    }\r\n\r\n    if (props.image != null) {\r\n        return (\r\n            <div className={styles.fullscreenPreview} onClick={onClick}>\r\n                <img className={styles.image} src={props.image} alt=\"\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default LargeImage;","import { createContext } from 'react';\r\n\r\nconst RouteContext = createContext({})\r\n\r\nexport default RouteContext;","/** @format */\r\n\r\nimport { useState, useCallback, useContext, Suspense } from 'react';\r\nimport styles from './styles/Route.Module.css';\r\nimport Menu from './Menu';\r\nimport Notes from './notes/Notes';\r\nimport Tracker from './tracker/Tracker';\r\nimport LargeImage from './LargeImage';\r\nimport useMatchMedia from '../../common/functions/useMatchMedia';\r\nimport RouteContext from '../../common/RouteContext';\r\nimport NotesContext from '../../common/NotesContext';\r\nimport useSuspenseResource from '../../common/functions/useSuspense';\r\n\r\nfunction Route(props) {\r\n    let path = '';\r\n    if (props.match != null) {\r\n        path = props.match.params.routePath;\r\n    }\r\n\r\n    const notesResource = useSuspenseResource(async () => {\r\n        const response = await fetch(\r\n            `${process.env.PUBLIC_URL}/notes/${path}.json`,\r\n        );\r\n\r\n        return await response.json();\r\n    }, [path]);\r\n\r\n    return (\r\n        <Suspense fallback=\"Loading...\">\r\n            <RouteImpl {...props} notesResource={notesResource} />\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nconst getInitialState = (notes, isMobile) => {\r\n    let initialTrackerDisplay = true;\r\n    let initialMode = \"list\";\r\n    // If on mobile, swap to presenter mode by default and hide the tracker\r\n    if (isMobile) {\r\n        initialTrackerDisplay = false;\r\n        initialMode = \"presenter\"\r\n    }\r\n\r\n    const Items = require('../../../resources/' + notes.game + '/ItemNames.json');\r\n\r\n    let initialFoundItems = JSON.parse(localStorage.getItem(\"foundItems-\" + notes.game));\r\n    let initialFoundModifiers = JSON.parse(localStorage.getItem(\"foundModifiers-\" + notes.game));\r\n\r\n    // Update foundItems and foundModifiers if nothing was in local storage\r\n    if (initialFoundItems == null || initialFoundItems.length === 0) {\r\n        initialFoundItems = JSON.parse(JSON.stringify(require('../../../resources/' + notes.game + '/DefaultFoundItems.json')));\r\n    }\r\n\r\n    if (Items.modifiers && initialFoundModifiers == null) {\r\n        initialFoundModifiers = JSON.parse(JSON.stringify(require('../../../resources/' + notes.game + '/DefaultFoundModifiers.json')));\r\n    }\r\n\r\n    return {\r\n        notes: notes,\r\n        showNotes: true,\r\n        showTracker: initialTrackerDisplay,\r\n        mode: initialMode,\r\n        foundItems: initialFoundItems,\r\n        foundModifiers: initialFoundModifiers,\r\n        folderEditView: \"Actions\"\r\n    }\r\n}\r\n\r\nfunction RouteImpl(props) {\r\n    const routeContext = useContext(RouteContext);\r\n    let notes;\r\n    if (routeContext.route != null) {\r\n        notes = routeContext.route;\r\n    } else {\r\n        notes = props.notesResource.read();\r\n    }\r\n\r\n    const [state, setState] = useState(getInitialState(notes, useMatchMedia('(max-width: 600px)')))\r\n\r\n    const setContext = useCallback(\r\n        updates => {\r\n            setState({...state, ...updates});\r\n        },\r\n        [state, setState]\r\n    );\r\n\r\n    const getContextValue = useCallback(\r\n        () => ({\r\n            ...state,\r\n            setContext\r\n        }),\r\n        [state, setContext]\r\n    );\r\n\r\n    const updateTracker = useCallback(\r\n        (id, modifier) => {\r\n            let newFoundItems = [...state.foundItems];\r\n            let newFoundModifiers = state.foundModifiers !== null ? [...state.foundModifiers] : null;\r\n            if (modifier == null) {\r\n                if (newFoundItems.includes(id)) {\r\n                    newFoundItems.splice(newFoundItems.indexOf(id), 1);\r\n                    if (newFoundModifiers != null) {\r\n                        newFoundModifiers[id] = [];\r\n                    }\r\n                } else {\r\n                    newFoundItems.push(id);\r\n                }\r\n            } else {\r\n                if (newFoundModifiers[id].includes(modifier)) {\r\n                    newFoundModifiers[id].splice(newFoundModifiers[id].indexOf(modifier), 1);\r\n                    if (newFoundModifiers[id].length === 0) {\r\n                        newFoundItems.splice(newFoundItems.indexOf(id), 1);\r\n                    }\r\n                } else {\r\n                    newFoundModifiers[id].push(modifier);\r\n                    if (!newFoundItems.includes(id)) {\r\n                        newFoundItems.push(id);\r\n                    }\r\n                }\r\n            }\r\n\r\n            setState({ ...state, foundItems: newFoundItems, foundModifiers: newFoundModifiers });\r\n\r\n            localStorage.setItem(\"foundItems-\" + state.notes.game, JSON.stringify(newFoundItems));\r\n            localStorage.setItem(\"foundModifiers-\" + state.notes.game, JSON.stringify(newFoundModifiers));\r\n        },\r\n        [state, setState]\r\n    );\r\n\r\n    const fullscreenImage = useCallback(\r\n        (image) => {\r\n            setState({ ...state, fullscreenImage: image });\r\n        },\r\n        [state, setState]\r\n    );\r\n\r\n    return (\r\n        <div className={`${styles.wrapper}`}>\r\n            <LargeImage image={state.fullscreenImage} fullscreenImage={fullscreenImage} />\r\n            <NotesContext.Provider value={getContextValue()}>\r\n                <Notes updateTracker={updateTracker} fullscreenImage={fullscreenImage} />\r\n                <div className={`${styles.rightColumn}`}>\r\n                    <Menu preview={routeContext.preview} swapPreview={props.swapPreview} />\r\n                    <Tracker updateTracker={updateTracker} />\r\n                </div>\r\n            </NotesContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Route;\r\n","import { createContext } from 'react';\r\n\r\nconst GameContext = createContext(\"\")\r\n\r\nexport default GameContext;","/** @format */\r\n\r\nimport { useContext, memo } from 'react';\r\nimport GameContext from '../../../common/GameContext';\r\nimport styles from './styles/ItemDropdown.Module.css';\r\nimport Button from '../../../common/Button';\r\n\r\nfunction shouldUpdate(oldProps, newProps) {\r\n    if (oldProps.item !== newProps.item) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst ItemDropdown = memo((props) => {\r\n    const gameInfo = useContext(GameContext);\r\n\r\n    const onUpdateItem = (e) => {\r\n        let value = e.target.value;\r\n\r\n        if (value !== '') {\r\n            value = parseInt(value);\r\n        }\r\n\r\n        props.updateItem(value);\r\n    }\r\n\r\n    const addDropdown = (e) => {\r\n        e.preventDefault();\r\n\r\n        props.updateItem(0);\r\n    }\r\n\r\n    if (props.item != null) {\r\n        if (props.type === \"text\") {\r\n            return(\r\n                <select className={`${styles.select}`} value={props.item} onChange={onUpdateItem}>\r\n                    <option value=\"\">Remove {gameInfo.name}</option>\r\n                    {gameInfo.Items.map((item) =>\r\n                        <option value={item.id} key={\"text-item-\" + item.id}>{item.name}</option>\r\n                    )}\r\n                </select>\r\n            );\r\n        } else if (props.type === \"section\") {\r\n            return(\r\n                <select className={`${styles.select}`} value={props.item} onChange={onUpdateItem}>\r\n                    <option value=\"\">Select {gameInfo.name}</option>\r\n                    {gameInfo.Items.map((item) =>\r\n                        <option value={item.id} key={\"section-item-\" + item.id}>{item.name}</option>\r\n                    )}\r\n                </select>\r\n            );\r\n        }\r\n    } else {\r\n        if (props.type === \"text\") {\r\n            return(\r\n                <span className={`${styles.buffer}`}>\r\n                    <Button text={\"Add \" + gameInfo.name} size=\"medium\" onClick={addDropdown} />\r\n                </span>\r\n            );\r\n        }\r\n    }\r\n\r\n    return null;\r\n}, shouldUpdate);\r\n\r\nexport default ItemDropdown;\r\n","/** @format */\r\n\r\nimport { useContext } from 'react';\r\nimport GameContext from '../../../common/GameContext';\r\nimport styles from \"./styles/ModifierDropdown.Module.css\";\r\n\r\nfunction ModifierDropdown(props) {\r\n    const gameInfo = useContext(GameContext);\r\n\r\n    const onModifierUpdate = (e) => {\r\n        let value = e.target.value;\r\n        props.updateModifier(value);\r\n    }\r\n\r\n    if (!gameInfo.modifiers) {\r\n        return null;\r\n    }\r\n\r\n    if (props.item != null) {\r\n        if (gameInfo.Items[props.item] == null) {\r\n            return(\r\n                <select className={`${styles.select}`} value={props.modifier} onChange={onModifierUpdate}>\r\n                    <option value=\"\"> </option>\r\n                </select>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <select className={`${styles.select}`} value={props.modifier} onChange={onModifierUpdate}>\r\n                <option value=\"\"> </option>\r\n                {gameInfo.Items[props.item].modifiers.map((modifier) =>\r\n                    <option value={modifier} key={\"text-modifier-\" + modifier}>{modifier}</option>\r\n                )}\r\n            </select>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <span className={`${styles.buffer}`} />\r\n    );\r\n}\r\n\r\nexport default ModifierDropdown;\r\n","/** @format */\r\n\r\nimport { useContext, memo } from 'react';\r\nimport styles from'./styles/SectionText.Module.css';\r\nimport ItemDropdown from './ItemDropdown';\r\nimport ModifierDropdown from './ModifierDropdown';\r\nimport Icon from '../../../common/Icon';\r\nimport GameContext from '../../../common/GameContext';\r\n\r\nfunction shouldUpdate(oldProps, newProps) {\r\n    if (oldProps.text.id !== newProps.text.id) {\r\n        return false;\r\n    } else if (oldProps.text.text !== newProps.text.text) {\r\n        return false;\r\n    } else if (oldProps.text.item !== newProps.text.item) {\r\n        return false;\r\n    } else if (oldProps.text.modifier !== newProps.text.modifier) {\r\n        return false;\r\n    } else if (oldProps.updateText !== newProps.updateText) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst SectionText = memo((props) => {\r\n    const game = useContext(GameContext);\r\n\r\n    const onTextUpdate = (e) => {\r\n        const newText = JSON.parse(JSON.stringify(props.text));\r\n        newText.text = e.target.value;\r\n        props.updateText(newText, props.text.id)\r\n    }\r\n\r\n    const updateItem = (item) => {\r\n        const newText = JSON.parse(JSON.stringify(props.text));\r\n        if (item !== \"\") {\r\n            newText.item = item;\r\n        } else {\r\n            newText.item = null;\r\n        }\r\n        props.updateText(newText, props.text.id)\r\n    }\r\n\r\n    const updateModifier = (modifier) => {\r\n        const newText = JSON.parse(JSON.stringify(props.text));\r\n        newText.modifier = modifier;\r\n        props.updateText(newText, props.text.id)\r\n    }\r\n\r\n    return(\r\n        <div className={`${styles.textContainer}`}>\r\n            <textarea className={`${styles.textarea}`} value={props.text.text} placeholder=\"Text\" onChange={onTextUpdate} />\r\n            <ItemDropdown type=\"text\" item={props.text.item} game={game} updateItem={updateItem} />\r\n            <ModifierDropdown type=\"text\" item={props.text.item} modifier={props.text.modifier} updateModifier={updateModifier} />\r\n            <Icon src=\"/icons/up.png\" id={\"moveTextUp-\" + props.text.id} size=\"small\" hover={true} hidden={props.text.id === 0} altText=\"Up\" onClick={ () => props.moveTextUp(props.text.id) } />\r\n            <Icon src=\"/icons/down.png\" id={\"moveTextDown-\" + props.text.id} size=\"small\" hover={true} hidden={props.text.id === props.max} altText=\"Down\" onClick={ () => props.moveTextDown(props.text.id) } />\r\n            <Icon src=\"/icons/delete.png\" id={\"deleteText-\" + props.text.id} size=\"small\" hover={true} hidden={false} grayscale={true} altText=\"X\" onClick={ () => props.deleteText(props.text.id) } />\r\n        </div>\r\n    );\r\n}, shouldUpdate);\r\n\r\nexport default SectionText;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport styles from'./styles/SectionItem.Module.css';\r\nimport ItemDropdown from './ItemDropdown';\r\nimport ModifierDropdown from './ModifierDropdown';\r\nimport Icon from '../../../common/Icon';\r\n\r\nfunction shouldUpdate(oldProps, newProps) {\r\n    if (oldProps.item.id !== newProps.item.id) {\r\n        return false;\r\n    } else if (oldProps.item.value !== newProps.item.value) {\r\n        return false;\r\n    } else if (oldProps.item.modifier !== newProps.item.modifier) {\r\n        return false;\r\n    } else if (oldProps.updateItem !== newProps.updateItem) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst SectionItem = React.memo((props) => {\r\n    const updateItem = (item) => {\r\n        const newItem = JSON.parse(JSON.stringify(props.item));\r\n        newItem.value = item;\r\n        props.updateItem(newItem, props.item.id);\r\n    }\r\n\r\n    const updateModifier = (modifier) => {\r\n        const newItem = JSON.parse(JSON.stringify(props.item));\r\n        newItem.modifier = modifier;\r\n        props.updateItem(newItem, props.item.id);\r\n    }\r\n\r\n    return(\r\n        <div className={`${styles.itemContainer}`}>\r\n            <ItemDropdown type=\"section\" item={props.item.value} updateItem={updateItem} />\r\n            <ModifierDropdown type=\"section\" item={props.item.value} modifier={props.item.modifier} updateModifier={updateModifier} />\r\n            <Icon src=\"/icons/up.png\" size=\"small\" hover={true} hidden={props.item.id === 0} altText=\"Up\" onClick={ () => props.moveItemUp(props.item.id) } />\r\n            <Icon src=\"/icons/down.png\" size=\"small\" hover={true} hidden={props.item.id === props.max} altText=\"Down\" onClick={ () => props.moveItemDown(props.item.id) } />\r\n            <Icon src=\"/icons/delete.png\" size=\"small\" hover={true} hidden={false} grayscale={true} altText=\"X\" onClick={ () => props.deleteItem(props.item.id) } />\r\n        </div>\r\n    );\r\n}, shouldUpdate);\r\n\r\nexport default SectionItem;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport styles from './styles/PreviewImage.Module.css';\r\n\r\nclass PreviewImage extends React.Component {\r\n    render() {\r\n        if (this.props.image == null || this.props.image === '') {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <img\r\n                    className={`${styles.img}`}\r\n                    src={this.props.image}\r\n                    alt=\"\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewImage;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport PreviewImage from './PreviewImage';\r\nimport Icon from '../../../common/Icon';\r\nimport styles from './styles/SectionImage.Module.css';\r\n\r\nfunction shouldUpdate(oldProps, newProps) {\r\n    if (oldProps.image !== newProps.image) {\r\n        return false;\r\n    } else if (oldProps.updateImage !== newProps.updateImage) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst SectionImage = React.memo((props) => {\r\n    const getBase64 = (file, callback) => {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            callback(reader.result)\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n\r\n    let deleteIcon;\r\n    if (props.image != null) {\r\n        deleteIcon = <Icon src=\"/icons/delete.png\" size=\"small\" hover={true} grayscale={true} altText=\"X\" onClick={props.deleteImage} />\r\n    }\r\n\r\n    return(\r\n        <div className={`${styles.imageField}`}>\r\n            <input type=\"file\" onChange={ (e) => { getBase64(e.target.files[0], props.updateImage) } } />\r\n            {deleteIcon}\r\n            <PreviewImage image={props.image} />\r\n        </div>\r\n    );\r\n}, shouldUpdate);\r\n\r\nexport default SectionImage;\r\n","/** @format */\r\n\r\nimport { memo } from 'react';\r\nimport Button from '../../../common/Button';\r\nimport styles from './styles/SectionState.Module.css';\r\nimport areShallowEqual from 'are-shallow-equal';\r\n\r\nfunction shouldUpdate(oldProps, newProps) {\r\n    if (areShallowEqual(oldProps, newProps)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nconst SectionState = memo((props) => {\r\n    const onStateValueChange = (key, value) => {\r\n        // JSON stringify, then JSON parse to make a deep copy.\r\n        let newState = JSON.parse(JSON.stringify(props.state));\r\n        newState[key].value = value;\r\n        props.updateState(newState);\r\n    }\r\n\r\n    const onStateShownChange = (key, value) => {\r\n        // JSON stringify, then JSON parse to make a deep copy.\r\n        let newState = JSON.parse(JSON.stringify(props.state));\r\n        newState[key].shown = value;\r\n        props.updateState(newState);\r\n    }\r\n\r\n    if (props.state != null) {\r\n        return(\r\n            <div>\r\n                <div className={`${styles.stateField}`}>\r\n                    {props.state.keys.map((key) =>\r\n                        <div className={`${styles.stateField}`} key={key}>\r\n                            <label className={`${styles.label}`} htmlFor={\"state-\" + key + \"-\" + props.sectionId}>{key}</label>\r\n                            <input type=\"text\" className={styles.textInput} defaultValue={props.state[key].value} onChange={ (e) => { onStateValueChange(key, e.target.value) } } />\r\n                            <input type=\"checkbox\" className={styles.checkbox} checked={props.state[key].shown} onChange={ (e) => { onStateShownChange(key, e.target.checked) } } />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <Button text=\"Delete State\" size=\"medium\" onClick={props.deleteState} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <Button text=\"Add State\" size=\"medium\" onClick={props.addState} />\r\n    );\r\n}, shouldUpdate);\r\n\r\nexport default SectionState;\r\n","import performFolderEditAction from './performFolderEditAction';\r\n\r\nexport default function getNewFolder(folderEdit, folder, gameInfo) {\r\n    let newFolder = JSON.parse(JSON.stringify(folder));\r\n    for (const action of folderEdit.value) {\r\n        newFolder = performFolderEditAction(newFolder, action, gameInfo);\r\n    }\r\n\r\n    return newFolder;\r\n}","import { useContext}  from 'react';\r\nimport Icon from '../../../common/Icon';\r\nimport Button from '../../../common/Button';\r\nimport GameContext from '../../../common/GameContext';\r\nimport performFolderEditAction from '../../../common/functions/performFolderEditAction';\r\nimport getNewFolder from '../../../common/functions/getNewFolder';\r\nimport styles from './styles/SectionFolderEdit.Module.css';\r\n\r\nfunction ItemOption(props) {\r\n    const gameInfo = useContext(GameContext);\r\n\r\n    if (props.item !== -1) {\r\n        return(\r\n            <option value={props.slot} key={props.slot}>{parseInt(props.slot) + 1}. {gameInfo.Items[props.item].name} {props.modifier}</option>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction ItemDropdown(props) {\r\n    const gameInfo = useContext(GameContext);\r\n\r\n    // For Reg/Default and Remove, return a list of items in the folder\r\n    // For Add, return a list of all possible items\r\n    // For Swap and Tag, return 2 lists of items in the folder\r\n    // For Replace, return a list of items in the folder, and a list of all possible items.\r\n    // For Sort, return a list of the sort types for the game, and a checkbox to reverse the sort.\r\n    if ((props.action.action === \"Reg\" && props.id === 1) || (props.action.action === \"Default\" && props.id === 1) || (props.action.action === \"Remove\" && props.id === 1) || props.action.action === \"Swap\" || (props.action.action === \"Replace\" && props.id === 1) || props.action.action === \"Tag\") {\r\n        return (\r\n            <select value={props.action[\"item\" + props.id]} className={`${styles.select} ${styles.itemDropdown}`} onChange={ (e) => { props.onUpdate(props.action.id, e.target.value) } }>\r\n                <option value={-1}> </option>\r\n                {props.folder.map((item) =>\r\n                    <ItemOption key={item.slot} slot={item.slot} item={item.item} modifier={item.modifier} game={props.game} />\r\n                )}\r\n            </select>\r\n        )\r\n    } else if ((props.action.action === \"Add\" && props.id === 1) || (props.action.action === \"Replace\" && props.id === 2)) {\r\n        // Generate a list of all items with modifiers\r\n        const itemList = [];\r\n        for (let item of gameInfo.Items) {\r\n            if (gameInfo.modifiers) {\r\n                for (let modifier of item.modifiers) {\r\n                    itemList.push({\r\n                        id: item.id,\r\n                        name: item.name,\r\n                        modifier: modifier\r\n                    });\r\n                }\r\n            } else {\r\n                itemList.push({\r\n                    id: item.id,\r\n                    name: item.name\r\n                })\r\n            }\r\n        }\r\n        return (\r\n            <select value={props.action[\"item\" + props.id] + (gameInfo.modifiers ? (\"-\" + props.action[\"modifier\" + props.id]) : \"\")} className={`${styles.select} ${styles.itemDropdown}`} onChange={ (e) => { props.onUpdate(props.action.id, e.target.value) } }>\r\n                <option value={-1}> </option>\r\n                {itemList.map((item) =>\r\n                    <option value={item.id + (gameInfo.modifiers ? (\"-\" + item.modifier) : \"\")} key={item.id + (gameInfo.modifiers ? item.modifier : \"\")}>{item.name} {item.modifier}</option>\r\n                )}\r\n            </select>\r\n        )\r\n    } else if ((props.action.action === \"Sort\") && props.id === 1) {\r\n        return(\r\n            <select value={props.action.item1 + (props.action.item2 ? \"-r\" : \"\")} className={`${styles.select} ${styles.itemDropdown}`} onChange={ (e) => { props.onUpdate(props.action.id, e.target.value) } }>\r\n                <option value={\"\"}> </option>\r\n                {gameInfo.sortTypes.map((sortType) =>\r\n                    <option value={sortType}>{sortType}</option>\r\n                )}\r\n                {gameInfo.sortTypes.map((sortType) =>\r\n                    <option value={sortType + \"-r\"}>R. {sortType}</option>\r\n                )}\r\n            </select>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction Action(props) {\r\n    const gameInfo = useContext(GameContext);\r\n\r\n    // For formatting purposes, add an extra spacer div between the 2 dropdowns for actions that require both.\r\n    let secondRow;\r\n    if (props.action.action === \"Replace\" || props.action.action === \"Swap\" || props.action.action === \"Tag\") {\r\n        secondRow = <div className={`${styles.wrapper}`}>\r\n            <div className={`${styles.spacer}`} />\r\n            <ItemDropdown action={props.action} id={2} folder={props.folder} onUpdate={props.updateItem2} />\r\n        </div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${styles.wrapper}`}>\r\n                <select value={props.action.action} className={`${styles.select}`} onChange={ (e) => { props.updateAction(props.action.id, e.target.value) } }>\r\n                    <option value=\"\"> </option>\r\n                    {gameInfo.actionTypes.map((action) =>\r\n                        <option key={action} value={action}>{action}</option>\r\n                    )}\r\n                </select>\r\n                <ItemDropdown action={props.action} id={1} folder={props.folder} onUpdate={props.updateItem1} />\r\n                <Icon src=\"/icons/delete.png\" id={\"deleteAction-\" + props.action.id} size=\"small\" altText=\"X\" hover={true} grayscale={true} onClick={ () => { props.deleteAction(props.action.id) } } />\r\n            </div>\r\n            {secondRow}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ActionsList(props) {\r\n    const gameInfo = useContext(GameContext);\r\n    // JSON stringify, then JSON parse to make a deep copy.\r\n    let tempFolder = JSON.parse(JSON.stringify(props.folderEdit.prevFolder));\r\n    const actionsList = [];\r\n\r\n    for (const action of props.folderEdit.value) {\r\n        actionsList.push(<Action key={action.id} action={action} folder={tempFolder} updateAction={props.updateAction} updateItem1={props.updateItem1} updateItem2={props.updateItem2} deleteAction={props.deleteAction} />)\r\n\r\n        tempFolder = performFolderEditAction(tempFolder, action, gameInfo);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {actionsList}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SectionFolderEdit(props) {\r\n    const gameInfo = useContext(GameContext);\r\n\r\n    const addAction = () => {\r\n        // JSON stringify, then JSON parse to make a deep copy.\r\n        let newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\r\n\r\n        newFolderEdit.value.push({\r\n            id: newFolderEdit.value.length,\r\n            action: \"\",\r\n            item1: -1,\r\n            modifier1: \"\",\r\n            item2: -1,\r\n            modifier2: \"\"\r\n        });\r\n        newFolderEdit.shown = true;\r\n\r\n        props.updateFolderEdit(newFolderEdit);\r\n    }\r\n\r\n    const updateAction = (id, action) => {\r\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\r\n\r\n        newFolderEdit.value[id].action = action;\r\n        // Reset items when a new action is selected.\r\n        newFolderEdit.value[id].item1 = -1;\r\n        newFolderEdit.value[id].modifier1 = null;\r\n        // For sorts, update item2 to be false to indicate it won't be a reverse sort\r\n        if (action === \"Sort\") {\r\n            newFolderEdit.value[id].item2 = false;\r\n        } else {\r\n            newFolderEdit.value[id].item2 = -1;\r\n            newFolderEdit.value[id].modifier2 = null;\r\n        }\r\n\r\n        newFolderEdit.folder = getNewFolder(newFolderEdit, props.folderEdit.prevFolder, gameInfo);\r\n\r\n        props.updateFolderEdit(newFolderEdit);\r\n    }\r\n\r\n    const updateItem1 = (id, item) => {\r\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\r\n        // For the Add action, the value will be a combination of the item's ID and modifier\r\n        if (newFolderEdit.value[id].action === \"Add\") {\r\n            if (gameInfo.modifiers) {\r\n                const itemParts = item.split(\"-\");\r\n                newFolderEdit.value[id].item1 = itemParts[0];\r\n                newFolderEdit.value[id].modifier1 = itemParts[1];\r\n            } else {\r\n                newFolderEdit.value[id].item1 = item;\r\n            }\r\n        } else if (newFolderEdit.value[id].action === \"Sort\") {\r\n            if (item.includes(\"-\")) {\r\n                const itemParts = item.split(\"-\");\r\n                newFolderEdit.value[id].item1 = itemParts[0];\r\n                newFolderEdit.value[id].item2 = true;\r\n            } else {\r\n                newFolderEdit.value[id].item1 = item;\r\n                newFolderEdit.value[id].item2 = false;\r\n            }\r\n        } else {\r\n            newFolderEdit.value[id].item1 = item;\r\n        }\r\n\r\n        newFolderEdit.folder = getNewFolder(newFolderEdit, props.folderEdit.prevFolder, gameInfo);\r\n\r\n        props.updateFolderEdit(newFolderEdit)\r\n    }\r\n\r\n    const updateItem2 = (id, item) => {\r\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\r\n        // For the Replace action, the value will be a combination of the item's ID and modifier\r\n        if (newFolderEdit.value[id].action === \"Replace\") {\r\n            if (gameInfo.modifiers) {\r\n                const itemParts = item.split(\"-\");\r\n                newFolderEdit.value[id].item2 = itemParts[0];\r\n                newFolderEdit.value[id].modifier2 = itemParts[1];\r\n            } else {\r\n                newFolderEdit.value[id].item2 = item;\r\n            }\r\n        } else {\r\n            newFolderEdit.value[id].item2 = item;\r\n        }\r\n\r\n        newFolderEdit.folder = getNewFolder(newFolderEdit, props.folderEdit.prevFolder, gameInfo);\r\n\r\n        props.updateFolderEdit(newFolderEdit)\r\n    }\r\n\r\n    const deleteAction = (id) => {\r\n        const newFolderEdit = JSON.parse(JSON.stringify(props.folderEdit));\r\n        newFolderEdit.value.splice(id, 1);\r\n\r\n        newFolderEdit.folder = getNewFolder(newFolderEdit, props.folderEdit.prevFolder, gameInfo);\r\n\r\n        props.updateFolderEdit(newFolderEdit);\r\n    }\r\n\r\n    if (props.folderEdit != null) {\r\n        return(\r\n            <div className={styles.wrapper}>\r\n                <ActionsList folderEdit={props.folderEdit} updateAction={updateAction} updateItem1={updateItem1} updateItem2={updateItem2} deleteAction={deleteAction} />\r\n                <Button text=\"Add Action\" size=\"medium\" className={`${styles.btn}`} onClick={addAction} />\r\n                <Button text=\"Delete Folder Edit\" size=\"medium\" className={`${styles.btn}`} onClick={props.deleteFolderEdit} />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <Button text=\"Add Folder Edit\" size=\"medium\" onClick={props.addFolderEdit} />\r\n    );\r\n}\r\n\r\nexport default SectionFolderEdit;","/** @format */\r\n\r\nimport { useCallback, useContext } from 'react';\r\nimport styles from './styles/Section.Module.css';\r\nimport GameContext from '../../../common/GameContext';\r\nimport Button from '../../../common/Button';\r\nimport Icon from '../../../common/Icon';\r\nimport SectionText from './SectionText';\r\nimport SectionItem from './SectionItem';\r\nimport SectionImage from './SectionImage';\r\nimport SectionState from './SectionState';\r\nimport SectionFolderEdit from './SectionFolderEdit';\r\n\r\nfunction Section(props) {\r\n    const gameInfo = useContext(GameContext);\r\n\r\n    const updateText = useCallback((text, id) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.text[id] = text;\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const addText = useCallback((e) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        e.preventDefault();\r\n\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.text.push({\r\n            id: newSection.text.length,\r\n            text: '',\r\n        });\r\n        props.setSection(newSection, props.section.id)\r\n    }, [props]);\r\n\r\n    const moveTextUp = useCallback((id) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n\r\n        let chosenText = newSection.text[id];\r\n        chosenText.id = id - 1;\r\n        let aboveText = newSection.text[id - 1];\r\n        aboveText.id = id;\r\n\r\n        newSection.text[id] = aboveText;\r\n        newSection.text[id - 1] = chosenText;\r\n\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const moveTextDown = useCallback((id) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n\r\n        let chosenText = newSection.text[id];\r\n        chosenText.id = id + 1;\r\n        let belowText = newSection.text[id + 1];\r\n        belowText.id = id;\r\n\r\n        newSection.text[id] = belowText;\r\n        newSection.text[id + 1] = chosenText;\r\n\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const deleteText = useCallback((id) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n\r\n        for (let i = id + 1; i < newSection.text.length; i++) {\r\n            newSection.text[i].id--;\r\n        }\r\n\r\n        newSection.text.splice(id, 1);\r\n\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const updateItem = useCallback((item, id) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        const newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.items[id] = item;\r\n        props.setSection(newSection, props.section.id)\r\n    }, [props]);\r\n\r\n    const addItem = useCallback(() => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.items.push({\r\n            id: newSection.items.length,\r\n            value: 0\r\n        });\r\n        props.setSection(newSection, props.section.id)\r\n    }, [props]);\r\n\r\n    const moveItemUp = useCallback((id) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n\r\n        let chosenItem = newSection.items[id];\r\n        chosenItem.id = id - 1;\r\n        let aboveItem = newSection.items[id - 1];\r\n        aboveItem.id = id;\r\n\r\n        newSection.items[id] = aboveItem;\r\n        newSection.items[id - 1] = chosenItem;\r\n\r\n        props.setSection(newSection, props.section.id)\r\n    }, [props]);\r\n\r\n    const moveItemDown = useCallback((id) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n\r\n        let chosenItem = newSection.items[id];\r\n        chosenItem.id = id + 1;\r\n        let belowItem = newSection.items[id + 1];\r\n        belowItem.id = id;\r\n\r\n        newSection.items[id] = belowItem;\r\n        newSection.items[id + 1] = chosenItem;\r\n\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const deleteItem = useCallback((id) =>  {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n\r\n        for (let i = id + 1; i < newSection.items.length; i++) {\r\n            newSection.items[i].id--;\r\n        }\r\n\r\n        newSection.items.splice(id, 1);\r\n\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const updateImage = useCallback((image) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.image = image;\r\n        props.setSection(newSection, props.section.id)\r\n    }, [props]);\r\n\r\n    const deleteImage = useCallback(() => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.image = null;\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const updateState = useCallback((state) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.state = state;\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const addState = useCallback((e) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.state = props.getLastState(props.section.id);\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const deleteState = useCallback(() => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.state = null;\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const updateFolderEdit = (folderEdit) => {\r\n        // JSON stringify, then JSON parse to make a deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.folderEdit = folderEdit;\r\n        props.setSection(newSection, props.section.id);\r\n    }\r\n\r\n    const addFolderEdit = useCallback((e) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.folderEdit = props.getLastFolderEdit(props.section.id);\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    const deleteFolderEdit = useCallback((e) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSection = JSON.parse(JSON.stringify(props.section));\r\n        newSection.folderEdit = null;\r\n        props.setSection(newSection, props.section.id);\r\n    }, [props]);\r\n\r\n    return(\r\n        <div id={\"section-\" + props.section.id} className={`${styles.section}`}>\r\n            <h3 className={`${styles.header}`}>Section {props.section.id + 1}</h3>\r\n            <Icon src=\"/icons/up.png\" id={\"moveSectionUp-\" + props.section.id} size=\"small\" altText=\"Up\" hover={true} hidden={props.section.id === 0} onClick={ () => { props.moveSectionUp(props.section.id) } } />\r\n            <Icon src=\"/icons/down.png\" id={\"moveSectionDown-\" + props.section.id} size=\"small\" altText=\"Down\" hover={true} hidden={props.section.id === props.max} onClick={ () => { props.moveSectionDown(props.section.id) } } />\r\n            <Icon src=\"/icons/delete.png\" id={\"deleteSection-\" + props.section.id} size=\"small\" altText=\"X\" hover={true} grayscale={true} onClick={ () => { props.deleteSection(props.section.id) } } />\r\n            <div className={`${styles.wrapper}`}>\r\n                <div className={`${styles.textContainer}`}>\r\n                    <span className={`${styles.label}`}>Text</span>\r\n                    {props.section.text.map((text) =>\r\n                        <SectionText\r\n                            key={\"text-\" + text.id}\r\n                            sectionId={props.section.id}\r\n                            text={text}\r\n                            max={props.section.text.length - 1}\r\n                            updateText={updateText}\r\n                            moveTextUp={moveTextUp}\r\n                            moveTextDown={moveTextDown}\r\n                            deleteText={deleteText}\r\n                        />\r\n                    )}\r\n                    <Button text=\"Add Text\" size=\"medium\" onClick={addText} />\r\n                </div>\r\n                <div className={`${styles.itemsContainer}`}>\r\n                    <span className={`${styles.label}`}>{gameInfo.name}s</span>\r\n                    {props.section.items.map((item) =>\r\n                        <SectionItem\r\n                            key={\"item-\" + item.id}\r\n                            item={item}\r\n                            max={props.section.items.length - 1}\r\n                            updateItem={updateItem}\r\n                            moveItemUp={moveItemUp}\r\n                            moveItemDown={moveItemDown}\r\n                            deleteItem={deleteItem}\r\n                        />\r\n                    )}\r\n                    <Button text={\"Add \" + gameInfo.name} size=\"medium\" onClick={addItem} />\r\n                </div>\r\n                <div className={`${styles.imageContainer}`}>\r\n                    <span className={`${styles.label}`}>Image</span>\r\n                    <SectionImage image={props.section.image} updateImage={updateImage} deleteImage={deleteImage} />\r\n                </div>\r\n                <div className={`${styles.stateContainer}`}>\r\n                    <span className={`${styles.label}`}>State</span>\r\n                    <SectionState state={props.section.state} updateState={updateState} deleteState={deleteState} addState={addState} />\r\n                </div>\r\n                <div className={`${styles.folderEditContainer}`}>\r\n                    <span className={`${styles.label}`}>Folder Edit</span>\r\n                    <SectionFolderEdit folderEdit={props.section.folderEdit} updateFolderEdit={updateFolderEdit} deleteFolderEdit={deleteFolderEdit} addFolderEdit={addFolderEdit} />\r\n                </div>\r\n            </div>\r\n            <Button text=\"Add Section\" id={\"addSection-\" + (props.section.id + 1)} size=\"medium\" onClick={ () => { props.addSection(props.section.id + 1) } } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Section;\r\n","/** @format */\r\n\r\nimport { useState, useEffect, useCallback, useContext } from 'react';\r\nimport RouteContext from '../../common/RouteContext';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Section from './Section/Section';\r\n\r\nimport styles from './styles/SectionList.Module.css';\r\n\r\nfunction SectionList(props) {\r\n    const {\r\n        route,\r\n        setContext\r\n    } = useContext(RouteContext);\r\n\r\n    const [numSections, setNumSections] = useState(Math.min(10, route.sections.length));\r\n\r\n    const [displayedSections, setDisplayedSections] = useState(route.sections.slice(0, numSections));\r\n    const addMoreSections = () => {\r\n        setDisplayedSections(route.sections.slice(0, Math.min(numSections + 10, route.sections.length)))\r\n        setNumSections(Math.min(numSections + 10, route.sections.length));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDisplayedSections(route.sections.slice(0, numSections));\r\n    }, [route.sections, numSections]);\r\n\r\n    const setSection = (section, id) => {\r\n        const newSections = [...route.sections];\r\n        newSections[id] = section;\r\n        setContext({ route: { ...route, sections: newSections } });\r\n    }\r\n\r\n    const addSection = useCallback((id) => {\r\n        let newSections = [...route.sections];\r\n        let newSection = {\r\n            id: id,\r\n            text: [],\r\n            items: [],\r\n        };\r\n\r\n        newSections.splice(id, 0, newSection);\r\n\r\n        for (let i = id + 1; i < newSections.length; i++) {\r\n            newSections[i].id++;\r\n        }\r\n\r\n        setContext({ route: { ...route, sections: newSections } });\r\n        setNumSections(numSections + 1);\r\n    }, [route, setContext, numSections, setNumSections]);\r\n\r\n    const moveSectionUp = useCallback((id) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSections = JSON.parse(JSON.stringify(route.sections));\r\n\r\n        let chosenSection = newSections[id];\r\n        chosenSection.id = id - 1;\r\n        let aboveSection = newSections[id - 1];\r\n        aboveSection.id = id;\r\n\r\n        newSections[id] = aboveSection;\r\n        newSections[id - 1] = chosenSection;\r\n\r\n        setContext({ route: { ...route, sections: newSections } });\r\n    }, [route, setContext]);\r\n\r\n    const moveSectionDown = useCallback((id) => {\r\n        // Stringify then parse JSON to create deep copy.\r\n        let newSections = JSON.parse(JSON.stringify(route.sections));\r\n\r\n        let chosenSection = newSections[id];\r\n        chosenSection.id = id + 1;\r\n        let belowSection = newSections[id + 1];\r\n        belowSection.id = id;\r\n\r\n        newSections[id] = belowSection;\r\n        newSections[id + 1] = chosenSection;\r\n\r\n        setContext({ route: { ...route, sections: newSections } });\r\n    }, [route, setContext]);\r\n\r\n    const deleteSection = useCallback((id) => {\r\n        // JSON stringify, then JSON parse to make a deep copy.\r\n        let newSections = JSON.parse(JSON.stringify(route.sections));\r\n\r\n        for (let i = id + 1; i < newSections.length; i++) {\r\n            newSections[i].id--;\r\n        }\r\n\r\n        newSections.splice(id, 1);\r\n\r\n        setContext({ route: { ...route, sections: newSections } });\r\n    }, [route, setContext]);\r\n\r\n    const getLastState = (id) => {\r\n        // Check previous sections for the last state value\r\n        let state = null;\r\n        for (let i = id - 1; i >= 0; i--) {\r\n            if (route.sections[i].state != null) {\r\n                state = JSON.parse(JSON.stringify(route.sections[i].state));\r\n                break;\r\n            }\r\n        }\r\n\r\n        // If no state was found, use initialState\r\n        if (state == null) {\r\n            state = JSON.parse(JSON.stringify(route.initialState));\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    const getLastFolderEdit = (id) => {\r\n        // Check previous sections for the last folder edit value\r\n        let folderEdit = null;\r\n        for (let i = id - 1; i >= 0; i--) {\r\n            if (route.sections[i].folderEdit != null) {\r\n                folderEdit = JSON.parse(JSON.stringify(route.sections[i].folderEdit));\r\n                break;\r\n            }\r\n        }\r\n\r\n        // If no state was found, use initialState\r\n        if (folderEdit == null) {\r\n            folderEdit = JSON.parse(JSON.stringify(route.initialFolderEdit));\r\n        }\r\n\r\n        // Setup the previous folder to be the same as the starting folder, and clear the folder edit.\r\n        folderEdit.prevFolder = folderEdit.folder;\r\n        folderEdit.value = [{\r\n            id: 0,\r\n            action: \"\",\r\n            item1: -1,\r\n            modifier1: \"\",\r\n            item2: -1,\r\n            modifier2: \"\"\r\n        }];\r\n\r\n        return folderEdit;\r\n    }\r\n\r\n    return (\r\n        <div id=\"scrollableDiv\" className={`${styles.sectionList}`}>\r\n            <InfiniteScroll\r\n                dataLength={displayedSections}\r\n                next={addMoreSections}\r\n                hasMore={route.sections.length > displayedSections.length}\r\n                loader={\"Loading...\"}\r\n                scrollableTarget={\"scrollableDiv\"}\r\n            >\r\n                {displayedSections.map((section) =>\r\n                    <Section\r\n                        key={\"section-\" + section.id}\r\n                        section={section}\r\n                        setSection={setSection}\r\n                        max={route.sections.length - 1}\r\n                        moveSectionUp={moveSectionUp}\r\n                        moveSectionDown={moveSectionDown}\r\n                        addSection={addSection}\r\n                        deleteSection={deleteSection}\r\n                        getLastState={getLastState}\r\n                        getLastFolderEdit={getLastFolderEdit}\r\n                    />\r\n                )}\r\n                <div className=\"bottom-buffer\"> </div>\r\n            </InfiniteScroll>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SectionList;\r\n","/** @format */\r\n\r\nimport { useCallback, useContext } from 'react';\r\nimport styles from './styles/RouteInfo.Module.css';\r\nimport RouteContext from '../../common/RouteContext';\r\nimport Button from '../../common/Button';\r\n\r\nfunction RouteInfo(props) {\r\n    const {\r\n        route,\r\n        preview,\r\n        setContext\r\n    } = useContext(RouteContext);\r\n\r\n    const games = require(\"../../../resources/gamesList.json\");\r\n    const routes = require(\"../../../notes/routes.json\");\r\n\r\n    const generateDownload = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n\r\n            // Remove unnecessary values\r\n\r\n            console.log(route);\r\n\r\n            let a = document.createElement('a');\r\n            a.href = \"data:text/json;base64;charset=utf-8,\" + btoa(JSON.stringify(route));\r\n            a.download = route.path + \".json\";\r\n            a.click();\r\n        },\r\n        [route]\r\n    );\r\n\r\n    const importText = (text) => {\r\n        text = text.replace(/(\\r\\n|\\n|\\r)/gm, \"\\n\");\r\n        const lines = text.split(\"\\n\");\r\n        let newSections = [];\r\n\r\n        let sectionId = 0;\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            let line = lines[i];\r\n            const section = {\r\n                id: sectionId,\r\n                text: [],\r\n                items: []\r\n            }\r\n\r\n            let textId = 0;\r\n            while (line !== \"\") {\r\n                const text = {\r\n                    id: textId,\r\n                    text: line\r\n                }\r\n\r\n                section.text.push(text);\r\n                i++;\r\n                textId++;\r\n\r\n                if (i < lines.length) {\r\n                    line = lines[i];\r\n                } else {\r\n                    line = \"\";\r\n                }\r\n            }\r\n\r\n            newSections.push(section);\r\n            sectionId++;\r\n        }\r\n\r\n        setContext({ route: { ...route, sections: newSections } });\r\n    }\r\n\r\n    const importJSON = (file) => {\r\n        setContext({ route: JSON.parse(file) });\r\n    }\r\n\r\n    const handleUpload = (file, callback) => {\r\n        let reader = new FileReader();\r\n        reader.readAsText(file, \"UTF-8\");\r\n        reader.onload = function () {\r\n            callback(reader.result);\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n\r\n    const updateGame = useCallback((newGame) => {\r\n        let gameInfo = require('../../../resources/ItemNames.json');\r\n        if (newGame !== \"\" && newGame != null) {\r\n            gameInfo = require('../../../resources/' + newGame + '/ItemNames.json');\r\n        }\r\n\r\n        setContext({\r\n            route: {\r\n                ...route,\r\n                game: newGame\r\n            },\r\n            gameInfo: gameInfo\r\n        })\r\n    }, [route, setContext]);\r\n\r\n    return (\r\n        <div className={`${styles.routeInfo}`}>\r\n            <h2 className={`${styles.header}`}>Update your Route</h2>\r\n\r\n            <label htmlFor=\"title\" className={`${styles.label}`}>Route Name</label>\r\n            <input type=\"text\" name=\"title\" className={`${styles.textInput}`} defaultValue={route.title} onBlur={ (e) => setContext({ route: { ...route, title: e.target.value } }) } />\r\n\r\n            <label htmlFor=\"path\" className={`${styles.label}`}>Path</label>\r\n            <input type=\"text\" name=\"path\" className={`${styles.textInput}`} defaultValue={route.path} onBlur={ (e) => setContext({ route: { ...route, path: e.target.value } }) } />\r\n\r\n            <label htmlFor=\"game\" className={`${styles.label}`}>Game</label>\r\n            <select name=\"game\" className={`${styles.select}`} value={route.game} onChange={ (e) => updateGame(e.target.value) }>\r\n                <option value=\"\"> </option>\r\n                {games.map((game) =>\r\n                    <option key={game} value={game}>{routes[game].name}</option>\r\n                )}\r\n            </select>\r\n\r\n            <label htmlFor=\"textImport\" className={`${styles.label}`}>Import Text</label>\r\n            <input type=\"file\" name={\"textImport\"} className={`${styles.fileInput}`} onChange={(e) => handleUpload(e.target.files[0], importText)} />\r\n            <label htmlFor=\"jsonImport\" className={`${styles.label}`}>Import JSON</label>\r\n            <input type=\"file\" name={\"jsonImport\"} className={`${styles.fileInput}`} onChange={(e) => handleUpload(e.target.files[0], importJSON)} />\r\n\r\n            <div className={`${styles.wrapper}`}>\r\n                <Button text=\"Load Last Edit\" size=\"medium\" className={`${styles.btn}`} onClick={props.loadLastRouteEdit} />\r\n                <Button text=\"Save JSON File\" size=\"medium\" className={`${styles.btn}`} onClick={generateDownload} />\r\n                <Button text=\"Preview\" size=\"medium\" className={`${styles.btn}`} onClick={() => setContext({ preview: !preview }) } />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RouteInfo;\r\n","/** @format */\r\n\r\nimport { useState, useCallback, useMemo, Suspense } from 'react';\r\nimport styles from './styles/RouteForm.Module.css';\r\nimport Route from '../route/Route';\r\nimport SectionList from './SectionList';\r\nimport RouteInfo from './RouteInfo';\r\nimport useSuspenseResource from '../../common/functions/useSuspense';\r\nimport RouteContext from '../../common/RouteContext';\r\nimport GameContext from '../../common/GameContext';\r\n\r\nconst equal = require(\"deep-equal\");\r\n\r\nfunction RouteForm(props) {\r\n    const path = props.match.params.path;\r\n\r\n    const notesResource = useSuspenseResource(async () => {\r\n        const response = await fetch(\r\n            `${process.env.PUBLIC_URL}/notes/${path}.json`,\r\n        );\r\n\r\n        return await response.json();\r\n    }, [path]);\r\n\r\n    return (\r\n        <Suspense fallback=\"Loading...\">\r\n            <RouteFormImpl {...props} notesResource={notesResource} />\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nconst getInitialState = (path, game, route) => {\r\n    // If no game is specified, try setting the game based on the initial route object.\r\n    if (game == null) {\r\n        game = route.game\r\n    }\r\n\r\n    let gameInfo = require('../../../resources/ItemNames.json');\r\n    if (game !== \"\" && game != null) {\r\n        gameInfo = require('../../../resources/' + game + '/ItemNames.json');\r\n    }\r\n\r\n    return {\r\n        route: {\r\n            title: path != null ? route.title : \"\",\r\n            path: path,\r\n            game: path != null ? route.game : game,\r\n            version: path != null ? route.version : \"1.0\",\r\n            initialState: game != null ? gameInfo.initialState : {},\r\n            initialFolderEdit: game != null ? gameInfo.initialFolderEdit : {},\r\n            sections: path != null ? route.sections : [{\r\n                id: 0,\r\n                text: [],\r\n                items: []\r\n            }],\r\n        },\r\n        gameInfo: gameInfo,\r\n        preview: false,\r\n        numSections: path != null ? Math.min(10, route.sections.length) : 1\r\n    }\r\n}\r\n\r\nfunction RouteFormImpl(props) {\r\n    let initialPath = props.match.params.path;\r\n    let initialGame = props.match.params.gameId;\r\n    let initialRoute = {};\r\n    if (initialPath != null) {\r\n        initialRoute = props.notesResource.read();\r\n    }\r\n\r\n    const [state, setState] = useState(getInitialState(initialPath, initialGame, initialRoute));\r\n    const gameContext = useMemo(() => { return(state.gameInfo) }, [state.gameInfo]);\r\n\r\n    const setContext = useCallback(\r\n        updates => {\r\n            setState({...state, ...updates});\r\n        },\r\n        [state, setState]\r\n    );\r\n\r\n    const getContextValue = useCallback(\r\n        () => ({\r\n            ...state,\r\n            setContext\r\n        }),\r\n        [state, setContext]\r\n    );\r\n\r\n    const setNewRoute = (newRoute) => {\r\n        newRoute.preview = false;\r\n        newRoute.numSections = Math.min(10, newRoute.sections.length);\r\n\r\n        // If initial state is different, the state variables need to be updated\r\n        if (!equal(newRoute.initialState, state.gameInfo.initialState)) {\r\n            newRoute.initialState = state.gameInfo.initialState;\r\n\r\n            // TODO: Update state variables in each section to add new keys.\r\n        }\r\n\r\n        setState({ ...state, route: newRoute });\r\n    }\r\n\r\n    const loadLastRouteEdit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let newRoute = JSON.parse(localStorage.getItem('lastRouteEdit'));\r\n\r\n        if (newRoute != null) {\r\n            setNewRoute(newRoute);\r\n        } else {\r\n            alert(\r\n                'Error: No route found in local storage. Either there is nothing to load, or your route may have been too large. When your route gets large, try downloading the JSON file periodically to save your progress.',\r\n            );\r\n        }\r\n    }\r\n\r\n    const swapPreview = () => {\r\n        setState(prevState => ({\r\n            ...state,\r\n            preview: !prevState.preview\r\n        }));\r\n    }\r\n\r\n    if (state.preview) {\r\n        return(\r\n            <div>\r\n                <RouteContext.Provider value={getContextValue()}>\r\n                    <Route swapPreview={swapPreview}  />\r\n                </RouteContext.Provider>\r\n            </div>\r\n        );\r\n    } else {\r\n        return(\r\n            <form className={`${styles.wrapper} ${styles.form}`}>\r\n                <RouteContext.Provider value={getContextValue()}>\r\n                    <GameContext.Provider value={gameContext}>\r\n                        <RouteInfo\r\n                            loadLastRouteEdit={loadLastRouteEdit}\r\n                            swapPreview={swapPreview}\r\n                        />\r\n\r\n                        <SectionList\r\n                            sections={state.route.sections}\r\n                        />\r\n                    </GameContext.Provider>\r\n                </RouteContext.Provider>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RouteForm;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport styles from './styles/NotesHome.Module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../common/Button';\r\n\r\nlet games = require('../../resources/gamesList.json');\r\nlet routes = require('../../notes/routes.json');\r\n\r\nclass NotesHome extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.createRoute = this.createRoute.bind(this);\r\n    }\r\n\r\n    createRoute() {\r\n        this.props.history.push('/notes/createRoute');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page\">\r\n                <div className={'card ' + styles.wrapper}>\r\n                    <h1>Games</h1>\r\n                    <div className={`${styles.wrapper}`}>\r\n                        {games.map((gameId) => (\r\n                            <div\r\n                                className=\"col-2 col-t-3 col-m-6\"\r\n                                key={'routesList' + gameId}>\r\n                                <Link\r\n                                    to={'/notes/game/' + gameId}\r\n                                    className={`${styles.link}`}>\r\n                                    <img\r\n                                        className={`${styles.img}`}\r\n                                        src={'/gameArt/' + gameId + '.png'}\r\n                                        alt={gameId + '.png'}\r\n                                    />\r\n                                    <h4 className=\"gameLink\">\r\n                                        {routes[gameId].name}\r\n                                    </h4>\r\n                                </Link>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <Button\r\n                        text=\"Create New Route\"\r\n                        size=\"medium\"\r\n                        onClick={this.createRoute}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotesHome;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Switch } from 'react-router-dom';\r\nimport { Route as BrowserRoute } from 'react-router-dom';\r\n\r\nimport RoutesList from './RoutesList';\r\nimport Route from './route/Route';\r\nimport RouteForm from './routeForm/RouteForm';\r\nimport NotesHome from './NotesHome';\r\n\r\nclass NotesTool extends React.Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <Switch>\r\n                    <BrowserRoute\r\n                        path={'/notes/game/:gameId/route/:routePath'}\r\n                        component={Route}\r\n                    />\r\n                    <BrowserRoute\r\n                        path={'/notes/game/:gameId'}\r\n                        component={RoutesList}\r\n                    />\r\n                    <BrowserRoute\r\n                        path={'/notes/editRoute/:path'}\r\n                        component={RouteForm}\r\n                    />\r\n                    <BrowserRoute\r\n                        path={'/notes/createRoute/:gameId'}\r\n                        component={RouteForm}\r\n                    />\r\n                    <BrowserRoute\r\n                        path={'/notes/createRoute'}\r\n                        component={RouteForm}\r\n                    />\r\n                    <BrowserRoute path={'/notes'} component={NotesHome} />\r\n                </Switch>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotesTool;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Switch } from 'react-router-dom';\r\nimport { Route as BrowserRoute } from 'react-router-dom';\r\nimport NotesTool from './notes/NotesTool';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <Switch>\r\n                    <BrowserRoute path=\"/notes\" component={NotesTool} />\r\n                </Switch>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './styles/main.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}